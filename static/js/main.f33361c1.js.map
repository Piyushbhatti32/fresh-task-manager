{"version":3,"file":"static/js/main.f33361c1.js","mappings":"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","sources":["node_modules/moment/locale|sync|/^/.//.*$","src/config/firebase.ts","src/theme/themes.ts","src/theme/ThemeProvider.tsx","src/components/ViewToggle.tsx","src/database/schema.ts","src/database/DatabaseService.ts","src/database/TaskRepository.ts","src/stores/taskStore.ts","src/components/TaskItem.tsx","src/components/AnimatedEmptyState.tsx","src/components/TaskList.tsx","src/components/TaskGridView.tsx","src/components/TaskCard.tsx","src/components/TimelineView.tsx","src/components/InlinePomodoroTimer.tsx","src/utils/generateId.ts","src/contexts/NotificationContext.tsx","src/components/SubTaskList.tsx","src/components/TaskForm.tsx","src/components/PomodoroTimer.tsx","src/utils/timeUtils.ts","src/components/TaskDetail.tsx","src/screens/TasksScreen.tsx","src/components/CalendarView.tsx","src/screens/CalendarScreen.tsx","src/screens/StatsScreen.tsx","src/screens/SettingsScreen.tsx","src/screens/TaskDetailScreen.tsx","src/utils/storage.ts","src/screens/HomeScreen.tsx","src/components/AnimatedWelcome.tsx","src/services/userService.ts","src/screens/LoginScreen.tsx","src/theme/AppTheme.ts","src/screens/TeamScreen.tsx","src/stores/groupStore.ts","src/contexts/AuthContext.tsx","src/screens/GroupsScreen.tsx","src/screens/CreateTaskScreen.tsx","src/screens/EditTaskScreen.tsx","src/screens/ProfileScreen.tsx","src/screens/CompletedScreen.tsx","src/context/AuthContext.tsx","src/screens/CreateGroupScreen.tsx","src/components/Skeleton.tsx","src/screens/TemplatesScreen.tsx","src/components/TemplateForm.tsx","src/screens/CreateTemplateScreen.tsx","src/screens/TemplateDetailScreen.tsx","src/screens/PomodoroScreen.tsx","src/screens/AddCommentScreen.tsx","src/screens/ShareTaskScreen.tsx","src/navigation/AppNavigator.tsx","src/database/DatabaseProvider.tsx","src/theme/navigationTheme.ts","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 17582,\n\t\"./af.js\": 17582,\n\t\"./ar\": 93042,\n\t\"./ar-dz\": 54265,\n\t\"./ar-dz.js\": 54265,\n\t\"./ar-kw\": 92553,\n\t\"./ar-kw.js\": 92553,\n\t\"./ar-ly\": 85352,\n\t\"./ar-ly.js\": 85352,\n\t\"./ar-ma\": 67097,\n\t\"./ar-ma.js\": 67097,\n\t\"./ar-ps\": 76150,\n\t\"./ar-ps.js\": 76150,\n\t\"./ar-sa\": 84427,\n\t\"./ar-sa.js\": 84427,\n\t\"./ar-tn\": 7221,\n\t\"./ar-tn.js\": 7221,\n\t\"./ar.js\": 93042,\n\t\"./az\": 60458,\n\t\"./az.js\": 60458,\n\t\"./be\": 17596,\n\t\"./be.js\": 17596,\n\t\"./bg\": 93830,\n\t\"./bg.js\": 93830,\n\t\"./bm\": 27044,\n\t\"./bm.js\": 27044,\n\t\"./bn\": 58573,\n\t\"./bn-bd\": 13296,\n\t\"./bn-bd.js\": 13296,\n\t\"./bn.js\": 58573,\n\t\"./bo\": 25614,\n\t\"./bo.js\": 25614,\n\t\"./br\": 62041,\n\t\"./br.js\": 62041,\n\t\"./bs\": 91786,\n\t\"./bs.js\": 91786,\n\t\"./ca\": 75833,\n\t\"./ca.js\": 75833,\n\t\"./cs\": 52711,\n\t\"./cs.js\": 52711,\n\t\"./cv\": 71036,\n\t\"./cv.js\": 71036,\n\t\"./cy\": 84977,\n\t\"./cy.js\": 84977,\n\t\"./da\": 8770,\n\t\"./da.js\": 8770,\n\t\"./de\": 67342,\n\t\"./de-at\": 81566,\n\t\"./de-at.js\": 81566,\n\t\"./de-ch\": 87544,\n\t\"./de-ch.js\": 87544,\n\t\"./de.js\": 67342,\n\t\"./dv\": 82875,\n\t\"./dv.js\": 82875,\n\t\"./el\": 78536,\n\t\"./el.js\": 78536,\n\t\"./en-au\": 38617,\n\t\"./en-au.js\": 38617,\n\t\"./en-ca\": 79227,\n\t\"./en-ca.js\": 79227,\n\t\"./en-gb\": 59754,\n\t\"./en-gb.js\": 59754,\n\t\"./en-ie\": 37217,\n\t\"./en-ie.js\": 37217,\n\t\"./en-il\": 85418,\n\t\"./en-il.js\": 85418,\n\t\"./en-in\": 80800,\n\t\"./en-in.js\": 80800,\n\t\"./en-nz\": 67299,\n\t\"./en-nz.js\": 67299,\n\t\"./en-sg\": 76305,\n\t\"./en-sg.js\": 76305,\n\t\"./eo\": 8673,\n\t\"./eo.js\": 8673,\n\t\"./es\": 71301,\n\t\"./es-do\": 3187,\n\t\"./es-do.js\": 3187,\n\t\"./es-mx\": 48223,\n\t\"./es-mx.js\": 48223,\n\t\"./es-us\": 37634,\n\t\"./es-us.js\": 37634,\n\t\"./es.js\": 71301,\n\t\"./et\": 4976,\n\t\"./et.js\": 4976,\n\t\"./eu\": 11847,\n\t\"./eu.js\": 11847,\n\t\"./fa\": 74372,\n\t\"./fa.js\": 74372,\n\t\"./fi\": 41628,\n\t\"./fi.js\": 41628,\n\t\"./fil\": 56802,\n\t\"./fil.js\": 56802,\n\t\"./fo\": 42874,\n\t\"./fo.js\": 42874,\n\t\"./fr\": 9853,\n\t\"./fr-ca\": 87170,\n\t\"./fr-ca.js\": 87170,\n\t\"./fr-ch\": 22825,\n\t\"./fr-ch.js\": 22825,\n\t\"./fr.js\": 9853,\n\t\"./fy\": 68876,\n\t\"./fy.js\": 68876,\n\t\"./ga\": 93533,\n\t\"./ga.js\": 93533,\n\t\"./gd\": 82770,\n\t\"./gd.js\": 82770,\n\t\"./gl\": 98602,\n\t\"./gl.js\": 98602,\n\t\"./gom-deva\": 63059,\n\t\"./gom-deva.js\": 63059,\n\t\"./gom-latn\": 48212,\n\t\"./gom-latn.js\": 48212,\n\t\"./gu\": 23409,\n\t\"./gu.js\": 23409,\n\t\"./he\": 17210,\n\t\"./he.js\": 17210,\n\t\"./hi\": 4750,\n\t\"./hi.js\": 4750,\n\t\"./hr\": 51315,\n\t\"./hr.js\": 51315,\n\t\"./hu\": 47626,\n\t\"./hu.js\": 47626,\n\t\"./hy-am\": 91317,\n\t\"./hy-am.js\": 91317,\n\t\"./id\": 26892,\n\t\"./id.js\": 26892,\n\t\"./is\": 97577,\n\t\"./is.js\": 97577,\n\t\"./it\": 57628,\n\t\"./it-ch\": 3046,\n\t\"./it-ch.js\": 3046,\n\t\"./it.js\": 57628,\n\t\"./ja\": 92504,\n\t\"./ja.js\": 92504,\n\t\"./jv\": 25917,\n\t\"./jv.js\": 25917,\n\t\"./ka\": 64513,\n\t\"./ka.js\": 64513,\n\t\"./kk\": 94935,\n\t\"./kk.js\": 94935,\n\t\"./km\": 96661,\n\t\"./km.js\": 96661,\n\t\"./kn\": 89964,\n\t\"./kn.js\": 89964,\n\t\"./ko\": 98067,\n\t\"./ko.js\": 98067,\n\t\"./ku\": 61165,\n\t\"./ku-kmr\": 85158,\n\t\"./ku-kmr.js\": 85158,\n\t\"./ku.js\": 61165,\n\t\"./ky\": 11177,\n\t\"./ky.js\": 11177,\n\t\"./lb\": 2967,\n\t\"./lb.js\": 2967,\n\t\"./lo\": 81972,\n\t\"./lo.js\": 81972,\n\t\"./lt\": 58469,\n\t\"./lt.js\": 58469,\n\t\"./lv\": 33155,\n\t\"./lv.js\": 33155,\n\t\"./me\": 87935,\n\t\"./me.js\": 87935,\n\t\"./mi\": 74483,\n\t\"./mi.js\": 74483,\n\t\"./mk\": 32501,\n\t\"./mk.js\": 32501,\n\t\"./ml\": 73120,\n\t\"./ml.js\": 73120,\n\t\"./mn\": 20266,\n\t\"./mn.js\": 20266,\n\t\"./mr\": 19406,\n\t\"./mr.js\": 19406,\n\t\"./ms\": 80109,\n\t\"./ms-my\": 90864,\n\t\"./ms-my.js\": 90864,\n\t\"./ms.js\": 80109,\n\t\"./mt\": 22904,\n\t\"./mt.js\": 22904,\n\t\"./my\": 44067,\n\t\"./my.js\": 44067,\n\t\"./nb\": 21301,\n\t\"./nb.js\": 21301,\n\t\"./ne\": 81152,\n\t\"./ne.js\": 81152,\n\t\"./nl\": 76735,\n\t\"./nl-be\": 97761,\n\t\"./nl-be.js\": 97761,\n\t\"./nl.js\": 76735,\n\t\"./nn\": 37569,\n\t\"./nn.js\": 37569,\n\t\"./oc-lnc\": 20833,\n\t\"./oc-lnc.js\": 20833,\n\t\"./pa-in\": 3044,\n\t\"./pa-in.js\": 3044,\n\t\"./pl\": 34249,\n\t\"./pl.js\": 34249,\n\t\"./pt\": 87585,\n\t\"./pt-br\": 26826,\n\t\"./pt-br.js\": 26826,\n\t\"./pt.js\": 87585,\n\t\"./ro\": 62526,\n\t\"./ro.js\": 62526,\n\t\"./ru\": 62204,\n\t\"./ru.js\": 62204,\n\t\"./sd\": 43270,\n\t\"./sd.js\": 43270,\n\t\"./se\": 61541,\n\t\"./se.js\": 61541,\n\t\"./si\": 71921,\n\t\"./si.js\": 71921,\n\t\"./sk\": 49935,\n\t\"./sk.js\": 49935,\n\t\"./sl\": 46254,\n\t\"./sl.js\": 46254,\n\t\"./sq\": 59897,\n\t\"./sq.js\": 59897,\n\t\"./sr\": 42496,\n\t\"./sr-cyrl\": 11135,\n\t\"./sr-cyrl.js\": 11135,\n\t\"./sr.js\": 42496,\n\t\"./ss\": 32215,\n\t\"./ss.js\": 32215,\n\t\"./sv\": 84716,\n\t\"./sv.js\": 84716,\n\t\"./sw\": 50803,\n\t\"./sw.js\": 50803,\n\t\"./ta\": 31538,\n\t\"./ta.js\": 31538,\n\t\"./te\": 2302,\n\t\"./te.js\": 2302,\n\t\"./tet\": 25280,\n\t\"./tet.js\": 25280,\n\t\"./tg\": 14100,\n\t\"./tg.js\": 14100,\n\t\"./th\": 95385,\n\t\"./th.js\": 95385,\n\t\"./tk\": 736,\n\t\"./tk.js\": 736,\n\t\"./tl-ph\": 79726,\n\t\"./tl-ph.js\": 79726,\n\t\"./tlh\": 41873,\n\t\"./tlh.js\": 41873,\n\t\"./tr\": 36463,\n\t\"./tr.js\": 36463,\n\t\"./tzl\": 27491,\n\t\"./tzl.js\": 27491,\n\t\"./tzm\": 29500,\n\t\"./tzm-latn\": 80196,\n\t\"./tzm-latn.js\": 80196,\n\t\"./tzm.js\": 29500,\n\t\"./ug-cn\": 91287,\n\t\"./ug-cn.js\": 91287,\n\t\"./uk\": 35341,\n\t\"./uk.js\": 35341,\n\t\"./ur\": 36246,\n\t\"./ur.js\": 36246,\n\t\"./uz\": 55550,\n\t\"./uz-latn\": 77254,\n\t\"./uz-latn.js\": 77254,\n\t\"./uz.js\": 55550,\n\t\"./vi\": 78796,\n\t\"./vi.js\": 78796,\n\t\"./x-pseudo\": 22736,\n\t\"./x-pseudo.js\": 22736,\n\t\"./yo\": 28621,\n\t\"./yo.js\": 28621,\n\t\"./zh-cn\": 67601,\n\t\"./zh-cn.js\": 67601,\n\t\"./zh-hk\": 39053,\n\t\"./zh-hk.js\": 39053,\n\t\"./zh-mo\": 71248,\n\t\"./zh-mo.js\": 71248,\n\t\"./zh-tw\": 74725,\n\t\"./zh-tw.js\": 74725\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","import { initializeApp, getApp, getApps } from 'firebase/app';\nimport { initializeAuth, getReactNativePersistence, getAuth } from 'firebase/auth';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getAnalytics, isSupported } from 'firebase/analytics';\nimport { \n  getFirestore, \n  enableIndexedDbPersistence,\n  CACHE_SIZE_UNLIMITED,\n  enableNetwork,\n  disableNetwork,\n  initializeFirestore,\n  memoryLocalCache,\n  connectFirestoreEmulator\n} from 'firebase/firestore';\nimport NetInfo from '@react-native-community/netinfo';\nimport { Platform } from 'react-native';\n\n// Disable WebChannel warnings\nif (Platform.OS !== 'web') {\n  const originalWarn = console.warn;\n  console.warn = (...args) => {\n    if (args[0]?.includes?.('@firebase/firestore')) {\n      return;\n    }\n    originalWarn.apply(console, args);\n  };\n}\n\n// Replace this with your Firebase configuration from Firebase Console\n// Project Settings > General > Your apps > Web app\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBC1cpIK_tKqnylNgQSdrv7kxoEfzLGtDs\",\n  authDomain: \"task-manager-8dad8.firebaseapp.com\",\n  projectId: \"task-manager-8dad8\",\n  storageBucket: \"task-manager-8dad8.firebasestorage.app\",\n  messagingSenderId: \"865106052518\",\n  appId: \"1:865106052518:web:a2c54ec13870d813617b67\",\n  measurementId: \"G-5B3K05L5NZ\"\n};\n\n// Initialize Firebase\nlet app;\ntry {\n  if (getApps().length === 0) {\n    app = initializeApp(firebaseConfig);\n  } else {\n    app = getApp();\n  }\n} catch (error) {\n  console.error('Firebase initialization error:', error);\n  app = getApp();\n}\n\n// Initialize Auth with AsyncStorage persistence\nlet auth;\ntry {\n  if (!getAuth()) {\n    auth = initializeAuth(app, {\n      persistence: getReactNativePersistence(AsyncStorage)\n    });\n  } else {\n    auth = getAuth(app);\n  }\n} catch (error) {\n  console.error('Auth initialization error:', error);\n  auth = getAuth(app);\n}\n\n// Initialize Firestore with memory cache for better compatibility\nlet db;\ntry {\n  if (!getFirestore()) {\n    db = initializeFirestore(app, {\n      localCache: memoryLocalCache(),\n      experimentalForceLongPolling: true,\n      useFetchStreams: false\n    });\n  } else {\n    db = getFirestore(app);\n  }\n} catch (error) {\n  console.error('Firestore initialization error:', error);\n  db = getFirestore(app);\n}\n\n// Monitor network state and enable/disable Firestore network\nlet unsubscribeNetInfo;\ntry {\n  unsubscribeNetInfo = NetInfo.addEventListener(state => {\n    if (state.isConnected) {\n      console.log('Network connected');\n      enableNetwork(db).catch(console.error);\n    } else {\n      console.log('Network disconnected');\n      disableNetwork(db).catch(console.error);\n    }\n  });\n} catch (error) {\n  console.error('Network monitoring error:', error);\n}\n\n// Initialize Analytics only if supported\nlet analytics = null;\nisSupported().then(yes => {\n  if (yes) {\n    try {\n      analytics = getAnalytics(app);\n    } catch (error) {\n      console.error('Analytics initialization error:', error);\n    }\n  }\n});\n\n// Cleanup function\nexport const cleanup = () => {\n  if (unsubscribeNetInfo) {\n    unsubscribeNetInfo();\n  }\n};\n\n// Export initialized services\nexport { auth, db, analytics }; ","import { ThemeColors, ThemeName } from './ThemeTypes';\nimport { Appearance } from 'react-native';\n\n// Default light theme colors\nexport const lightColors: ThemeColors = {\n  primary: '#3498db',\n  secondary: '#2ecc71',\n  background: '#f5f5f5',\n  card: '#ffffff',\n  text: '#333333',\n  border: '#e1e1e1',\n  notification: '#ff3b30',\n  success: '#28a745',\n  error: '#dc3545',\n  warning: '#ffc107',\n  info: '#17a2b8',\n  inactive: '#a5a5a5',\n  placeholder: '#a0a0a0',\n  highlight: '#f0f0f0',\n  cardBackground: '#ffffff',\n  shadowColor: '#000000',\n  surface: '#ffffff',\n  surfaceVariant: '#f0f0f0',\n  outline: '#e1e1e1',\n};\n\n// Default dark theme colors\nexport const darkColors: ThemeColors = {\n  primary: '#2980b9',\n  secondary: '#27ae60',\n  background: '#121212',\n  card: '#1e1e1e',\n  text: '#f5f5f5',\n  border: '#2c2c2c',\n  notification: '#ff453a',\n  success: '#34c759',\n  error: '#ff3b30',\n  warning: '#ffcc00',\n  info: '#5ac8fa',\n  inactive: '#666666',\n  placeholder: '#666666',\n  highlight: '#2c2c2c',\n  cardBackground: '#2a2a2a',\n  shadowColor: '#000000',\n  surface: '#1e1e1e',\n  surfaceVariant: '#2c2c2c',\n  outline: '#2c2c2c',\n};\n\n// Blue theme\nexport const blueColors: {\n  light: ThemeColors;\n  dark: ThemeColors;\n} = {\n  light: {\n    ...lightColors,\n    primary: '#1565c0',\n    secondary: '#0288d1',\n    highlight: '#e3f2fd',\n  },\n  dark: {\n    ...darkColors,\n    primary: '#42a5f5',\n    secondary: '#29b6f6',\n    highlight: '#0d47a1',\n  },\n};\n\n// Green theme\nexport const greenColors: {\n  light: ThemeColors;\n  dark: ThemeColors;\n} = {\n  light: {\n    ...lightColors,\n    primary: '#2e7d32',\n    secondary: '#388e3c',\n    highlight: '#e8f5e9',\n  },\n  dark: {\n    ...darkColors,\n    primary: '#66bb6a',\n    secondary: '#81c784',\n    highlight: '#1b5e20',\n  },\n};\n\n// Purple theme\nexport const purpleColors: {\n  light: ThemeColors;\n  dark: ThemeColors;\n} = {\n  light: {\n    ...lightColors,\n    primary: '#7b1fa2',\n    secondary: '#9c27b0',\n    highlight: '#f3e5f5',\n  },\n  dark: {\n    ...darkColors,\n    primary: '#ba68c8',\n    secondary: '#ce93d8',\n    highlight: '#4a148c',\n  },\n};\n\n// Get colors for a specific theme and mode\nexport const getThemeColors = (\n  themeName: ThemeName,\n  isDark: boolean\n): ThemeColors => {\n  switch (themeName) {\n    case 'blue':\n      return isDark ? blueColors.dark : blueColors.light;\n    case 'green':\n      return isDark ? greenColors.dark : greenColors.light;\n    case 'purple':\n      return isDark ? purpleColors.dark : purpleColors.light;\n    case 'custom':\n      // Custom colors will be handled separately\n      return isDark ? darkColors : lightColors;\n    default:\n      return isDark ? darkColors : lightColors;\n  }\n};\n\n// Detect if the device prefers dark mode\nexport const isSystemDarkMode = (): boolean => {\n  return Appearance.getColorScheme() === 'dark';\n}; ","import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { Appearance, useColorScheme } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Theme, ThemeContextType, ThemeMode, ThemeName, ThemeColors } from './ThemeTypes';\nimport { getThemeColors, lightColors, darkColors, isSystemDarkMode } from './themes';\n\n// Default theme settings\nconst defaultTheme: Theme = {\n  name: 'default',\n  mode: 'system',\n  colors: lightColors,\n};\n\n// Create the theme context\nexport const ThemeContext = createContext<ThemeContextType>({\n  theme: defaultTheme,\n  isDark: false,\n  toggleTheme: () => {},\n  setThemeMode: () => {},\n  setThemeName: () => {},\n  customizeTheme: () => {},\n});\n\n// Custom hook to use theme\nexport const useTheme = () => useContext(ThemeContext);\n\n// Theme storage keys\nconst THEME_MODE_KEY = '@task_manager_theme_mode';\nconst THEME_NAME_KEY = '@task_manager_theme_name';\nconst CUSTOM_THEME_KEY = '@task_manager_custom_theme';\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\n  // Get the device color scheme\n  const colorScheme = useColorScheme();\n  \n  // State for theme settings\n  const [themeMode, setThemeMode] = useState<ThemeMode>('system');\n  const [themeName, setThemeName] = useState<ThemeName>('default');\n  const [customColors, setCustomColors] = useState<Partial<ThemeColors>>({});\n  \n  // Compute if dark mode should be active\n  const isDark = themeMode === 'system' \n    ? colorScheme === 'dark' \n    : themeMode === 'dark';\n  \n  // Current theme colors based on mode and name\n  const currentColors = React.useMemo(() => {\n    let colors = getThemeColors(themeName, isDark);\n    \n    // Apply custom colors if the theme is 'custom'\n    if (themeName === 'custom') {\n      colors = {\n        ...(isDark ? darkColors : lightColors),\n        ...customColors,\n      };\n    }\n    \n    return colors;\n  }, [themeName, isDark, customColors]);\n  \n  // The complete theme object\n  const theme: Theme = {\n    name: themeName,\n    mode: themeMode,\n    colors: currentColors,\n  };\n  \n  // Load saved theme settings on component mount\n  useEffect(() => {\n    const loadThemeSettings = async () => {\n      try {\n        const savedMode = await AsyncStorage.getItem(THEME_MODE_KEY);\n        const savedName = await AsyncStorage.getItem(THEME_NAME_KEY);\n        const savedCustom = await AsyncStorage.getItem(CUSTOM_THEME_KEY);\n        \n        if (savedMode) {\n          setThemeMode(savedMode as ThemeMode);\n        }\n        \n        if (savedName) {\n          setThemeName(savedName as ThemeName);\n        }\n        \n        if (savedCustom) {\n          setCustomColors(JSON.parse(savedCustom));\n        }\n      } catch (error) {\n        console.error('Failed to load theme settings:', error);\n      }\n    };\n    \n    loadThemeSettings();\n  }, []);\n  \n  // Listen for system appearance changes\n  useEffect(() => {\n    const subscription = Appearance.addChangeListener(({ colorScheme }) => {\n      if (themeMode === 'system') {\n        // Force re-render when system theme changes\n        setThemeMode('system');\n      }\n    });\n    \n    return () => {\n      subscription.remove();\n    };\n  }, [themeMode]);\n  \n  // Toggle between light and dark mode\n  const toggleTheme = () => {\n    const newMode = isDark ? 'light' : 'dark';\n    setThemeMode(newMode);\n    AsyncStorage.setItem(THEME_MODE_KEY, newMode);\n  };\n  \n  // Set a specific theme mode\n  const handleSetThemeMode = (mode: ThemeMode) => {\n    setThemeMode(mode);\n    AsyncStorage.setItem(THEME_MODE_KEY, mode);\n  };\n  \n  // Set a specific theme name\n  const handleSetThemeName = (name: ThemeName) => {\n    setThemeName(name);\n    AsyncStorage.setItem(THEME_NAME_KEY, name);\n  };\n  \n  // Customize theme colors (for 'custom' theme)\n  const customizeTheme = (colors: Partial<ThemeColors>) => {\n    setCustomColors(prev => {\n      const newColors = { ...prev, ...colors };\n      AsyncStorage.setItem(CUSTOM_THEME_KEY, JSON.stringify(newColors));\n      return newColors;\n    });\n    \n    // Switch to custom theme if not already\n    if (themeName !== 'custom') {\n      setThemeName('custom');\n      AsyncStorage.setItem(THEME_NAME_KEY, 'custom');\n    }\n  };\n  \n  const contextValue: ThemeContextType = {\n    theme,\n    isDark,\n    toggleTheme,\n    setThemeMode: handleSetThemeMode,\n    setThemeName: handleSetThemeName,\n    customizeTheme,\n  };\n  \n  return (\n    <ThemeContext.Provider value={contextValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}; ","import React from 'react';\nimport { View, TouchableOpacity, StyleSheet } from 'react-native';\nimport { useTheme } from '../theme/ThemeProvider';\n\nexport type ViewMode = 'list' | 'grid' | 'timeline';\n\ninterface ViewToggleProps {\n  mode: ViewMode;\n  onToggle: (mode: ViewMode) => void;\n}\n\nexport default function ViewToggle({ mode, onToggle }: ViewToggleProps) {\n  const { theme } = useTheme();\n\n  // Create list icon (three lines)\n  const renderListIcon = () => {\n    return (\n      <View style={[styles.iconContainer, { opacity: mode === 'list' ? 1 : 0.5 }]}>\n        {[0, 1, 2].map((i) => (\n          <View\n            key={i}\n            style={[\n              styles.listLine,\n              {\n                backgroundColor: mode === 'list' ? theme.colors.primary : theme.colors.text,\n              },\n            ]}\n          />\n        ))}\n      </View>\n    );\n  };\n\n  // Create grid icon (four squares)\n  const renderGridIcon = () => {\n    return (\n      <View\n        style={[\n          styles.iconContainer,\n          styles.gridContainer,\n          { opacity: mode === 'grid' ? 1 : 0.5 },\n        ]}\n      >\n        {[0, 1, 2, 3].map((i) => (\n          <View\n            key={i}\n            style={[\n              styles.gridSquare,\n              {\n                backgroundColor: mode === 'grid' ? theme.colors.primary : theme.colors.text,\n              },\n            ]}\n          />\n        ))}\n      </View>\n    );\n  };\n\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          backgroundColor: theme.colors.surface,\n          borderColor: theme.colors.outline,\n        },\n      ]}\n    >\n      <TouchableOpacity\n        style={[\n          styles.button,\n          mode === 'list' && {\n            backgroundColor: theme.colors.primaryContainer,\n          },\n        ]}\n        onPress={() => onToggle('list')}\n        activeOpacity={0.7}\n      >\n        {renderListIcon()}\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={[\n          styles.button,\n          mode === 'grid' && {\n            backgroundColor: theme.colors.primaryContainer,\n          },\n        ]}\n        onPress={() => onToggle('grid')}\n        activeOpacity={0.7}\n      >\n        {renderGridIcon()}\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    borderRadius: 12,\n    overflow: 'hidden',\n    borderWidth: 1,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  iconContainer: {\n    width: 20,\n    height: 20,\n    justifyContent: 'space-between',\n  },\n  listLine: {\n    height: 4,\n    width: '100%',\n    borderRadius: 2,\n  },\n  gridContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  gridSquare: {\n    height: 8,\n    width: 8,\n    margin: 1,\n    borderRadius: 1,\n  },\n}); ","// Define Priority here to avoid circular dependency\nexport type Priority = 'low' | 'medium' | 'high';\n\n// Database Schema Constants\n\n// Current schema version\nexport const SCHEMA_VERSION = 1;\n\n// Database structure\nexport interface DBTask {\n  id: string;\n  title: string;\n  description?: string;\n  priority: 'high' | 'medium' | 'low';\n  dueDate?: string;\n  completed: boolean;\n  categoryId?: string;\n  reminder?: number;\n  createdAt: string;\n  updatedAt: string;\n  tags?: Array<{ id: string; name: string; color: string }>;\n}\n\nexport interface DBComment {\n  id: string;\n  taskId: string;\n  text: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface DBAttachment {\n  id: string;\n  taskId: string;\n  fileName: string;\n  fileType: string;\n  fileUri: string;\n  createdAt: string;\n}\n\nexport interface DBTag {\n  id: string;\n  name: string;\n  color: string;\n  createdAt: string;\n}\n\nexport interface DBCategory {\n  id: string;\n  name: string;\n  color: string;\n  createdAt: string;\n}\n\nexport interface DBTaskTag {\n  taskId: string;\n  tagId: string;\n}\n\n// Database migrations\nexport const MIGRATIONS = {\n  1: [\n    // Create tasks table\n    `CREATE TABLE IF NOT EXISTS tasks (\n      id TEXT PRIMARY KEY,\n      title TEXT NOT NULL,\n      description TEXT,\n      dueDate TEXT,\n      priority TEXT NOT NULL DEFAULT 'medium',\n      completed INTEGER NOT NULL DEFAULT 0,\n      isMeeting INTEGER NOT NULL DEFAULT 0,\n      assignee TEXT,\n      createdAt TEXT NOT NULL,\n      updatedAt TEXT NOT NULL,\n      syncStatus TEXT NOT NULL DEFAULT 'pending',\n      categoryId TEXT,\n      reminder INTEGER\n    )`,\n\n    // Create comments table\n    `CREATE TABLE IF NOT EXISTS comments (\n      id TEXT PRIMARY KEY,\n      taskId TEXT,\n      content TEXT,\n      authorId TEXT,\n      createdAt TEXT NOT NULL,\n      updatedAt TEXT NOT NULL,\n      syncStatus TEXT NOT NULL DEFAULT 'pending',\n      FOREIGN KEY (taskId) REFERENCES tasks(id) ON DELETE CASCADE\n    )`,\n\n    // Create attachments table\n    `CREATE TABLE IF NOT EXISTS attachments (\n      id TEXT PRIMARY KEY,\n      taskId TEXT,\n      fileName TEXT,\n      fileType TEXT,\n      fileSize INTEGER,\n      localPath TEXT,\n      cloudUrl TEXT,\n      createdAt TEXT NOT NULL,\n      syncStatus TEXT NOT NULL DEFAULT 'pending',\n      FOREIGN KEY (taskId) REFERENCES tasks(id) ON DELETE CASCADE\n    )`,\n\n    // Create tags table\n    `CREATE TABLE IF NOT EXISTS tags (\n      id TEXT PRIMARY KEY,\n      name TEXT NOT NULL,\n      color TEXT NOT NULL,\n      createdAt TEXT NOT NULL\n    )`,\n\n    // Create task_tags table for many-to-many relationship\n    `CREATE TABLE IF NOT EXISTS task_tags (\n      taskId TEXT NOT NULL,\n      tagId TEXT NOT NULL,\n      PRIMARY KEY (taskId, tagId),\n      FOREIGN KEY (taskId) REFERENCES tasks(id) ON DELETE CASCADE,\n      FOREIGN KEY (tagId) REFERENCES tags(id) ON DELETE CASCADE\n    )`,\n\n    // Create indexes\n    `CREATE INDEX IF NOT EXISTS idx_tasks_dueDate ON tasks(dueDate)`,\n    `CREATE INDEX IF NOT EXISTS idx_tasks_priority ON tasks(priority)`,\n    `CREATE INDEX IF NOT EXISTS idx_tasks_completed ON tasks(completed)`,\n    `CREATE INDEX IF NOT EXISTS idx_comments_taskId ON comments(taskId)`,\n    `CREATE INDEX IF NOT EXISTS idx_attachments_taskId ON attachments(taskId)`,\n    `CREATE INDEX IF NOT EXISTS idx_task_tags_taskId ON task_tags(taskId)`,\n    `CREATE INDEX IF NOT EXISTS idx_task_tags_tagId ON task_tags(tagId)`\n  ]\n}; ","// Define custom interfaces for SQLite types\ninterface SQLResultSet {\n  insertId?: number;\n  rowsAffected: number;\n  rows: {\n    length: number;\n    item: (idx: number) => any;\n    _array: any[];\n    [index: number]: any;\n  };\n}\n\ninterface SQLTransaction {\n  executeSql: (\n    sqlStatement: string,\n    args?: any[],\n    callback?: (transaction: SQLTransaction, resultSet: SQLResultSet) => void,\n    errorCallback?: (transaction: SQLTransaction, error: Error) => boolean\n  ) => void;\n}\n\nimport * as SQLite from 'expo-sqlite';\nimport { MIGRATIONS, SCHEMA_VERSION, DBTask, DBComment, DBAttachment, DBTag, DBTaskTag } from './schema';\nimport { Platform } from 'react-native';\nimport * as FileSystem from 'expo-file-system';\nimport { Asset } from 'expo-asset';\nimport { generateId } from '../utils/generateId';\n\n/**\n * NOTE: Type Fixes for SQLite API\n * We've defined types using the SQLite import directly. For all transaction callbacks, use this pattern:\n * \n * this.db.transaction((tx) => {\n *   tx.executeSql(\n *     'YOUR SQL QUERY',\n *     [params],\n *     (_, result) => {\n *       // Success callback\n *     },\n *     (_, error) => {\n *       // Error callback\n *       return false;\n *     }\n *   );\n * });\n */\n\n/**\n * Database service to handle SQLite operations\n */\nclass DatabaseService {\n  private db: SQLite.SQLiteDatabase;\n  private initialized: boolean = false;\n\n  constructor() {\n    this.db = SQLite.openDatabaseSync('taskmanager.db');\n  }\n\n  /**\n   * Force the creation of all database tables\n   */\n  private async createAllTables(): Promise<void> {\n    try {\n      console.log('Creating all database tables...');\n      \n      // Create tables in the correct order to handle foreign key constraints\n      const createTableQueries = [\n        // Create tasks table first (no foreign key dependencies)\n        `CREATE TABLE IF NOT EXISTS tasks (\n          id TEXT PRIMARY KEY,\n          title TEXT NOT NULL,\n          description TEXT,\n          dueDate TEXT,\n          priority TEXT NOT NULL DEFAULT 'medium',\n          completed INTEGER NOT NULL DEFAULT 0,\n          categoryId TEXT,\n          reminder INTEGER,\n          createdAt TEXT NOT NULL,\n          updatedAt TEXT NOT NULL,\n          syncStatus TEXT NOT NULL DEFAULT 'pending'\n        )`,\n\n        // Create subtasks table (depends on tasks)\n        `CREATE TABLE IF NOT EXISTS subtasks (\n          id TEXT PRIMARY KEY,\n          taskId TEXT NOT NULL,\n          title TEXT NOT NULL,\n          completed INTEGER NOT NULL DEFAULT 0,\n          createdAt TEXT NOT NULL,\n          updatedAt TEXT NOT NULL,\n          FOREIGN KEY (taskId) REFERENCES tasks(id) ON DELETE CASCADE\n        )`,\n\n        // Create tags table (no foreign key dependencies)\n        `CREATE TABLE IF NOT EXISTS tags (\n          id TEXT PRIMARY KEY,\n          name TEXT NOT NULL,\n          color TEXT NOT NULL,\n          createdAt TEXT NOT NULL\n        )`,\n\n        // Create task_tags table (depends on tasks and tags)\n        `CREATE TABLE IF NOT EXISTS task_tags (\n          taskId TEXT NOT NULL,\n          tagId TEXT NOT NULL,\n          PRIMARY KEY (taskId, tagId),\n          FOREIGN KEY (taskId) REFERENCES tasks(id) ON DELETE CASCADE,\n          FOREIGN KEY (tagId) REFERENCES tags(id) ON DELETE CASCADE\n        )`,\n\n        // Create comments table (depends on tasks)\n        `CREATE TABLE IF NOT EXISTS comments (\n          id TEXT PRIMARY KEY,\n          taskId TEXT,\n          text TEXT,\n          createdAt TEXT NOT NULL,\n          updatedAt TEXT NOT NULL,\n          FOREIGN KEY (taskId) REFERENCES tasks(id) ON DELETE CASCADE\n        )`,\n\n        // Create attachments table (depends on tasks)\n        `CREATE TABLE IF NOT EXISTS attachments (\n          id TEXT PRIMARY KEY,\n          taskId TEXT,\n          fileName TEXT,\n          fileType TEXT,\n          fileUri TEXT,\n          createdAt TEXT NOT NULL,\n          FOREIGN KEY (taskId) REFERENCES tasks(id) ON DELETE CASCADE\n        )`\n      ];\n\n      // Execute each create table query\n      for (const query of createTableQueries) {\n        try {\n          await this.executeSql(query);\n        } catch (error) {\n          console.error('Error creating table:', error);\n          throw error;\n        }\n      }\n\n      // Create indexes\n      const createIndexQueries = [\n        'CREATE INDEX IF NOT EXISTS idx_tasks_dueDate ON tasks(dueDate)',\n        'CREATE INDEX IF NOT EXISTS idx_tasks_priority ON tasks(priority)',\n        'CREATE INDEX IF NOT EXISTS idx_tasks_completed ON tasks(completed)',\n        'CREATE INDEX IF NOT EXISTS idx_comments_taskId ON comments(taskId)',\n        'CREATE INDEX IF NOT EXISTS idx_attachments_taskId ON attachments(taskId)',\n        'CREATE INDEX IF NOT EXISTS idx_subtasks_taskId ON subtasks(taskId)'\n      ];\n\n      for (const query of createIndexQueries) {\n        try {\n          await this.executeSql(query);\n        } catch (error) {\n          console.warn('Error creating index:', error);\n          // Continue even if index creation fails\n        }\n      }\n      \n      console.log('All tables and indexes created successfully');\n    } catch (error) {\n      console.error('Failed to create all tables:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize the database by creating necessary tables and running migrations\n   */\n  async initDatabase(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      console.log('Initializing database...');\n      \n      // First, ensure foreign keys are enabled\n      await this.executeSql('PRAGMA foreign_keys = ON;');\n\n      // Create tables in the correct order\n      await this.createAllTables();\n\n      // Check if we need to run migrations\n      const schemaVersionResult = await this.executeSql('PRAGMA user_version;');\n      const currentVersion = schemaVersionResult.rows[0]?.user_version || 0;\n      console.log(`Current schema version: ${currentVersion}, Target version: ${SCHEMA_VERSION}`);\n      \n      // Always run migrations if schema version is 0 or less than target version\n      if (currentVersion < SCHEMA_VERSION) {\n        console.log('Running migrations to create tables...');\n        await this.runMigrations(currentVersion);\n        \n        // Create default tags after tables are created\n        await this.createDefaultTagsIfNeeded();\n      }\n      \n      this.initialized = true;\n      console.log('Database initialization complete.');\n    } catch (error) {\n      console.error('Database initialization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Execute SQL query with parameters\n   */\n  async executeSql(\n    query: string, \n    params: any[] = []\n  ): Promise<SQLResultSet> {\n    try {\n      // Ensure params are properly serialized primitive values\n      const processedParams = params.map(param => {\n        if (param === null || param === undefined) return null;\n        if (typeof param === 'object') return JSON.stringify(param);\n        return param;\n      });\n      \n      // Check if the query is a SELECT statement\n      const isSelectQuery = query.trim().toUpperCase().startsWith('SELECT');\n      \n      if (isSelectQuery) {\n        // Use getAllAsync for SELECT queries\n        const result = await this.db.getAllAsync(query, processedParams);\n        return {\n          insertId: undefined,\n          rowsAffected: 0,\n          rows: {\n            length: result.length,\n            _array: result,\n            item: (idx: number) => result[idx]\n          }\n        };\n      } else {\n        // Use runAsync for INSERT, UPDATE, DELETE operations\n        const result = await this.db.runAsync(query, processedParams);\n        return {\n          insertId: result.lastInsertRowId,\n          rowsAffected: result.changes,\n          rows: {\n            length: 0,\n            _array: [],\n            item: () => undefined\n          }\n        };\n      }\n    } catch (error) {\n      console.error('SQL Error:', error, 'Query:', query, 'Params:', params);\n      throw error;\n    }\n  }\n\n  /**\n   * Close the database connection\n   */\n  close(): void {\n    if (Platform.OS !== 'web') {\n      this.db.closeAsync();\n    }\n  }\n\n  private async createDefaultTagsIfNeeded(): Promise<void> {\n    try {\n      const tags = await this.getTags();\n      \n      // Only create default tags if there are none\n      if (tags.length === 0) {\n        const defaultTags = [\n          { name: 'Work', color: '#3B82F6' }, // Blue\n          { name: 'Personal', color: '#10B981' }, // Green\n          { name: 'Urgent', color: '#EF4444' }, // Red\n          { name: 'Meeting', color: '#8B5CF6' }, // Purple\n          { name: 'Ideas', color: '#F59E0B' }, // Amber\n        ];\n        \n        for (const tag of defaultTags) {\n          await this.createTag(tag);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to create default tags:', error);\n    }\n  }\n\n  /**\n   * Run database migrations\n   */\n  private async runMigrations(currentVersion: number): Promise<void> {\n    console.log(`Running migrations from version ${currentVersion} to ${SCHEMA_VERSION}`);\n    \n    // Run each migration in sequence\n    for (let version = currentVersion + 1; version <= SCHEMA_VERSION; version++) {\n      const migrations = MIGRATIONS[version as keyof typeof MIGRATIONS];\n      \n      if (!migrations) {\n        console.warn(`No migrations found for version ${version}`);\n        continue;\n      }\n      \n      console.log(`Applying migrations for version ${version} (${migrations.length} statements)`);\n      \n      try {\n        // Execute each migration statement\n        for (const migration of migrations) {\n          try {\n            await this.executeSql(migration);\n          } catch (error: any) {\n            // If the error is about duplicate column, we can ignore it\n            if (error.message?.includes('duplicate column name')) {\n              console.log(`Column already exists, skipping: ${migration}`);\n              continue;\n            }\n            throw error;\n          }\n        }\n        \n        // Update the schema version\n        await this.executeSql(`PRAGMA user_version = ${version}`);\n        \n        console.log(`Successfully migrated to version ${version}`);\n      } catch (error) {\n        console.error(`Migration to version ${version} failed:`, error);\n        throw error;\n      }\n    }\n  }\n\n  // Task Operations\n  async _createTaskInternal(task: Omit<DBTask, 'id' | 'createdAt' | 'updatedAt'>): Promise<string> {\n    console.log('DatabaseService - _createTaskInternal called with data:', task);\n    \n    if (!this.db) throw new Error('Database not initialized');\n    \n    const id = Math.random().toString(36).substring(2, 11);\n    const now = new Date().toISOString();\n\n    try {\n      // Create the task with all columns\n      await this.db.runAsync(\n        `INSERT INTO tasks (\n          id, title, description, dueDate, priority, completed, \n          categoryId, reminder, createdAt, updatedAt\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n        [\n          id,\n          task.title,\n          task.description ?? null,\n          task.dueDate ?? null,\n          task.priority,\n          task.completed ? 1 : 0,\n          task.categoryId ?? null,\n          task.reminder ?? null,\n          now,\n          now\n        ]\n      );\n\n      console.log('DatabaseService - Task created successfully with ID:', id);\n      return id;\n    } catch (error) {\n      console.error('DatabaseService - Failed to create task:', error);\n      throw error;\n    }\n  }\n\n  async updateTask(id: string, updates: Partial<DBTask>): Promise<void> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    const now = new Date().toISOString();\n    const fields: string[] = [];\n    const values: any[] = [];\n\n    Object.entries(updates).forEach(([key, value]) => {\n      if (key !== 'id' && key !== 'createdAt' && key !== 'updatedAt' && key !== 'syncStatus') {\n        fields.push(`${key} = ?`);\n        values.push(value);\n      }\n    });\n\n    try {\n      await this.db.runAsync(\n        `UPDATE tasks SET ${fields.join(', ')}, updatedAt = ?, syncStatus = 'pending' WHERE id = ?`,\n        [...values, now, id]\n      );\n    } catch (error) {\n      console.error('Failed to update task:', error);\n      throw error;\n    }\n  }\n\n  async deleteTask(id: string): Promise<void> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    try {\n      await this.db.runAsync('DELETE FROM tasks WHERE id = ?', [id]);\n    } catch (error) {\n      console.error('Failed to delete task:', error);\n      throw error;\n    }\n  }\n\n  async getTasks(): Promise<DBTask[]> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    try {\n      const result = await this.db.getAllAsync(\n        `SELECT * FROM tasks ORDER BY dueDate ASC`\n      );\n      \n      return result.map(row => ({\n        id: row.id,\n        title: row.title,\n        description: row.description,\n        priority: row.priority,\n        dueDate: row.dueDate,\n        completed: Boolean(row.completed),\n        categoryId: row.categoryId,\n        reminder: row.reminder,\n        createdAt: row.createdAt,\n        updatedAt: row.updatedAt\n      }));\n    } catch (error) {\n      console.error('Failed to get tasks:', error);\n      throw error;\n    }\n  }\n\n  // Comment Operations\n  async addComment(comment: Omit<DBComment, 'id' | 'createdAt' | 'updatedAt'>): Promise<string> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    const id = Math.random().toString(36).substr(2, 9);\n    const now = new Date().toISOString();\n\n    try {\n      await this.db.runAsync(\n        `INSERT INTO comments (id, taskId, text, createdAt, updatedAt)\n         VALUES (?, ?, ?, ?, ?)`,\n        [id, comment.taskId, comment.text, now, now]\n      );\n      return id;\n    } catch (error) {\n      console.error('Failed to add comment:', error);\n      throw error;\n    }\n  }\n\n  async getComments(taskId: string): Promise<DBComment[]> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    try {\n      return await this.db.getAllAsync<DBComment>(\n        'SELECT * FROM comments WHERE taskId = ? ORDER BY createdAt ASC',\n        [taskId]\n      );\n    } catch (error) {\n      console.error('Failed to get comments:', error);\n      throw error;\n    }\n  }\n\n  // Tag Operations\n  async createTag(tag: Omit<DBTag, 'id' | 'createdAt'>): Promise<string> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    const id = Math.random().toString(36).substr(2, 9);\n    const now = new Date().toISOString();\n\n    try {\n      await this.db.runAsync(\n        'INSERT INTO tags (id, name, color, createdAt) VALUES (?, ?, ?, ?)',\n        [id, tag.name, tag.color, now]\n      );\n      return id;\n    } catch (error) {\n      console.error('Failed to create tag:', error);\n      throw error;\n    }\n  }\n\n  async getTags(): Promise<DBTag[]> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    try {\n      return await this.db.getAllAsync<DBTag>('SELECT * FROM tags ORDER BY name ASC');\n    } catch (error) {\n      console.error('Failed to get tags:', error);\n      throw error;\n    }\n  }\n\n  async addTagToTask(taskId: string, tagId: string): Promise<void> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    try {\n      await this.db.runAsync(\n        'INSERT OR IGNORE INTO task_tags (taskId, tagId) VALUES (?, ?)',\n        [taskId, tagId]\n      );\n    } catch (error) {\n      console.error('Failed to add tag to task:', error);\n      throw error;\n    }\n  }\n\n  async removeTagFromTask(taskId: string, tagId: string): Promise<void> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    try {\n      await this.db.runAsync(\n        'DELETE FROM task_tags WHERE taskId = ? AND tagId = ?',\n        [taskId, tagId]\n      );\n    } catch (error) {\n      console.error('Failed to remove tag from task:', error);\n      throw error;\n    }\n  }\n\n  // Attachment Operations\n  async addAttachment(attachment: Omit<DBAttachment, 'id' | 'createdAt'>): Promise<string> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    const id = Math.random().toString(36).substr(2, 9);\n    const now = new Date().toISOString();\n\n    try {\n      await this.db.runAsync(\n        `INSERT INTO attachments (\n          id, taskId, fileName, fileType, fileUri, createdAt\n        ) VALUES (?, ?, ?, ?, ?, ?)`,\n        [\n          id, attachment.taskId, attachment.fileName, attachment.fileType,\n          attachment.fileUri, now\n        ]\n      );\n      return id;\n    } catch (error) {\n      console.error('Failed to add attachment:', error);\n      throw error;\n    }\n  }\n\n  async getAttachments(taskId: string): Promise<DBAttachment[]> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    try {\n      return await this.db.getAllAsync<DBAttachment>(\n        'SELECT * FROM attachments WHERE taskId = ? ORDER BY createdAt DESC',\n        [taskId]\n      );\n    } catch (error) {\n      console.error('Failed to get attachments:', error);\n      throw error;\n    }\n  }\n\n  // Sync Operations\n  async getPendingSyncItems(): Promise<{\n    tasks: DBTask[];\n    comments: DBComment[];\n    attachments: DBAttachment[];\n  }> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    try {\n      const tasks = await this.db.getAllAsync<DBTask>(\"SELECT * FROM tasks WHERE syncStatus = 'pending'\");\n      const comments = await this.db.getAllAsync<DBComment>(\"SELECT * FROM comments WHERE syncStatus = 'pending'\");\n      const attachments = await this.db.getAllAsync<DBAttachment>(\"SELECT * FROM attachments WHERE syncStatus = 'pending'\");\n      \n      return { tasks, comments, attachments };\n    } catch (error) {\n      console.error('Failed to get pending sync items:', error);\n      throw error;\n    }\n  }\n\n  async markAsSynced(type: 'task' | 'comment' | 'attachment', id: string): Promise<void> {\n    if (!this.db) throw new Error('Database not initialized');\n    \n    const table = `${type}s`;\n    const now = new Date().toISOString();\n\n    try {\n      await this.db.runAsync(\n        `UPDATE ${table} SET syncStatus = 'synced', lastSyncedAt = ? WHERE id = ?`,\n        [now, id]\n      );\n    } catch (error) {\n      console.error(`Failed to mark ${type} as synced:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Begin a database transaction\n   */\n  async transaction<T>(callback: (tx: SQLTransaction) => Promise<T>): Promise<T> {\n    try {\n      // Start transaction\n      await this.executeSql('BEGIN TRANSACTION;');\n      \n      // Create transaction object with executeSql method\n      const tx: SQLTransaction = {\n        executeSql: async (sql, args) => {\n          const result = await this.executeSql(sql, args || []);\n          return result;\n        }\n      } as SQLTransaction;\n      \n      // Execute callback\n      const result = await callback(tx);\n      \n      // Commit if successful\n      await this.executeSql('COMMIT;');\n      return result;\n    } catch (error) {\n      // Rollback on error\n      await this.executeSql('ROLLBACK;');\n      throw error;\n    }\n  }\n}\n\n// Create a singleton instance\nconst databaseService = new DatabaseService();\n\nexport default databaseService; ","import databaseService from './DatabaseService';\nimport { Task } from '../types/Task';\nimport { formatISO } from 'date-fns';\n\n// Helper function to generate a unique ID if the database doesn't generate one\nfunction generateUniqueId(): string {\n  return 'task-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n}\n\n/**\n * Repository class for Task-related database operations\n */\nclass TaskRepository {\n  /**\n   * Create a new task\n   */\n  async createTask(task: Omit<Task, 'id' | 'createdAt' | 'updatedAt'>): Promise<string> {\n    const now = formatISO(new Date());\n    \n    // Generate a unique ID before insertion\n    const taskId = generateUniqueId();\n    \n    try {\n      console.log(`TaskRepository - Starting task creation for \"${task.title}\"`);\n      \n      // Use our implementation since databaseService.createTask was renamed to _createTaskInternal\n      console.log(`TaskRepository - Using repository implementation`);\n      const result = await databaseService.executeSql(\n        `INSERT INTO tasks (\n          id, title, description, dueDate, priority, completed, categoryId, createdAt, updatedAt\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n        [\n          taskId,\n          task.title,\n          task.description || null,\n          task.dueDate || null,\n          task.priority || 'medium',\n          task.completed ? 1 : 0,\n          task.categoryId || null,\n          now,\n          now\n        ]\n      );\n      \n      console.log(`TaskRepository - Created task with ID: ${taskId}`);\n      return taskId;\n    } catch (error) {\n      console.error('Error creating task:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get a task by id\n   */\n  async getTaskById(id: string): Promise<Task | null> {\n    const result = await databaseService.executeSql(\n      'SELECT * FROM tasks WHERE id = ?',\n      [id]\n    );\n    \n    if (result.rows.length === 0) return null;\n    \n    const task = result.rows.item(0);\n    return this.mapTaskFromDatabase(task);\n  }\n\n  /**\n   * Get all tasks, optionally filtered\n   */\n  async getTasks(options: {\n    completed?: boolean,\n    category?: string,\n    priority?: Task['priority']\n  } = {}): Promise<Task[]> {\n    let query = 'SELECT * FROM tasks';\n    const params: any[] = [];\n    const conditions: string[] = [];\n    \n    if (options.completed !== undefined) {\n      conditions.push('completed = ?');\n      params.push(options.completed ? 1 : 0);\n    }\n    \n    if (options.category) {\n      conditions.push('categoryId = ?');\n      params.push(options.category);\n    }\n    \n    if (options.priority) {\n      conditions.push('priority = ?');\n      params.push(options.priority);\n    }\n    \n    if (conditions.length > 0) {\n      query += ' WHERE ' + conditions.join(' AND ');\n    }\n    \n    query += ' ORDER BY dueDate ASC, priority DESC, createdAt DESC';\n    \n    console.log(`TaskRepository - Executing query: ${query}`);\n    console.log(`TaskRepository - With parameters:`, params);\n    \n    const result = await databaseService.executeSql(query, params);\n    const tasks: Task[] = [];\n    \n    for (let i = 0; i < result.rows.length; i++) {\n      tasks.push(this.mapTaskFromDatabase(result.rows.item(i)));\n    }\n    \n    console.log(`TaskRepository - Found ${tasks.length} tasks`);\n    \n    return tasks;\n  }\n\n  /**\n   * Update a task\n   */\n  async updateTask(id: string | number, task: Partial<Task>): Promise<boolean> {\n    const setValues: string[] = [];\n    const params: any[] = [];\n    \n    if (task.title !== undefined) {\n      setValues.push('title = ?');\n      params.push(task.title);\n    }\n    \n    if (task.description !== undefined) {\n      setValues.push('description = ?');\n      params.push(task.description);\n    }\n    \n    if (task.dueDate !== undefined) {\n      setValues.push('dueDate = ?');\n      params.push(task.dueDate);\n    }\n    \n    if (task.priority !== undefined) {\n      setValues.push('priority = ?');\n      params.push(task.priority);\n    }\n    \n    if (task.completed !== undefined) {\n      setValues.push('completed = ?');\n      params.push(task.completed ? 1 : 0);\n    }\n    \n    if (task.categoryId !== undefined) {\n      setValues.push('categoryId = ?');\n      params.push(task.categoryId);\n    }\n    \n    setValues.push('updatedAt = ?');\n    params.push(formatISO(new Date()));\n    \n    // Add id as the last parameter\n    params.push(id.toString());\n    \n    const query = `UPDATE tasks SET ${setValues.join(', ')} WHERE id = ?`;\n    console.log('Executing update query:', query);\n    console.log('With parameters:', params);\n    \n    const result = await databaseService.executeSql(query, params);\n    return result.rowsAffected > 0;\n  }\n\n  /**\n   * Delete a task\n   */\n  async deleteTask(id: string): Promise<boolean> {\n    const result = await databaseService.executeSql(\n      'DELETE FROM tasks WHERE id = ?',\n      [id]\n    );\n    \n    return result.rowsAffected > 0;\n  }\n\n  /**\n   * Map a database row to a Task object\n   */\n  private mapTaskFromDatabase(row: any): Task {\n    return {\n      id: row.id,\n      title: row.title,\n      description: row.description,\n      dueDate: row.dueDate,\n      priority: row.priority as Task['priority'],\n      completed: Boolean(row.completed),\n      categoryId: row.categoryId,\n      createdAt: row.createdAt,\n      updatedAt: row.updatedAt\n    };\n  }\n}\n\nconst taskRepository = new TaskRepository();\nexport default taskRepository; ","import { create } from 'zustand';\nimport { Task, TaskFilter, TaskTemplate, SubTask, Priority } from '../types/Task';\nimport databaseService from '../database/DatabaseService';\nimport taskRepository from '../database/TaskRepository';\n\n// Define PomodoroSettings type\ntype PomodoroSettings = {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  sessionsUntilLongBreak: number;\n  autoStartNextSession: boolean;\n  autoStartBreaks: boolean;\n};\n\ninterface TaskState {\n  tasks: Task[];\n  isLoading: boolean;\n  error: string | null;\n  templates: TaskTemplate[];\n  isInitialized: boolean;\n  \n  // Add initialize method\n  initialize: () => Promise<void>;\n  \n  // Pomodoro features\n  currentPomodoro: {\n    active: boolean;\n    isBreak: boolean;\n    timeRemaining: number;\n    sessionId: string | null;\n    currentSessionCount: number;\n  };\n  pomodoroSettings: PomodoroSettings;\n  \n  // Actions\n  fetchTasks: (filter?: TaskFilter) => Promise<void>;\n  getTaskById: (id: string) => Task | undefined;\n  addTask: (task: Omit<Task, 'id' | 'createdAt' | 'updatedAt'>) => Promise<Task>;\n  updateTask: (task: Task) => Promise<Task | undefined>;\n  deleteTask: (id: string) => Promise<void>;\n  \n  // Task status actions\n  markTaskAsCompleted: (id: string) => Promise<boolean>;\n  markTaskAsInProgress: (id: string) => Promise<boolean>;\n  toggleTaskCompletion: (id: string) => Promise<boolean>;\n  \n  // Subtask actions\n  addSubtask: (taskId: string, title: string) => Promise<Task | null>;\n  toggleSubtask: (taskId: string, subtaskId: string) => Promise<Task | null>;\n  deleteSubtask: (taskId: string, subtaskId: string) => Promise<Task | null>;\n  \n  // Pomodoro actions\n  startPomodoro: (taskId: string) => void;\n  pausePomodoro: () => void;\n  resumePomodoro: () => void;\n  stopPomodoro: (logTime: boolean, reason: string) => void;\n  completePomodoro: () => void;\n  skipBreak: () => void;\n  updatePomodoroSettings: (settings: PomodoroSettings) => void;\n  \n  // Template actions\n  fetchTemplates: () => Promise<void>;\n  addTemplate: (template: Omit<TaskTemplate, 'id' | 'createdAt'>) => Promise<TaskTemplate>;\n  updateTemplate: (id: string, template: Partial<TaskTemplate>) => Promise<void>;\n  deleteTemplate: (id: string) => Promise<void>;\n  createTaskFromTemplate: (template: TaskTemplate) => Promise<Task>;\n  \n  // Categories\n  categories: string[];\n  getCategories: () => string[];\n  \n  // Default tasks\n  createDefaultTasks: () => Promise<void>;\n}\n\nexport const useTaskStore = create<TaskState>((set, get) => ({\n  tasks: [],\n  isLoading: false,\n  error: null,\n  templates: [],\n  categories: [],\n  isInitialized: false,\n  \n  // Pomodoro state\n  currentPomodoro: {\n    active: false,\n    isBreak: false,\n    timeRemaining: 0,\n    sessionId: null,\n    currentSessionCount: 0\n  },\n  pomodoroSettings: {\n    workDuration: 25,\n    shortBreakDuration: 5,\n    longBreakDuration: 15,\n    sessionsUntilLongBreak: 4,\n    autoStartNextSession: false,\n    autoStartBreaks: false\n  },\n\n  // Task actions\n  fetchTasks: async (filter?: TaskFilter) => {\n    try {\n      set({ isLoading: true });\n      \n      // Convert TaskFilter to repository filter format\n      const repoFilter = {\n        completed: filter?.status === 'completed' ? true : \n                  filter?.status === 'pending' ? false : undefined,\n        priority: filter?.priority === 'all' ? undefined : \n                 filter?.priority as Priority | undefined,\n        category: filter?.category === 'all' ? undefined : \n                 filter?.category\n      };\n      \n      const tasks = await taskRepository.getTasks(repoFilter);\n      console.log(`TaskStore - Fetched ${tasks.length} tasks from the database`);\n      \n      // Fix any tasks with null IDs\n      const fixedTasks = tasks.map(task => {\n        if (!task.id) {\n          const newId = `fixed-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n          console.log(`Fixing task with null ID: \"${task.title}\" -> new ID: ${newId}`);\n          return { ...task, id: newId };\n        }\n        return task;\n      });\n      \n      set({ tasks: fixedTasks, isLoading: false });\n    } catch (error) {\n      console.error('TaskStore - Error fetching tasks:', error);\n      set({ error: error instanceof Error ? error.message : 'Failed to fetch tasks', isLoading: false });\n    }\n  },\n\n  getTaskById: (id: string) => {\n    return get().tasks.find(task => task.id === id);\n  },\n\n  addTask: async (task: Omit<Task, 'id' | 'createdAt' | 'updatedAt'>) => {\n    try {\n      // Ensure task has required fields\n      if (!task.title) {\n        console.error('Cannot create task without a title');\n        throw new Error('Task title is required');\n      }\n      \n      // Set loading state\n      set({ isLoading: true });\n      \n      const taskId = await taskRepository.createTask(task);\n      \n      // Validate that we got a valid ID back\n      if (!taskId) {\n        console.error('Failed to get valid ID from repository when creating task:', task.title);\n        throw new Error('Failed to generate task ID');\n      }\n      \n      const newTask: Task = {\n        ...task,\n        id: taskId,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      \n      console.log(`Created new task with ID: ${newTask.id}, Title: ${newTask.title}`);\n      \n      // Update state with the new task\n      set(state => ({ \n        tasks: [...state.tasks, newTask],\n        isLoading: false \n      }));\n      \n      return newTask;\n    } catch (error) {\n      set({ isLoading: false });\n      console.error('Error creating task:', error);\n      throw error;\n    }\n  },\n\n  updateTask: async (task) => {\n    try {\n      const success = await taskRepository.updateTask(task.id, task);\n      if (success) {\n        set(state => ({\n          tasks: state.tasks.map(t => t.id === task.id ? task : t)\n        }));\n        return task;\n      }\n      return undefined;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  deleteTask: async (id: string) => {\n    try {\n      const success = await taskRepository.deleteTask(id);\n      if (success) {\n        set(state => ({\n          tasks: state.tasks.filter(t => t.id !== id)\n        }));\n      }\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Task status actions\n  markTaskAsCompleted: async (id: string) => {\n    try {\n      const task = get().getTaskById(id);\n      if (task) {\n        const updatedTask = await get().updateTask({ ...task, completed: true });\n        return !!updatedTask;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  },\n\n  markTaskAsInProgress: async (id: string) => {\n    try {\n      const task = get().getTaskById(id);\n      if (task) {\n        const updatedTask = await get().updateTask({ ...task, completed: false });\n        return !!updatedTask;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  },\n\n  toggleTaskCompletion: async (id: string) => {\n    try {\n      const task = get().getTaskById(id);\n      if (task) {\n        const success = await taskRepository.updateTask(id, { completed: !task.completed });\n        if (success) {\n          set(state => ({\n            tasks: state.tasks.map(t => \n              t.id === id ? { ...t, completed: !t.completed } : t\n            )\n          }));\n          return true;\n        }\n      }\n      return false;\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n      return false;\n    }\n  },\n\n  // Subtask actions\n  addSubtask: async (taskId: string, title: string) => {\n    try {\n      const task = get().getTaskById(taskId);\n      if (task) {\n        const newSubtask: SubTask = {\n          id: Date.now().toString(),\n          title,\n          completed: false,\n          createdAt: new Date()\n        };\n        const updatedTask = {\n          ...task,\n          subtasks: [...(task.subtasks || []), newSubtask]\n        };\n        const result = await get().updateTask(updatedTask);\n        return result || null;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  },\n\n  toggleSubtask: async (taskId: string, subtaskId: string) => {\n    try {\n      const task = get().getTaskById(taskId);\n      if (task && task.subtasks) {\n        const updatedSubtasks = task.subtasks.map(subtask =>\n          subtask.id === subtaskId\n            ? { ...subtask, completed: !subtask.completed }\n            : subtask\n        );\n        const updatedTask = {\n          ...task,\n          subtasks: updatedSubtasks\n        };\n        const result = await get().updateTask(updatedTask);\n        return result || null;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  },\n\n  deleteSubtask: async (taskId: string, subtaskId: string) => {\n    try {\n      const task = get().getTaskById(taskId);\n      if (task && task.subtasks) {\n        const updatedSubtasks = task.subtasks.filter(\n          subtask => subtask.id !== subtaskId\n        );\n        const updatedTask = {\n          ...task,\n          subtasks: updatedSubtasks\n        };\n        const result = await get().updateTask(updatedTask);\n        return result || null;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  },\n\n  // Pomodoro actions\n  startPomodoro: (taskId: string) => {\n    set(state => ({\n      currentPomodoro: {\n        ...state.currentPomodoro,\n        active: true,\n        sessionId: taskId,\n        timeRemaining: state.pomodoroSettings.workDuration * 60\n      }\n    }));\n  },\n\n  pausePomodoro: () => {\n    set(state => ({\n      currentPomodoro: {\n        ...state.currentPomodoro,\n        active: false\n      }\n    }));\n  },\n\n  resumePomodoro: () => {\n    set(state => ({\n      currentPomodoro: {\n        ...state.currentPomodoro,\n        active: true\n      }\n    }));\n  },\n\n  stopPomodoro: (logTime: boolean, reason: string) => {\n    set(state => ({\n      currentPomodoro: {\n        ...state.currentPomodoro,\n        active: false,\n        sessionId: null,\n        timeRemaining: 0\n      }\n    }));\n  },\n\n  completePomodoro: () => {\n    set(state => ({\n      currentPomodoro: {\n        ...state.currentPomodoro,\n        active: false,\n        sessionId: null,\n        timeRemaining: 0,\n        currentSessionCount: state.currentPomodoro.currentSessionCount + 1\n      }\n    }));\n  },\n\n  skipBreak: () => {\n    set(state => ({\n      currentPomodoro: {\n        ...state.currentPomodoro,\n        isBreak: false,\n        timeRemaining: state.pomodoroSettings.workDuration * 60\n      }\n    }));\n  },\n\n  updatePomodoroSettings: (settings: PomodoroSettings) => {\n    set({ pomodoroSettings: settings });\n  },\n\n  // Template actions\n  fetchTemplates: async () => {\n    try {\n      set({ isLoading: true });\n      \n      // For now, use mock data if no templates exist\n      const mockTemplates: TaskTemplate[] = [\n        {\n          id: '1',\n          name: 'Daily Standup',\n          title: 'Daily Team Meeting',\n          description: 'Template for daily team standup meetings',\n          priority: 'medium',\n          subtasks: [\n            { title: 'Review yesterday\\'s progress' },\n            { title: 'Discuss blockers' },\n            { title: 'Plan today\\'s work' }\n          ],\n          createdAt: new Date()\n        },\n        {\n          id: '2',\n          name: 'Bug Fix Process',\n          title: 'Fix Software Bug',\n          description: 'Standard process for addressing software bugs',\n          priority: 'high',\n          subtasks: [\n            { title: 'Reproduce the issue' },\n            { title: 'Check logs and identify cause' },\n            { title: 'Implement fix' },\n            { title: 'Write tests' },\n            { title: 'Create PR' }\n          ],\n          createdAt: new Date(Date.now() - 86400000)\n        },\n        {\n          id: '3',\n          name: 'Weekly Report',\n          title: 'Prepare Weekly Report',\n          description: 'Template for preparing weekly status reports',\n          priority: 'medium',\n          subtasks: [\n            { title: 'Gather metrics and data' },\n            { title: 'Create summary' },\n            { title: 'Add visualizations' },\n            { title: 'Review with team' }\n          ],\n          createdAt: new Date(Date.now() - 172800000)\n        }\n      ];\n      \n      // In a real app, would load from database\n      set({ templates: mockTemplates, isLoading: false });\n    } catch (error) {\n      console.error('Error fetching templates:', error);\n      set({ isLoading: false, error: error instanceof Error ? error.message : 'Failed to fetch templates' });\n    }\n  },\n\n  addTemplate: async (template) => {\n    try {\n      // Create a new template with ID\n      const newTemplate: TaskTemplate = {\n        ...template,\n        id: Date.now().toString(),\n        createdAt: new Date()\n      };\n      \n      // Add to store\n      set(state => ({ \n        templates: [...state.templates, newTemplate]\n      }));\n      \n      return newTemplate;\n    } catch (error) {\n      console.error('Error adding template:', error);\n      throw error;\n    }\n  },\n\n  updateTemplate: async (id, updatedTemplate) => {\n    try {\n      // Update template in store\n      set(state => ({\n        templates: state.templates.map(template => \n          template.id === id ? { ...template, ...updatedTemplate } : template\n        )\n      }));\n    } catch (error) {\n      console.error('Error updating template:', error);\n      throw error;\n    }\n  },\n  \n  deleteTemplate: async (id) => {\n    try {\n      // Delete template from store\n      set(state => ({\n        templates: state.templates.filter(template => template.id !== id)\n      }));\n    } catch (error) {\n      console.error('Error deleting template:', error);\n      throw error;\n    }\n  },\n  \n  createTaskFromTemplate: async (template) => {\n    try {\n      const { addTask } = get();\n      \n      // Create subtasks with required properties\n      const subtasks: SubTask[] = (template.subtasks || []).map(subtask => ({\n        ...subtask,\n        id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n        completed: false,\n        createdAt: new Date()\n      }));\n      \n      // Create a new task from template\n      const newTask = {\n        title: template.title,\n        description: template.description || '',\n        priority: template.priority || 'medium',\n        dueDate: template.dueTimeOffset \n          ? new Date(Date.now() + template.dueTimeOffset * 86400000).toISOString() \n          : new Date(Date.now() + 86400000).toISOString(), // Default to tomorrow\n        completed: false,\n        subtasks,\n        categoryId: template.categoryId\n      };\n      \n      // Add task using existing addTask method\n      return await addTask(newTask);\n    } catch (error) {\n      console.error('Error creating task from template:', error);\n      throw error;\n    }\n  },\n\n  // Add initialize implementation before createDefaultTasks\n  initialize: async () => {\n    if (get().isInitialized) return;\n    \n    try {\n      set({ isLoading: true });\n      await get().fetchTasks();\n      await get().fetchTemplates();\n      if (get().tasks.length === 0) {\n        await get().createDefaultTasks();\n      }\n      set({ isInitialized: true, isLoading: false });\n    } catch (error) {\n      set({ \n        error: error instanceof Error ? error.message : 'Failed to initialize store',\n        isLoading: false \n      });\n    }\n  },\n  \n  // Categories\n  getCategories: () => get().categories,\n\n  // Default tasks\n  createDefaultTasks: async () => {\n    try {\n      const defaultTasks = [\n        {\n          title: 'Welcome to Task Manager!',\n          description: 'This is your first task. Try completing it!',\n          priority: 'medium' as Priority,\n          completed: false\n        },\n        {\n          title: 'Create a new task',\n          description: 'Click the + button to create a new task',\n          priority: 'low' as Priority,\n          completed: false\n        }\n      ];\n\n      for (const task of defaultTasks) {\n        await get().addTask(task);\n      }\n    } catch (error) {\n      console.error('Error creating default tasks:', error);\n    }\n  },\n}));","import React from 'react';\nimport { View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Text, Surface, Chip, IconButton, ProgressBar } from 'react-native-paper';\nimport { format } from 'date-fns';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { Task } from '../types/Task';\nimport { MaterialIcons } from '@expo/vector-icons';\n\ninterface TaskItemProps {\n  task: Task;\n  onPress: () => void;\n  onStartPomodoro?: (taskId: string) => void;\n  onToggle?: () => void;\n  onDelete?: (taskId: string) => void;\n}\n\nexport default function TaskItem({ task, onPress, onStartPomodoro, onToggle, onDelete }: TaskItemProps) {\n  const { theme, isDark } = useTheme();\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority.toLowerCase()) {\n      case 'high':\n        return isDark ? '#CF6679' : '#D32F2F';\n      case 'medium':\n        return isDark ? '#FFDF5D' : '#FFC107';\n      case 'low':\n        return isDark ? '#78939D' : '#78909C';\n      default:\n        return isDark ? '#78939D' : '#78909C';\n    }\n  };\n\n  const getPriorityIcon = (priority: string) => {\n    switch (priority.toLowerCase()) {\n      case 'high':\n        return 'arrow-upward';\n      case 'medium':\n        return 'remove';\n      case 'low':\n        return 'arrow-downward';\n      default:\n        return 'remove';\n    }\n  };\n\n  const calculateProgress = () => {\n    if (!task.subtasks || task.subtasks.length === 0) return 0;\n    const completed = task.subtasks.filter(st => st.completed).length;\n    return completed / task.subtasks.length;\n  };\n\n  // Create a safe color with opacity\n  const createSafeColorWithOpacity = (color: string | undefined, opacity: string) => {\n    if (!color) {\n      color = theme.colors.primary;\n    }\n    return color + opacity;\n  };\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Surface style={[\n        styles.container, \n        { \n          backgroundColor: theme.colors.surface,\n          borderLeftColor: getPriorityColor(task.priority || ''),\n        }\n      ]}>\n        <View style={styles.content}>\n          <View style={styles.header}>\n            <View style={styles.titleContainer}>\n              <MaterialIcons \n                name={getPriorityIcon(task.priority || '')} \n                size={16} \n                color={getPriorityColor(task.priority || '')}\n                style={styles.priorityIcon}\n              />\n              <Text \n                style={[\n                  styles.title, \n                  task.completed && styles.completedTitle\n                ]}\n                numberOfLines={1}\n              >\n                {task.title}\n              </Text>\n            </View>\n            <View style={styles.actions}>\n              <Chip \n                icon={task.completed ? \"check-circle\" : \"clock-outline\"}\n                compact\n                style={[\n                  styles.statusChip,\n                  { \n                    backgroundColor: task.completed ? \n                      (isDark ? '#4CAF5060' : '#4CAF5040') : \n                      (isDark ? '#FFC10760' : '#FFC10740'),\n                    marginRight: 8,\n                    marginTop: 8,\n                    height: 28,\n                    paddingHorizontal: 8,\n                  }\n                ]}\n              >\n                {task.completed ? 'Completed' : 'Pending'}\n              </Chip>\n              {onStartPomodoro && (\n                <IconButton \n                  icon=\"timer-outline\" \n                  size={20}\n                  onPress={(e) => {\n                    e.stopPropagation();\n                    onStartPomodoro(task.id);\n                  }}\n                  style={styles.pomodoroButton}\n                />\n              )}\n              {onToggle && (\n                <IconButton \n                  icon={task.completed ? \"check-circle\" : \"circle-outline\"}\n                  size={20}\n                  iconColor={task.completed ? theme.colors.success : theme.colors.text}\n                  style={styles.toggleButton}\n                  onPress={(e) => {\n                    e.stopPropagation();\n                    console.log('TaskItem - Checkbox clicked for task:', task.id);\n                    onToggle();\n                  }}\n                />\n              )}\n              {onDelete && (\n                <IconButton\n                  icon=\"delete\"\n                  size={20}\n                  onPress={() => onDelete(task.id)}\n                />\n              )}\n            </View>\n          </View>\n          \n          {task.description && (\n            <Text \n              style={styles.description}\n              numberOfLines={2}\n            >\n              {task.description}\n            </Text>\n          )}\n          \n          {task.dueDate && (\n            <View style={styles.metadataRow}>\n              <MaterialIcons \n                name=\"event\" \n                size={14} \n                color={theme.colors.text}\n                style={styles.metadataIcon}\n              />\n              <Text style={styles.metadataText}>\n                {format(new Date(task.dueDate), 'PPP')}\n              </Text>\n            </View>\n          )}\n          \n          {task.subtasks && task.subtasks.length > 0 && (\n            <View style={styles.progressContainer}>\n              <ProgressBar \n                progress={calculateProgress()} \n                color={theme.colors.primary}\n                style={styles.progressBar}\n              />\n              <Text style={styles.progressText}>\n                {task.subtasks.filter(st => st.completed).length} / {task.subtasks.length} subtasks\n              </Text>\n            </View>\n          )}\n          \n          <View style={styles.footer}>\n            <View style={styles.tags}>\n              {(task as any).tags && (task as any).tags.length > 0 && (task as any).tags.map((tag: { name: string; color: string }, index: number) => {\n                const safeColor = tag.color || theme.colors.primary;\n                return (\n                  <Chip \n                    key={index} \n                    style={[styles.tag, { backgroundColor: createSafeColorWithOpacity(safeColor, '20') }]}\n                    compact\n                  >\n                    <Text style={{color: safeColor, fontSize: 12}}>\n                      {tag.name}\n                    </Text>\n                  </Chip>\n                );\n              })}\n            </View>\n          </View>\n        </View>\n      </Surface>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 12,\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 2,\n    borderLeftWidth: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n  },\n  content: {\n    padding: 12,\n    paddingBottom: 16,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 8,\n  },\n  priorityIcon: {\n    marginRight: 8,\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: '600',\n    flex: 1,\n  },\n  completedTitle: {\n    textDecorationLine: 'line-through',\n    opacity: 0.7,\n  },\n  description: {\n    fontSize: 14,\n    opacity: 0.8,\n    marginBottom: 12,\n  },\n  metadataRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  metadataItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  metadataIcon: {\n    marginRight: 4,\n  },\n  metadataText: {\n    fontSize: 13,\n    opacity: 0.7,\n  },\n  progressContainer: {\n    marginBottom: 12,\n  },\n  progressBar: {\n    height: 4,\n    borderRadius: 2,\n    marginBottom: 4,\n  },\n  progressText: {\n    fontSize: 12,\n    opacity: 0.7,\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    flex: 1,\n  },\n  tag: {\n    marginRight: 4,\n    marginBottom: 4,\n    height: 24,\n  },\n  statusChip: {\n    borderRadius: 14,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  pomodoroButton: {\n    margin: 0,\n  },\n  toggleButton: {\n    margin: 0,\n    marginLeft: 4,\n  },\n}); ","import React, { useEffect } from 'react';\nimport { View, Text, StyleSheet, Animated } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../theme/ThemeProvider';\n\ninterface AnimatedEmptyStateProps {\n  message: string;\n  icon?: string;\n  description?: string;\n}\n\nexport default function AnimatedEmptyState({ \n  message, \n  icon = 'clipboard-outline',\n  description\n}: AnimatedEmptyStateProps) {\n  const { theme, isDark } = useTheme();\n  const opacity = new Animated.Value(0);\n  const scale = new Animated.Value(0.8);\n\n  useEffect(() => {\n    Animated.parallel([\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true,\n      }),\n      Animated.spring(scale, {\n        toValue: 1,\n        friction: 8,\n        tension: 40,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  }, []);\n\n  return (\n    <Animated.View \n      style={[\n        styles.container, \n        { \n          opacity,\n          transform: [{ scale }],\n        }\n      ]}\n    >\n      <Ionicons name={icon as any} size={64} color={theme.colors.primary} />\n      <Text style={[styles.message, { color: theme.colors.onBackground }]}>\n        {message}\n      </Text>\n      {description && (\n        <Text style={[styles.description, { color: theme.colors.onSurfaceVariant }]}>\n          {description}\n        </Text>\n      )}\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 32,\n  },\n  message: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  description: {\n    fontSize: 14,\n    textAlign: 'center',\n    marginTop: 8,\n    maxWidth: '80%',\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet, \n  FlatList, \n  TouchableOpacity,\n  ActivityIndicator\n} from 'react-native';\nimport { format } from 'date-fns';\nimport { Task, SubTask } from '../types/Task';\nimport { useTaskStore } from '../stores/taskStore';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { Ionicons, MaterialIcons, AntDesign } from '@expo/vector-icons';\nimport databaseService from '../database/DatabaseService';\nimport TaskItem from './TaskItem';\nimport AnimatedEmptyState from './AnimatedEmptyState';\n\ninterface TaskListProps {\n  onTaskPress: (taskId: string) => void;\n  onStartPomodoro?: (taskId: string) => void;\n  onToggle?: (taskId: string) => void;\n  onDelete?: (taskId: string) => void;\n  filter?: {\n    status?: 'completed' | 'pending';\n    priority?: 'high' | 'medium' | 'low';\n    tag?: string;\n  };\n  sortBy?: 'dueDate' | 'priority' | 'createdAt';\n  sortOrder?: 'asc' | 'desc';\n  tasks?: Task[];\n}\n\nexport default function TaskList({ \n  onTaskPress, \n  onStartPomodoro,\n  onToggle,\n  onDelete,\n  filter, \n  sortBy = 'dueDate', \n  sortOrder = 'asc',\n  tasks: providedTasks\n}: TaskListProps) {\n  const { theme, isDark } = useTheme();\n  const { tasks: storeTasks, isLoading, error, fetchTasks, markTaskAsCompleted } = useTaskStore();\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [errorState, setErrorState] = useState<string | null>(null);\n\n  // Log how many tasks were provided through props\n  useEffect(() => {\n    if (providedTasks) {\n      console.log(`TaskList received ${providedTasks.length} tasks from props`);\n      providedTasks.forEach((task, index) => {\n        console.log(`Task ${index + 1}: ID=${task.id}, Title=${task.title}, Completed=${task.completed}`);\n      });\n    } else {\n      console.log('TaskList: No tasks provided through props, will load from database');\n    }\n  }, [providedTasks]);\n\n  useEffect(() => {\n    loadTasks();\n  }, [filter, sortBy, sortOrder]);\n\n  const loadTasks = async () => {\n    try {\n      setLoading(true);\n      let query = `\n        SELECT t.*, GROUP_CONCAT(tag.name) as tagNames, GROUP_CONCAT(tag.color) as tagColors\n        FROM tasks t\n        LEFT JOIN task_tags tt ON t.id = tt.taskId\n        LEFT JOIN tags tag ON tt.tagId = tag.id\n      `;\n\n      const whereConditions = [];\n      const params = [];\n\n      if (filter?.status) {\n        whereConditions.push('t.completed = ?');\n        params.push(filter.status === 'completed' ? 1 : 0);\n      }\n\n      if (filter?.priority) {\n        whereConditions.push('t.priority = ?');\n        params.push(filter.priority);\n      }\n\n      if (filter?.tag) {\n        whereConditions.push('tag.name = ?');\n        params.push(filter.tag);\n      }\n\n      if (whereConditions.length > 0) {\n        query += ' WHERE ' + whereConditions.join(' AND ');\n      }\n\n      query += ' GROUP BY t.id';\n\n      if (sortBy) {\n        const sortColumn = sortBy === 'createdAt' ? 't.createdAt' : \n                          sortBy === 'priority' ? 't.priority' :\n                          't.dueDate';\n        query += ` ORDER BY ${sortColumn} ${sortOrder === 'desc' ? 'DESC' : 'ASC'}`;\n      }\n\n      const result = await databaseService.executeSql(query, params);\n      const fetchedTasks = result.rows._array.map(row => ({\n        ...row,\n        tags: row.tagNames ? \n          row.tagNames.split(',').map((name: string, i: number) => ({\n            name,\n            color: row.tagColors.split(',')[i]\n          })) : []\n      }));\n      \n      setTasks(fetchedTasks);\n      setErrorState(null);\n    } catch (err) {\n      console.error('Error loading tasks:', err);\n      setErrorState('Failed to load tasks');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.centered}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  if (errorState) {\n    return (\n      <View style={styles.centered}>\n        <Text style={[styles.error, { color: theme.colors.error }]}>{errorState}</Text>\n      </View>\n    );\n  }\n\n  if (tasks.length === 0) {\n    return (\n      <AnimatedEmptyState \n        message=\"No tasks found\" \n        icon=\"clipboard-outline\"\n      />\n    );\n  }\n\n  return (\n    <FlatList\n      data={providedTasks || tasks}\n      keyExtractor={(item) => item?.id || `task-${Math.random().toString(36)}`}\n      renderItem={({ item }) => (\n        <TaskItem\n          task={item}\n          onPress={() => onTaskPress(item.id)}\n          onStartPomodoro={onStartPomodoro ? (taskId) => onStartPomodoro(taskId) : undefined}\n          onToggle={onToggle ? () => {\n            console.log('Toggling task completion from TaskList:', item.id);\n            onToggle(item.id);\n          } : undefined}\n          onDelete={onDelete ? (taskId) => onDelete(taskId) : undefined}\n        />\n      )}\n      initialNumToRender={20}\n      maxToRenderPerBatch={20}\n      windowSize={21}\n      onEndReachedThreshold={0.5}\n      onEndReached={() => console.log('Reached end of list')}\n      style={styles.list}\n      contentContainerStyle={styles.content}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    flex: 1,\n  },\n  content: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  error: {\n    color: 'red',\n    textAlign: 'center',\n  },\n}); ","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  FlatList,\n  TouchableOpacity,\n  Dimensions,\n  useWindowDimensions,\n  Modal,\n  Image\n} from 'react-native';\nimport { format } from 'date-fns';\nimport { Task, SubTask } from '../types/Task';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { Ionicons, MaterialIcons, AntDesign, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Card, Surface, Badge, Avatar, IconButton, Chip, Menu } from 'react-native-paper';\n\ninterface TaskGridViewProps {\n  tasks: Task[];\n  onTaskPress: (taskId: string) => void;\n  onEditTask?: (task: Task) => void;\n  onToggleCompletion: (taskId: string) => void;\n  onToggleSubtaskCompletion?: (taskId: string, subtaskId: string) => void;\n  EmptyComponent?: React.ComponentType<any>;\n  isMultiSelectMode?: boolean;\n  selectedTasks?: string[];\n  onTaskSelect?: (taskId: string) => void;\n  onLongPress?: (taskId: string) => void;\n  onStartPomodoro: (taskId: string) => void;\n  onDelete?: (taskId: string) => void;\n}\n\nexport default function TaskGridView({ \n  tasks, \n  onTaskPress, \n  onEditTask,\n  onToggleCompletion, \n  onToggleSubtaskCompletion,\n  EmptyComponent,\n  isMultiSelectMode = false,\n  selectedTasks = [],\n  onTaskSelect,\n  onLongPress,\n  onStartPomodoro,\n  onDelete\n}: TaskGridViewProps) {\n  const { theme, isDark } = useTheme();\n  const windowDimensions = useWindowDimensions();\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\n  const [showSubtasks, setShowSubtasks] = useState(false);\n  const [menuVisible, setMenuVisible] = useState<string | null>(null);\n  \n  // Enhanced grid layout configuration\n  const numColumns = 2;\n  const spacing = 8; // Reduced spacing between items\n  const leftPadding = 4; // Reduced left padding\n  const rightPadding = 4; // Reduced right padding\n  \n  // Calculate available width and item dimensions\n  const availableWidth = windowDimensions.width - leftPadding - rightPadding - (spacing * (numColumns - 1));\n  const itemWidth = availableWidth / numColumns;\n  \n  // Format the due date\n  const formatDueDate = (date?: Date | string) => {\n    if (!date) return '';\n    return format(new Date(date), 'MMM d');\n  };\n\n  // Get priority color\n  const getPriorityColor = (priority?: string) => {\n    switch (priority) {\n      case 'high': return theme.colors.error;\n      case 'medium': return theme.colors.warning;\n      case 'low': return theme.colors.success;\n      default: return theme.colors.outline;\n    }\n  };\n  \n  // Get category or tag color\n  const getTagColor = (index: number) => {\n    const colors = [\n      theme.colors.primary,\n      theme.colors.secondary,\n      theme.colors.info\n    ];\n    return colors[index % colors.length];\n  };\n\n  // Generate avatar for task based on title\n  const getTaskAvatar = (task: Task) => {\n    return null; // No longer generating avatar\n  };\n  \n  // Get subtasks progress\n  const getSubtasksProgress = (task: Task) => {\n    if (!task.subtasks || task.subtasks.length === 0) return null;\n    \n    const completed = task.subtasks.filter(st => st.completed).length;\n    const total = task.subtasks.length;\n    \n    return { completed, total, percentage: (completed / total) * 100 };\n  };\n  \n  // Handle subtask completion toggle\n  const handleToggleSubtask = (taskId: string, subtaskId: string) => {\n    if (onToggleSubtaskCompletion) {\n      onToggleSubtaskCompletion(taskId, subtaskId);\n    }\n  };\n  \n  // Add a function to get the priority icon based on priority level\n  const getPriorityIcon = (priority?: string) => {\n    switch (priority?.toLowerCase()) {\n      case 'high':\n        return 'arrow-upward';\n      case 'medium':\n        return 'remove';\n      case 'low':\n        return 'arrow-downward';\n      default:\n        return 'remove';\n    }\n  };\n  \n  // Render each task card in the grid\n  const renderItem = ({ item, index }: { item: Task, index: number }) => {\n    const isSelected = selectedTasks.includes(item.id);\n    const hasSubtasks = item.subtasks && item.subtasks.length > 0;\n    const subtasksProgress = getSubtasksProgress(item);\n    \n    return (\n      <TouchableOpacity\n        onPress={() => onTaskPress(item.id)}\n        onLongPress={() => onLongPress && onLongPress(item.id)}\n        style={[\n          styles.itemContainer,\n          { width: itemWidth }\n        ]}\n      >\n        <Card \n          style={[\n            styles.card,\n            isSelected && styles.selectedCard,\n            { backgroundColor: isDark ? theme.colors.surface : theme.colors.background }\n          ]}\n        >\n          <Card.Content style={styles.cardContent}>\n            {/* Header with status chip and actions */}\n            <View style={styles.header}>\n              <View style={styles.statusContainer}>\n                <Chip \n                  icon={item.completed ? \"check-circle\" : \"clock-outline\"}\n                  compact\n                  style={[\n                    styles.statusChip,\n                    { \n                      backgroundColor: item.completed ? \n                        (isDark ? '#4CAF5060' : '#4CAF5040') : \n                        (isDark ? '#FFC10760' : '#FFC10740'),\n                      height: 28,\n                      paddingHorizontal: 8,\n                    }\n                  ]}\n                >\n                  {item.completed ? 'Completed' : 'Pending'}\n                </Chip>\n              </View>\n              <Menu\n                visible={menuVisible === item.id}\n                onDismiss={() => setMenuVisible(null)}\n                anchor={\n                  <IconButton\n                    icon=\"dots-vertical\"\n                    size={20}\n                    onPress={() => setMenuVisible(item.id)}\n                    style={styles.menuButton}\n                  />\n                }\n                contentStyle={{ backgroundColor: theme.colors.surface }}\n              >\n                {onStartPomodoro && (\n                  <Menu.Item\n                    onPress={() => {\n                      setMenuVisible(null);\n                      onStartPomodoro(item.id);\n                    }}\n                    title=\"Start Pomodoro\"\n                    leadingIcon=\"timer-outline\"\n                  />\n                )}\n                {onToggleCompletion && (\n                  <Menu.Item\n                    onPress={() => {\n                      setMenuVisible(null);\n                      onToggleCompletion(item.id);\n                    }}\n                    title={item.completed ? \"Mark Incomplete\" : \"Mark Complete\"}\n                    leadingIcon={item.completed ? \"check-circle\" : \"circle-outline\"}\n                  />\n                )}\n                {onDelete && (\n                  <Menu.Item\n                    onPress={() => {\n                      setMenuVisible(null);\n                      onDelete(item.id);\n                    }}\n                    title=\"Delete\"\n                    leadingIcon=\"delete\"\n                  />\n                )}\n              </Menu>\n            </View>\n\n            {/* Title */}\n            <View style={styles.titleContainer}>\n              <MaterialIcons \n                name={getPriorityIcon(item.priority)} \n                size={16} \n                color={getPriorityColor(item.priority)}\n                style={styles.priorityIcon}\n              />\n              <Text \n                style={[\n                  styles.title,\n                  { color: theme.colors.text },\n                  item.completed && styles.completedText\n                ]}\n                numberOfLines={1}\n                ellipsizeMode=\"tail\"\n              >\n                {item.title}\n              </Text>\n            </View>\n            \n            {/* Description */}\n            {item.description && (\n              <Text \n                style={[\n                  styles.description,\n                  { color: theme.colors.inactive },\n                  item.completed && styles.completedText\n                ]}\n                numberOfLines={2}\n              >\n                {item.description}\n              </Text>\n            )}\n            \n            {/* Subtasks progress bar */}\n            {subtasksProgress && (\n              <View style={styles.progressContainer}>\n                <View style={styles.progressWrapper}>\n                  <View \n                    style={[\n                      styles.progressBar,\n                      { width: `${subtasksProgress.percentage}%`, backgroundColor: theme.colors.primary }\n                    ]}\n                  />\n                </View>\n                <Text style={[styles.progressText, { color: theme.colors.secondary }]}>\n                  {subtasksProgress.completed}/{subtasksProgress.total}\n                </Text>\n              </View>\n            )}\n            \n            {/* Footer with metadata */}\n            <View style={styles.cardFooter}>\n              {item.dueDate && (\n                <View style={styles.metaItem}>\n                  <MaterialCommunityIcons \n                    name=\"clock-outline\" \n                    size={14} \n                    color={theme.colors.primary} \n                  />\n                  <Text style={[styles.metaText, { color: theme.colors.primary }]}>\n                    {formatDueDate(item.dueDate)}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </Card.Content>\n        </Card>\n      </TouchableOpacity>\n    );\n  };\n  \n  // Handle opening the subtasks modal\n  const handleShowSubtasks = (task: Task) => {\n    setSelectedTask(task);\n    setShowSubtasks(true);\n  };\n  \n  // Render a subtask in the modal\n  const renderSubtask = (subtask: SubTask, taskId: string) => {\n    return (\n      <TouchableOpacity\n        key={subtask.id}\n        style={[\n          styles.subtaskItem,\n          { \n            backgroundColor: isDark ? 'rgba(255,255,255,0.08)' : 'rgba(0,0,0,0.04)',\n            borderRadius: 8 \n          }\n        ]}\n        onPress={() => handleToggleSubtask(taskId, subtask.id)}\n      >\n        <View style={styles.subtaskContent}>\n          <TouchableOpacity\n            style={[\n              styles.subtaskCheckbox,\n              { borderColor: theme.colors.primary },\n              subtask.completed && { backgroundColor: theme.colors.success }\n            ]}\n            onPress={() => handleToggleSubtask(taskId, subtask.id)}\n          >\n            {subtask.completed && (\n              <Ionicons name=\"checkmark\" size={14} color=\"#fff\" />\n            )}\n          </TouchableOpacity>\n          \n          <Text \n            style={[\n              styles.subtaskTitle,\n              { color: theme.colors.text },\n              subtask.completed && styles.completedSubtask\n            ]}\n            numberOfLines={1}\n          >\n            {subtask.title}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n  \n  // Subtasks modal\n  const renderSubtasksModal = () => {\n    if (!selectedTask) return null;\n    \n    return (\n      <Modal\n        visible={showSubtasks}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setShowSubtasks(false)}\n      >\n        <View style={[\n          styles.modalContainer,\n          { backgroundColor: 'rgba(0,0,0,0.5)' }\n        ]}>\n          <Surface style={[\n            styles.modalContent,\n            { \n              backgroundColor: theme.colors.surface,\n            }\n          ]}\n          elevation={4}\n          >\n            <View style={styles.modalHeader}>\n              <Text style={[styles.modalTitle, { color: theme.colors.text }]}>\n                {selectedTask.title}\n              </Text>\n              <IconButton\n                icon=\"close\"\n                size={20}\n                onPress={() => setShowSubtasks(false)}\n              />\n            </View>\n            \n            <View style={styles.modalBody}>\n              {selectedTask.subtasks?.length ? (\n                selectedTask.subtasks.map(subtask => \n                  renderSubtask(subtask, selectedTask.id)\n                )\n              ) : (\n                <Text style={[styles.emptyText, { color: theme.colors.secondary }]}>\n                  No subtasks available\n                </Text>\n              )}\n            </View>\n            \n            <View style={styles.modalFooter}>\n              <TouchableOpacity\n                style={[\n                  styles.modalButton,\n                  { backgroundColor: theme.colors.primary }\n                ]}\n                onPress={() => setShowSubtasks(false)}\n              >\n                <Text style={styles.modalButtonText}>Close</Text>\n              </TouchableOpacity>\n            </View>\n          </Surface>\n        </View>\n      </Modal>\n    );\n  };\n  \n  // Render the component\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={tasks}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id}\n        numColumns={numColumns}\n        contentContainerStyle={[\n          styles.listContainer,\n          { \n            paddingHorizontal: 4,\n            paddingVertical: 8\n          }\n        ]}\n        columnWrapperStyle={{ \n          justifyContent: 'flex-start',\n        }}\n        ListEmptyComponent={EmptyComponent || (\n          <View style={styles.emptyContainer}>\n            <MaterialCommunityIcons name=\"clipboard-text-outline\" size={48} color={theme.colors.secondary} />\n            <Text style={[styles.emptyText, { color: theme.colors.text }]}>\n              No tasks to display\n            </Text>\n          </View>\n        )}\n      />\n      {renderSubtasksModal()}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  listContainer: {\n    flexGrow: 1,\n  },\n  itemContainer: {\n    padding: 4,\n  },\n  card: {\n    margin: 0,\n    elevation: 2,\n  },\n  cardContent: {\n    padding: 8,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  statusContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  statusChip: {\n    alignSelf: 'flex-start',\n  },\n  menuButton: {\n    margin: 0,\n    padding: 0,\n    height: 28,\n    width: 28,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: '600',\n    flex: 1,\n    flexShrink: 1,\n  },\n  priorityIcon: {\n    marginRight: 4,\n  },\n  description: {\n    fontSize: 14,\n    marginBottom: 8,\n  },\n  progressContainer: {\n    marginBottom: 8,\n  },\n  progressWrapper: {\n    height: 4,\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    borderRadius: 2,\n    marginBottom: 4,\n  },\n  progressBar: {\n    height: '100%',\n    borderRadius: 2,\n  },\n  progressText: {\n    fontSize: 12,\n  },\n  cardFooter: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 'auto',\n  },\n  metaItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  metaText: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n  completedText: {\n    textDecorationLine: 'line-through',\n    opacity: 0.7,\n  },\n  selectedCard: {\n    borderWidth: 2,\n    borderColor: '#007AFF',\n  },\n  // Subtasks modal styles\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  modalContent: {\n    width: '90%',\n    borderRadius: 12,\n    overflow: 'hidden',\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingTop: 16,\n    paddingBottom: 8,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    flex: 1,\n  },\n  closeButton: {\n    padding: 4,\n  },\n  modalBody: {\n    padding: 16,\n    maxHeight: 400,\n  },\n  modalFooter: {\n    padding: 16,\n    alignItems: 'flex-end',\n  },\n  modalButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n  },\n  modalButtonText: {\n    color: '#fff',\n    fontWeight: '500',\n  },\n  subtaskItem: {\n    marginBottom: 8,\n    padding: 10,\n  },\n  subtaskContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  subtaskCheckbox: {\n    width: 20,\n    height: 20,\n    borderWidth: 2,\n    borderRadius: 4,\n    marginRight: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  subtaskTitle: {\n    fontSize: 14,\n    flex: 1,\n  },\n  completedSubtask: {\n    textDecorationLine: 'line-through',\n    opacity: 0.7,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  emptyText: {\n    fontSize: 16,\n    marginTop: 12,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Card, Text, IconButton, Badge } from 'react-native-paper';\nimport { Task } from '../types/Task';\nimport { format } from 'date-fns';\nimport { useTheme } from '../theme/ThemeProvider';\n\ninterface TaskCardProps {\n  task: Task;\n  onPress: () => void;\n  onStartPomodoro?: () => void;\n}\n\nexport const TaskCard = ({ task, onPress, onStartPomodoro }: TaskCardProps) => {\n  const { theme } = useTheme();\n  \n  // Priority colors\n  const priorityColors = {\n    high: theme.colors.error,\n    medium: theme.colors.warning,\n    low: theme.colors.success\n  };\n  \n  // Format date if available\n  const formattedDate = task.dueDate \n    ? format(new Date(task.dueDate), 'MMM d, yyyy')\n    : 'No due date';\n  \n  return (\n    <Card \n      style={[\n        styles.card, \n        { \n          borderLeftColor: task.priority ? priorityColors[task.priority] : theme.colors.outline,\n          backgroundColor: theme.colors.surface\n        }\n      ]}\n      onPress={onPress}\n    >\n      <Card.Content style={styles.content}>\n        <View style={styles.taskInfo}>\n          <Text \n            style={[\n              styles.title,\n              task.completed && styles.completedText,\n              { color: theme.colors.text }\n            ]}\n            numberOfLines={1}\n          >\n            {task.title}\n          </Text>\n          \n          {task.description ? (\n            <Text \n              style={[\n                styles.description,\n                task.completed && styles.completedText,\n                { color: theme.colors.secondary }\n              ]}\n              numberOfLines={1}\n            >\n              {task.description}\n            </Text>\n          ) : null}\n          \n          <View style={styles.metaContainer}>\n            <Text \n              style={[\n                styles.date,\n                { color: theme.colors.secondary }\n              ]}\n            >\n              {formattedDate}\n            </Text>\n            \n            {task.priority && (\n              <Badge \n                style={[\n                  styles.priority,\n                  { backgroundColor: priorityColors[task.priority] }\n                ]}\n              >\n                {task.priority}\n              </Badge>\n            )}\n          </View>\n        </View>\n        \n        {onStartPomodoro && (\n          <IconButton\n            icon=\"timer\"\n            size={20}\n            onPress={(e) => {\n              e.stopPropagation();\n              if (onStartPomodoro) onStartPomodoro();\n            }}\n            style={styles.actionButton}\n          />\n        )}\n      </Card.Content>\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    marginBottom: 8,\n    borderLeftWidth: 4,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n  },\n  taskInfo: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  description: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  completedText: {\n    textDecorationLine: 'line-through',\n    opacity: 0.7,\n  },\n  metaContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  date: {\n    fontSize: 12,\n    marginRight: 8,\n  },\n  priority: {\n    fontSize: 10,\n    height: 20,\n  },\n  actionButton: {\n    margin: 0,\n  },\n}); ","import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  Animated\n} from 'react-native';\nimport { format, addDays, isToday, isTomorrow, isYesterday, isAfter, isSameDay, isBefore } from 'date-fns';\nimport { useTaskStore } from '../stores/taskStore';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { Task } from '../types/Task';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { TaskCard } from './TaskCard';\n\ninterface TimelineViewProps {\n  onTaskPress?: (taskId: string) => void;\n  onToggleCompletion?: (taskId: string) => void;\n  days?: number;\n  tasks: Task[];\n  onStartPomodoro: (taskId: string) => void;\n}\n\nexport default function TimelineView({ \n  onTaskPress, \n  onToggleCompletion,\n  days = 14,  // Show 2 weeks by default\n  tasks,\n  onStartPomodoro\n}: TimelineViewProps) {\n  const { theme, isDark } = useTheme();\n  const [timelineTasks, setTimelineTasks] = useState<Record<string, Task[]>>({});\n  const [dateRange, setDateRange] = useState<Date[]>([]);\n  const [expandedDates, setExpandedDates] = useState<string[]>([]);\n  const fadeAnim = useState(new Animated.Value(0))[0];\n  \n  // Create task grouping as a top-level useMemo\n  const tasksByDate = useMemo(() => {\n    const grouped: Record<string, Task[]> = {};\n    \n    tasks.forEach((task: Task) => {\n      // Skip tasks without a due date\n      if (!task.dueDate) return;\n      \n      try {\n        // Ensure dueDate is a valid Date object\n        const taskDate = new Date(task.dueDate);\n        \n        // Skip if invalid date\n        if (isNaN(taskDate.getTime())) return;\n        \n        const dateKey = format(taskDate, 'yyyy-MM-dd');\n        \n        if (!grouped[dateKey]) {\n          grouped[dateKey] = [];\n        }\n        \n        grouped[dateKey].push(task);\n      } catch (error) {\n        console.error('Error processing task date:', error);\n        return;\n      }\n    });\n    \n    // Sort dates chronologically\n    return Object.keys(grouped)\n      .sort((a, b) => {\n        try {\n          const dateA = new Date(a);\n          const dateB = new Date(b);\n          \n          if (isNaN(dateA.getTime()) || isNaN(dateB.getTime())) {\n            return 0;\n          }\n          \n          return dateA.getTime() - dateB.getTime();\n        } catch (error) {\n          console.error('Error sorting dates:', error);\n          return 0;\n        }\n      })\n      .reduce((result, key) => {\n        // Sort tasks by priority and completion status\n        const sortedTasks = [...grouped[key]].sort((a, b) => {\n          // First sort by completion status\n          if (a.completed && !b.completed) return 1;\n          if (!a.completed && b.completed) return -1;\n          \n          // Then by priority\n          const priorityOrder = { high: 0, medium: 1, low: 2 };\n          const priorityDiff = priorityOrder[a.priority || 'low'] - priorityOrder[b.priority || 'low'];\n          if (priorityDiff !== 0) return priorityDiff;\n          \n          // Then by title\n          return a.title.localeCompare(b.title);\n        });\n        \n        result[key] = sortedTasks;\n        return result;\n      }, {} as Record<string, Task[]>);\n  }, [tasks]);\n  \n  // Initialize date range and set timeline tasks\n  useEffect(() => {\n    // Create date range centered around today\n    const dates: Date[] = [];\n    const today = new Date();\n    \n    // Add dates - past, today, and future\n    const pastDays = Math.floor(days / 3);\n    const futureDays = days - pastDays - 1;\n    \n    // Add past dates\n    for (let i = -pastDays; i < 0; i++) {\n      dates.push(addDays(today, i));\n    }\n    \n    // Add today\n    dates.push(today);\n    \n    // Add future dates\n    for (let i = 1; i <= futureDays; i++) {\n      dates.push(addDays(today, i));\n    }\n    \n    setDateRange(dates);\n    \n    // Automatically expand today's date\n    const todayKey = format(today, 'yyyy-MM-dd');\n    setExpandedDates([todayKey]);\n    \n    setTimelineTasks(tasksByDate);\n    \n    // Fade in animation\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: true\n    }).start();\n  }, [days, tasksByDate]);\n  \n  // Format date for display\n  const formatDate = (date: Date): string => {\n    if (isToday(date)) return 'Today';\n    if (isTomorrow(date)) return 'Tomorrow';\n    if (isYesterday(date)) return 'Yesterday';\n    return format(date, 'EEE, MMM d');\n  };\n  \n  // Handle toggling a date section (expand/collapse)\n  const toggleDateExpansion = (dateKey: string) => {\n    setExpandedDates(prev => \n      prev.includes(dateKey)\n        ? prev.filter(date => date !== dateKey)\n        : [...prev, dateKey]\n    );\n  };\n  \n  // Handle task completion toggle\n  const handleToggleTask = (taskId: string) => {\n    if (onToggleCompletion) {\n      onToggleCompletion(taskId);\n    }\n  };\n  \n  // Determine the date section color based on its relation to today\n  const getDateSectionColor = (date: Date) => {\n    const today = new Date();\n    \n    if (isToday(date)) {\n      return theme.colors.primary;\n    } else if (isBefore(date, today)) {\n      return theme.colors.error; // Past dates\n    } else {\n      return theme.colors.success; // Future dates\n    }\n  };\n  \n  // Render a task item\n  const renderTaskItem = (task: Task, dateKey: string) => {\n    const priorityColors = {\n      high: theme.colors.error,\n      medium: theme.colors.warning,\n      low: theme.colors.success\n    };\n    \n    return (\n      <TaskCard\n        key={task.id}\n        task={task}\n        onPress={() => onTaskPress && onTaskPress(task.id)}\n        onStartPomodoro={() => onStartPomodoro(task.id)}\n      />\n    );\n  };\n  \n  // Render a day's timeline\n  const renderDayTimeline = (date: Date) => {\n    const dateKey = format(date, 'yyyy-MM-dd');\n    const tasksForDate = timelineTasks[dateKey] || [];\n    const isExpanded = expandedDates.includes(dateKey);\n    const dateColor = getDateSectionColor(date);\n    \n    // If no tasks and not today, don't show this date\n    if (tasksForDate.length === 0 && !isToday(date)) {\n      return null;\n    }\n    \n    return (\n      <View \n        key={dateKey} \n        style={[\n          styles.dayContainer,\n          { borderBottomColor: theme.colors.border }\n        ]}\n      >\n        <TouchableOpacity\n          style={[\n            styles.dateHeader,\n            {\n              borderLeftColor: dateColor,\n              backgroundColor: isDark ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)'\n            }\n          ]}\n          onPress={() => toggleDateExpansion(dateKey)}\n        >\n          <View style={styles.dateHeaderContent}>\n            <Text \n              style={[\n                styles.dateText, \n                { color: theme.colors.text }\n              ]}\n            >\n              {formatDate(date)}\n            </Text>\n            \n            <View style={styles.dateHeaderRight}>\n              <Text style={[styles.taskCount, { color: theme.colors.text, opacity: 0.7 }]}>\n                {tasksForDate.length} {tasksForDate.length === 1 ? 'task' : 'tasks'}\n              </Text>\n              \n              <MaterialIcons \n                name={isExpanded ? 'expand-less' : 'expand-more'} \n                size={24} \n                color={theme.colors.text} \n              />\n            </View>\n          </View>\n        </TouchableOpacity>\n        \n        {isExpanded && (\n          <Animated.View \n            style={[\n              styles.tasksContainer,\n              { opacity: fadeAnim }\n            ]}\n          >\n            {tasksForDate.length > 0 ? (\n              tasksForDate.map(task => renderTaskItem(task, dateKey))\n            ) : (\n              <View style={[styles.emptyDayContainer, { backgroundColor: theme.colors.card }]}>\n                <Text style={[styles.emptyDayText, { color: theme.colors.text }]}>\n                  No tasks scheduled\n                </Text>\n              </View>\n            )}\n          </Animated.View>\n        )}\n      </View>\n    );\n  };\n  \n  return (\n    <Animated.View style={[styles.container, { opacity: fadeAnim }]}>\n      <ScrollView \n        style={styles.scrollView}\n        contentContainerStyle={styles.scrollContent}\n        showsVerticalScrollIndicator={false}\n      >\n        {dateRange.map(date => renderDayTimeline(date))}\n      </ScrollView>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    paddingBottom: 20,\n  },\n  dayContainer: {\n    marginBottom: 8,\n    borderBottomWidth: 1,\n  },\n  dateHeader: {\n    padding: 12,\n    borderLeftWidth: 4,\n    borderRadius: 4,\n  },\n  dateHeaderContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  dateHeaderRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  dateText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  taskCount: {\n    fontSize: 14,\n    marginRight: 8,\n  },\n  tasksContainer: {\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n  },\n  taskItem: {\n    flexDirection: 'row',\n    borderRadius: 8,\n    marginBottom: 8,\n    padding: 12,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n  },\n  taskStatusContainer: {\n    marginRight: 12,\n    justifyContent: 'center',\n  },\n  checkbox: {\n    width: 22,\n    height: 22,\n    borderRadius: 4,\n    borderWidth: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  taskContent: {\n    flex: 1,\n  },\n  taskTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  taskDescription: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  priorityIndicator: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginLeft: 8,\n  },\n  priorityText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  subtasksIndicator: {\n    marginTop: 4,\n  },\n  subtasksText: {\n    fontSize: 12,\n  },\n  progressBarContainer: {\n    marginTop: 4,\n  },\n  progressBar: {\n    height: 4,\n    borderRadius: 2,\n    overflow: 'hidden',\n  },\n  progressFill: {\n    height: 4,\n    borderRadius: 2,\n  },\n  emptyDayContainer: {\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  emptyDayText: {\n    fontSize: 14,\n    fontStyle: 'italic',\n  }\n}); ","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Platform,\n  Vibration\n} from 'react-native';\nimport { useTaskStore } from '../stores/taskStore';\nimport { Task } from '../types/Task';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { AntDesign } from '@expo/vector-icons';\n\nexport interface InlinePomodoroTimerProps {\n  initialTaskId?: string;\n  onMinimize: () => void;\n}\n\nconst InlinePomodoroTimer: React.FC<InlinePomodoroTimerProps> = ({\n  initialTaskId,\n  onMinimize\n}) => {\n  const { theme, isDark } = useTheme();\n  const {\n    tasks,\n    currentPomodoro,\n    pomodoroSettings,\n    startPomodoro,\n    pausePomodoro,\n    resumePomodoro,\n    stopPomodoro,\n    completePomodoro,\n    skipBreak\n  } = useTaskStore();\n\n  // State\n  const [selectedTaskId, setSelectedTaskId] = useState<string | null>(initialTaskId || null);\n  \n  // Refs\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // Computed values\n  const selectedTask = selectedTaskId \n    ? tasks.find(t => t.id === selectedTaskId) \n    : null;\n  \n  const formattedTime = formatTime(currentPomodoro.timeRemaining);\n  \n  const isActive = currentPomodoro.active;\n  const isBreak = currentPomodoro.isBreak;\n  \n  const timerTitle = isBreak \n    ? (currentPomodoro.timeRemaining > pomodoroSettings.shortBreakDuration * 60 \n        ? 'Long Break' \n        : 'Short Break') \n    : 'Work Session';\n  \n  // Set up timer\n  useEffect(() => {\n    if (isActive) {\n      timerRef.current = setInterval(() => {\n        if (currentPomodoro.timeRemaining <= 1) {\n          // Timer complete\n          if (isBreak) {\n            // Break complete\n            handleBreakComplete();\n          } else {\n            // Work session complete\n            handleSessionComplete();\n          }\n        } else {\n          // Decrement timer\n          useTaskStore.setState((state) => ({\n            currentPomodoro: {\n              ...(state.currentPomodoro || {}),\n              timeRemaining: state.currentPomodoro?.timeRemaining - 1\n            }\n          }));\n        }\n      }, 1000);\n    } else if (timerRef.current) {\n      // Clear timer when not active\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n    \n    // Clean up timer on unmount\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isActive, currentPomodoro.timeRemaining, isBreak]);\n  \n  // Update selected task when initialTaskId changes\n  useEffect(() => {\n    if (initialTaskId) {\n      setSelectedTaskId(initialTaskId);\n    }\n  }, [initialTaskId]);\n  \n  // Handle timer completion\n  const handleSessionComplete = () => {\n    // Vibrate device to notify user\n    if (Platform.OS !== 'web') {\n      Vibration.vibrate([500, 200, 500]);\n    }\n    \n    // Mark session as complete\n    completePomodoro();\n  };\n  \n  const handleBreakComplete = () => {\n    // Vibrate device to notify user\n    if (Platform.OS !== 'web') {\n      Vibration.vibrate([300, 100, 300]);\n    }\n    \n    // Reset timer state\n    skipBreak();\n    \n    // Auto-start next session if setting is enabled\n    if (pomodoroSettings.autoStartNextSession && selectedTaskId) {\n      startPomodoro(selectedTaskId);\n    }\n  };\n  \n  // Format seconds into MM:SS\n  function formatTime(seconds: number): string {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }\n  \n  // Timer control actions\n  const handleStart = () => {\n    if (!selectedTaskId && tasks.length > 0) {\n      // Just pick the first task if none selected\n      setSelectedTaskId(tasks[0].id);\n      startPomodoro(tasks[0].id);\n    } else if (selectedTaskId) {\n      startPomodoro(selectedTaskId);\n    }\n  };\n  \n  const handlePause = () => {\n    pausePomodoro();\n  };\n  \n  const handleResume = () => {\n    resumePomodoro();\n  };\n  \n  const handleStop = () => {\n    stopPomodoro(true, \"Manually stopped\");\n  };\n  \n  const handleSkipBreak = () => {\n    skipBreak();\n  };\n  \n  // Select a different task\n  const selectNextTask = () => {\n    if (tasks.length === 0) return;\n    \n    if (!selectedTaskId) {\n      setSelectedTaskId(tasks[0].id);\n      return;\n    }\n    \n    const currentIndex = tasks.findIndex(t => t.id === selectedTaskId);\n    const nextIndex = (currentIndex + 1) % tasks.length;\n    setSelectedTaskId(tasks[nextIndex].id);\n  };\n\n  return (\n    <View style={[\n      styles.container, \n      { backgroundColor: isDark ? '#222' : '#f5f5f5' }\n    ]}>\n      <View style={styles.header}>\n        <Text style={[styles.title, { color: theme.colors.text }]}>\n          Pomodoro Timer\n        </Text>\n        {onMinimize && (\n          <TouchableOpacity\n            style={styles.closeButton}\n            onPress={onMinimize}\n            activeOpacity={0.7}\n          >\n            <AntDesign name=\"close\" size={24} color={theme.colors.text} />\n          </TouchableOpacity>\n        )}\n      </View>\n      \n      {/* Task display */}\n      <TouchableOpacity \n        style={[\n          styles.taskButton,\n          { backgroundColor: isDark ? '#333' : '#fff' }\n        ]}\n        onPress={selectNextTask}\n      >\n        <Text style={[styles.taskButtonLabel, { color: theme.colors.secondary }]}>\n          Current Task:\n        </Text>\n        <Text style={[styles.taskButtonText, { color: theme.colors.text }]}>\n          {selectedTask ? selectedTask.title : 'Select a task'}\n        </Text>\n      </TouchableOpacity>\n      \n      {/* Timer display */}\n      <View style={[\n        styles.timerDisplay,\n        {\n          backgroundColor: isDark ? '#333' : '#fff',\n          borderColor: isBreak ? theme.colors.success : theme.colors.primary\n        }\n      ]}>\n        <Text style={[styles.timerType, { color: theme.colors.text }]}>\n          {timerTitle}\n        </Text>\n        <Text style={[\n          styles.timer, \n          { \n            color: isBreak ? theme.colors.success : theme.colors.primary\n          }\n        ]}>\n          {formattedTime}\n        </Text>\n        <Text style={[styles.sessionCount, { color: theme.colors.secondary }]}>\n          Session {currentPomodoro?.currentSessionCount} of {pomodoroSettings?.sessionsUntilLongBreak}\n        </Text>\n      </View>\n      \n      {/* Timer controls */}\n      <View style={styles.controls}>\n        {!isActive ? (\n          <TouchableOpacity\n            style={[\n              styles.controlButton,\n              styles.primaryButton,\n              { backgroundColor: theme.colors.primary }\n            ]}\n            onPress={currentPomodoro.sessionId ? handleResume : handleStart}\n          >\n            <Text style={[styles.controlButtonText, { color: '#fff' }]}>\n              {currentPomodoro.sessionId ? 'Resume' : 'Start'}\n            </Text>\n          </TouchableOpacity>\n        ) : (\n          <>\n            <TouchableOpacity\n              style={[\n                styles.controlButton,\n                { backgroundColor: theme.colors.warning }\n              ]}\n              onPress={handlePause}\n            >\n              <Text style={[styles.controlButtonText, { color: '#fff' }]}>Pause</Text>\n            </TouchableOpacity>\n            \n            {isBreak ? (\n              <TouchableOpacity\n                style={[\n                  styles.controlButton,\n                  { backgroundColor: theme.colors.secondary }\n                ]}\n                onPress={handleSkipBreak}\n              >\n                <Text style={[styles.controlButtonText, { color: '#fff' }]}>Skip Break</Text>\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                style={[\n                  styles.controlButton,\n                  { backgroundColor: theme.colors.error }\n                ]}\n                onPress={handleStop}\n              >\n                <Text style={[styles.controlButtonText, { color: '#fff' }]}>Stop</Text>\n              </TouchableOpacity>\n            )}\n          </>\n        )}\n      </View>\n      \n      {/* Stats */}\n      {selectedTask && selectedTask.completedPomodoros ? (\n        <View style={styles.statsSection}>\n          <Text style={[styles.statsTitle, { color: theme.colors.text }]}>\n            Task Statistics\n          </Text>\n          <View style={styles.statsGrid}>\n            <View style={styles.statItem}>\n              <Text style={[styles.statValue, { color: theme.colors.primary }]}>\n                {selectedTask.completedPomodoros}\n              </Text>\n              <Text style={[styles.statLabel, { color: theme.colors.secondary }]}>\n                Completed\n              </Text>\n            </View>\n            \n            <View style={styles.statItem}>\n              <Text style={[styles.statValue, { color: theme.colors.primary }]}>\n                {selectedTask.totalPomodoroTime || 0}\n              </Text>\n              <Text style={[styles.statLabel, { color: theme.colors.secondary }]}>\n                Minutes\n              </Text>\n            </View>\n          </View>\n        </View>\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    borderRadius: 16,\n    marginBottom: 16,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    padding: 8,\n  },\n  taskButton: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  taskButtonLabel: {\n    fontSize: 12,\n    marginBottom: 4,\n  },\n  taskButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  timerDisplay: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 24,\n    borderRadius: 12,\n    marginBottom: 24,\n    borderWidth: 2,\n  },\n  timerType: {\n    fontSize: 18,\n    fontWeight: '500',\n    marginBottom: 8,\n  },\n  timer: {\n    fontSize: 64,\n    fontWeight: 'bold',\n    fontVariant: ['tabular-nums'],\n  },\n  sessionCount: {\n    fontSize: 14,\n    marginTop: 8,\n  },\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 24,\n  },\n  controlButton: {\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    minWidth: 120,\n    alignItems: 'center',\n  },\n  primaryButton: {\n    paddingVertical: 16,\n    minWidth: 180,\n  },\n  controlButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  statsSection: {\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n    paddingTop: 16,\n  },\n  statsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    textAlign: 'center',\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  statLabel: {\n    fontSize: 14,\n  },\n});\n\nexport default InlinePomodoroTimer; ","/**\n * Generates a unique ID for use within the app\n * This is a simpler alternative to uuid that doesn't require crypto.getRandomValues()\n */\nexport const generateId = (): string => {\n  const timestamp = Date.now().toString(36);\n  const randomPart = Math.random().toString(36).substring(2, 15);\n  return `${timestamp}-${randomPart}`;\n}; ","import React, { createContext, useContext, useState, useRef, useEffect } from 'react';\nimport { \n  Animated, \n  Text, \n  View, \n  StyleSheet, \n  TouchableOpacity,\n  Dimensions,\n  Platform\n} from 'react-native';\nimport { useTheme } from '../theme/ThemeProvider';\n\n// Type definitions\ntype NotificationType = 'success' | 'error' | 'info' | 'warning';\n\ninterface NotificationAction {\n  label: string;\n  onPress: () => void;\n}\n\ninterface NotificationProps {\n  message: string;\n  title?: string;\n  type?: NotificationType;\n  duration?: number;\n  showClose?: boolean;\n  action?: NotificationAction;\n}\n\ninterface NotificationContextType {\n  showNotification: (params: NotificationProps) => void;\n  hideNotification: () => void;\n}\n\n// Create the context\nconst NotificationContext = createContext<NotificationContextType>({\n  showNotification: () => {},\n  hideNotification: () => {},\n});\n\n// Custom hook for easy access to notification functions\nexport const useNotification = () => useContext(NotificationContext);\n\n// Main provider component\nexport const NotificationProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {\n  const { theme } = useTheme();\n  const [visible, setVisible] = useState(false);\n  const [notification, setNotification] = useState<NotificationProps>({\n    message: '',\n    type: 'info',\n    duration: 3000,\n    showClose: true,\n  });\n  const animationValue = useRef(new Animated.Value(-100)).current;\n  const timeout = useRef<NodeJS.Timeout | null>(null);\n  \n  // Show notification with animation\n  const showNotification = (params: NotificationProps) => {\n    // Clear any existing timeout\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n    \n    // Update notification content\n    setNotification({\n      ...notification,\n      ...params\n    });\n    \n    // Show notification\n    setVisible(true);\n    \n    // Animate in\n    Animated.timing(animationValue, {\n      toValue: 0,\n      duration: 300,\n      useNativeDriver: true\n    }).start();\n    \n    // Auto-hide unless duration is 0\n    if (params.duration !== 0) {\n      timeout.current = setTimeout(() => {\n        hideNotification();\n      }, params.duration || 3000);\n    }\n  };\n  \n  // Hide notification with animation\n  const hideNotification = () => {\n    Animated.timing(animationValue, {\n      toValue: -100,\n      duration: 300,\n      useNativeDriver: true\n    }).start(() => {\n      setVisible(false);\n    });\n    \n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n  };\n  \n  // Clean up on unmount\n  useEffect(() => {\n    return () => {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []);\n  \n  // Get the appropriate color for the notification type\n  const getNotificationColor = (type: NotificationType) => {\n    switch (type) {\n      case 'success': return '#4CAF50';\n      case 'error': return '#F44336';\n      case 'warning': return '#FF9800';\n      case 'info': default: return '#2196F3';\n    }\n  };\n  \n  // Get the appropriate icon character for the notification type\n  const getNotificationIconChar = (type: NotificationType) => {\n    switch (type) {\n      case 'success': return '✓';\n      case 'error': return '✕';\n      case 'warning': return '⚠';\n      case 'info': default: return 'ℹ';\n    }\n  };\n\n  // Render the notification component\n  return (\n    <NotificationContext.Provider value={{ showNotification, hideNotification }}>\n      {children}\n      {visible && (\n        <Animated.View \n          style={[\n            styles.container,\n            { \n              transform: [{ translateY: animationValue }],\n              backgroundColor: getNotificationColor(notification.type || 'info'),\n              shadowColor: theme.colors.shadow,\n            }\n          ]}\n        >\n          <View style={styles.content}>\n            <View style={styles.iconContainer}>\n              <Text style={styles.iconText}>\n                {getNotificationIconChar(notification.type || 'info')}\n              </Text>\n            </View>\n            \n            <View style={styles.textContainer}>\n              {notification.title && (\n                <Text style={styles.title}>{notification.title}</Text>\n              )}\n              <Text style={styles.message}>{notification.message}</Text>\n              \n              {/* Add action button if provided */}\n              {notification.action && (\n                <TouchableOpacity \n                  style={styles.actionButton}\n                  onPress={() => {\n                    if (notification.action?.onPress) {\n                      notification.action.onPress();\n                    }\n                    hideNotification();\n                  }}\n                  activeOpacity={0.7}\n                >\n                  <Text style={styles.actionButtonText}>\n                    {notification.action.label}\n                  </Text>\n                </TouchableOpacity>\n              )}\n            </View>\n            \n            {notification.showClose && (\n              <TouchableOpacity \n                style={styles.closeButton} \n                onPress={hideNotification}\n              >\n                <Text style={styles.closeButtonText}>×</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </Animated.View>\n      )}\n    </NotificationContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: Platform.OS === 'ios' ? 50 : 30,\n    left: 16,\n    right: 16,\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 6,\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.3,\n    shadowRadius: 4,\n    zIndex: 1000,\n  },\n  content: {\n    flexDirection: 'row',\n    padding: 16,\n    alignItems: 'center',\n  },\n  iconContainer: {\n    width: 30,\n    height: 30,\n    borderRadius: 15,\n    backgroundColor: 'rgba(255, 255, 255, 0.25)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  textContainer: {\n    flex: 1,\n    marginLeft: 16,\n  },\n  title: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginBottom: 4,\n  },\n  message: {\n    color: 'white',\n    fontSize: 14,\n  },\n  closeButton: {\n    paddingHorizontal: 8,\n    marginLeft: 8,\n  },\n  closeButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  actionButton: {\n    marginTop: 8,\n    alignSelf: 'flex-start',\n    backgroundColor: 'rgba(255, 255, 255, 0.35)',\n    paddingHorizontal: 12,\n    paddingVertical: 5,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: 'rgba(255, 255, 255, 0.5)',\n  },\n  actionButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 12,\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  Alert\n} from 'react-native';\nimport { SubTask } from '../types/Task';\nimport { useTaskStore } from '../stores/taskStore';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { Ionicons } from '@expo/vector-icons';\nimport { generateId } from '../utils/generateId';\nimport { useNotification } from '../contexts/NotificationContext';\n\ninterface SubTaskListProps {\n  taskId: string;\n  subtasks?: SubTask[];\n  progress?: number;\n  onChange?: (subtasks: SubTask[]) => void;\n  isNewTask?: boolean;\n}\n\nconst SubTaskList: React.FC<SubTaskListProps> = ({ \n  taskId, \n  subtasks = [], \n  progress = 0,\n  onChange,\n  isNewTask = false\n}) => {\n  const { addSubtask, toggleSubtask, deleteSubtask } = useTaskStore();\n  const { theme } = useTheme();\n  const { showNotification } = useNotification();\n  const [newSubtaskTitle, setNewSubtaskTitle] = useState('');\n  const [localSubtasks, setLocalSubtasks] = useState<SubTask[]>(subtasks);\n\n  // Update local subtasks when props change\n  useEffect(() => {\n    setLocalSubtasks(subtasks);\n  }, [subtasks]);\n\n  // Helper function to calculate progress\n  const calculateProgress = (tasks: SubTask[]) => {\n    if (tasks.length === 0) return 0;\n    const completedCount = tasks.filter(st => st.completed).length;\n    return Math.round((completedCount / tasks.length) * 100);\n  };\n\n  const handleAddSubtask = () => {\n    console.log(\"Add subtask button pressed\");\n    console.log(\"Title:\", newSubtaskTitle);\n    console.log(\"Is new task:\", isNewTask || taskId === 'new');\n    \n    if (!newSubtaskTitle.trim()) {\n      console.log(\"Empty title, not adding subtask\");\n      return;\n    }\n\n    // For new tasks, manage subtasks locally\n    if (isNewTask || taskId === 'new') {\n      console.log(\"Adding subtask locally\");\n      const newSubtask: SubTask = {\n        id: generateId(),\n        title: newSubtaskTitle.trim(),\n        completed: false,\n        createdAt: new Date()\n      };\n      \n      const updatedSubtasks = [...localSubtasks, newSubtask];\n      console.log(\"Updated subtasks:\", updatedSubtasks);\n      setLocalSubtasks(updatedSubtasks);\n      \n      // Notify parent component of the change\n      if (onChange) {\n        console.log(\"Notifying parent of change\");\n        onChange(updatedSubtasks);\n      }\n      \n      // Show success notification\n      showNotification({\n        type: 'success',\n        title: 'Subtask Added',\n        message: `\"${newSubtaskTitle.trim()}\" has been added to the checklist.`\n      });\n    } else {\n      // For existing tasks, use the store\n      console.log(\"Adding subtask to store\");\n      addSubtask(taskId, newSubtaskTitle.trim()).then((updatedTask) => {\n        if (updatedTask) {\n          showNotification({\n            type: 'success',\n            title: 'Subtask Added',\n            message: `\"${newSubtaskTitle.trim()}\" has been added to the checklist.`\n          });\n        }\n      });\n    }\n    \n    setNewSubtaskTitle('');\n  };\n\n  const handleToggleSubtask = (subtaskId: string) => {\n    // Find the subtask to get its title\n    const subtask = (isNewTask || taskId === 'new')\n      ? localSubtasks.find(st => st.id === subtaskId)\n      : displaySubtasks.find(st => st.id === subtaskId);\n    \n    if (!subtask) return;\n    \n    const willBeCompleted = !subtask.completed;\n    \n    // For new tasks, toggle locally\n    if (isNewTask || taskId === 'new') {\n      const updatedSubtasks = localSubtasks.map(subtask => \n        subtask.id === subtaskId \n          ? { ...subtask, completed: !subtask.completed, updatedAt: new Date() }\n          : subtask\n      );\n      \n      setLocalSubtasks(updatedSubtasks);\n      \n      // Notify parent component of the change\n      if (onChange) {\n        onChange(updatedSubtasks);\n      }\n      \n      // Show status notification\n      showNotification({\n        type: willBeCompleted ? 'success' : 'info',\n        title: willBeCompleted ? 'Subtask Completed' : 'Subtask Pending',\n        message: `\"${subtask.title}\" has been marked as ${willBeCompleted ? 'completed' : 'pending'}.`\n      });\n    } else {\n      // For existing tasks, use the store\n      toggleSubtask(taskId, subtaskId).then((updatedTask) => {\n        if (updatedTask) {\n          showNotification({\n            type: willBeCompleted ? 'success' : 'info',\n            title: willBeCompleted ? 'Subtask Completed' : 'Subtask Pending',\n            message: `\"${subtask.title}\" has been marked as ${willBeCompleted ? 'completed' : 'pending'}.`\n          });\n        }\n      });\n    }\n  };\n\n  const handleDeleteSubtask = (subtaskId: string) => {\n    // Find the subtask to get its title\n    const subtask = (isNewTask || taskId === 'new')\n      ? localSubtasks.find(st => st.id === subtaskId)\n      : displaySubtasks.find(st => st.id === subtaskId);\n    \n    if (!subtask) return;\n    \n    const subtaskTitle = subtask.title;\n    \n    if (isNewTask || taskId === 'new') {\n      // For new tasks, delete locally\n      Alert.alert(\n        'Delete Subtask',\n        `Are you sure you want to delete \"${subtaskTitle}\"?`,\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { \n            text: 'Delete', \n            onPress: () => {\n              const updatedSubtasks = localSubtasks.filter(st => st.id !== subtaskId);\n              setLocalSubtasks(updatedSubtasks);\n              \n              // Notify parent component of the change\n              if (onChange) {\n                onChange(updatedSubtasks);\n              }\n              \n              // Show deletion success notification\n              showNotification({\n                type: 'success',\n                title: 'Subtask Deleted',\n                message: `\"${subtaskTitle}\" has been removed from the checklist.`\n              });\n            },\n            style: 'destructive'\n          }\n        ]\n      );\n    } else {\n      // For existing tasks, use the store\n      Alert.alert(\n        'Delete Subtask',\n        `Are you sure you want to delete \"${subtaskTitle}\"?`,\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { \n            text: 'Delete', \n            onPress: () => {\n              deleteSubtask(taskId, subtaskId).then((updatedTask) => {\n                if (updatedTask) {\n                  // Show deletion success notification\n                  showNotification({\n                    type: 'success',\n                    title: 'Subtask Deleted',\n                    message: `\"${subtaskTitle}\" has been removed from the checklist.`\n                  });\n                }\n              });\n            },\n            style: 'destructive'\n          }\n        ]\n      );\n    }\n  };\n\n  // Display either local subtasks or props subtasks based on whether this is a new task\n  const displaySubtasks = isNewTask || taskId === 'new' ? localSubtasks : subtasks;\n  const displayProgress = isNewTask || taskId === 'new' \n    ? calculateProgress(localSubtasks) \n    : progress;\n    \n  // Render a single subtask item\n  const renderSubtaskItem = (item: SubTask) => (\n    <View \n      key={item.id} \n      style={[styles.subtaskItem, { borderBottomColor: theme.colors.outline || theme.colors.text + '40' }]}\n    >\n      <TouchableOpacity\n        style={styles.checkbox}\n        onPress={() => handleToggleSubtask(item.id)}\n      >\n        {item.completed ? (\n          <Ionicons name=\"checkmark-circle\" size={20} color={theme.colors.primary} />\n        ) : (\n          <Ionicons name=\"ellipse-outline\" size={20} color={theme.colors.text} />\n        )}\n      </TouchableOpacity>\n      \n      <Text\n        style={[\n          styles.subtaskTitle,\n          { color: theme.colors.text },\n          item.completed && styles.completedSubtask\n        ]}\n      >\n        {item.title}\n      </Text>\n      \n      <TouchableOpacity \n        style={styles.deleteButton}\n        onPress={() => handleDeleteSubtask(item.id)}\n      >\n        <Ionicons name=\"close-circle-outline\" size={20} color={theme.colors.error} />\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.headerContainer}>\n        <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>\n          Checklist\n        </Text>\n        {displaySubtasks.length > 0 && (\n          <View style={styles.progressContainer}>\n            <Text style={[styles.progressText, { color: theme.colors.text }]}>\n              {displayProgress}%\n            </Text>\n            <View style={[styles.progressBar, { backgroundColor: theme.colors.outline || theme.colors.text + '40' }]}>\n              <View \n                style={[\n                  styles.progressFill, \n                  { \n                    backgroundColor: theme.colors.primary,\n                    width: `${displayProgress}%` \n                  }\n                ]} \n              />\n            </View>\n          </View>\n        )}\n      </View>\n      \n      {displaySubtasks.length > 0 ? (\n        <View style={styles.subtaskList}>\n          {displaySubtasks.map(renderSubtaskItem)}\n        </View>\n      ) : (\n        <Text style={[styles.emptyText, { color: theme.colors.text + '60' }]}>\n          No subtasks yet. Add one below.\n        </Text>\n      )}\n      \n      <View style={[styles.addSubtaskContainer, { borderColor: theme.colors.outline || theme.colors.text + '40' }]}>\n        <TextInput\n          style={[styles.input, { color: theme.colors.text, borderColor: theme.colors.outline || theme.colors.text + '40' }]}\n          placeholder=\"Add a subtask...\"\n          placeholderTextColor={theme.colors.text + '60'}\n          value={newSubtaskTitle}\n          onChangeText={setNewSubtaskTitle}\n          onSubmitEditing={handleAddSubtask}\n        />\n        {/* Make the add button always enabled and more visible */}\n        <TouchableOpacity\n          style={[\n            styles.addButton, \n            { backgroundColor: theme.colors.primary }\n          ]}\n          onPress={handleAddSubtask}\n          activeOpacity={0.7}\n        >\n          <Ionicons name=\"add\" size={24} color=\"white\" />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 20,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  progressContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  progressText: {\n    marginRight: 8,\n    fontSize: 14,\n  },\n  progressBar: {\n    height: 6,\n    width: 100,\n    borderRadius: 3,\n  },\n  progressFill: {\n    height: 6,\n    borderRadius: 3,\n  },\n  subtaskList: {\n    marginBottom: 10,\n  },\n  subtaskItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n  },\n  checkbox: {\n    marginRight: 10,\n  },\n  subtaskTitle: {\n    flex: 1,\n    fontSize: 16,\n  },\n  completedSubtask: {\n    textDecorationLine: 'line-through',\n    opacity: 0.7,\n  },\n  deleteButton: {\n    paddingHorizontal: 5,\n  },\n  emptyText: {\n    textAlign: 'center',\n    marginVertical: 15,\n    fontStyle: 'italic',\n  },\n  addSubtaskContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    paddingTop: 15,\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderRadius: 5,\n    marginRight: 10,\n  },\n  addButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 3, // Add elevation for Android\n    shadowColor: '#000', // Add shadow for iOS\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n  },\n});\n\nexport default SubTaskList; ","import React, { useState, useEffect } from 'react';\nimport { \n  View, \n  Text, \n  TextInput, \n  StyleSheet, \n  TouchableOpacity, \n  ScrollView,\n  Modal,\n  Platform,\n  Alert,\n  Button,\n  Switch,\n  KeyboardAvoidingView,\n  Pressable,\n  TouchableWithoutFeedback,\n  Keyboard,\n  ActivityIndicator\n} from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { Task, TaskCategory, RecurrencePattern, ReminderOption, SubTask } from '../types/Task';\nimport { useTaskStore } from '../stores/taskStore';\nimport { format, parse, addMinutes, addDays, addWeeks, addMonths, addYears, isValid } from 'date-fns';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { Picker } from '@react-native-picker/picker';\nimport { setTimeForDate } from '../services/RecurrenceService';\nimport SubTaskList from './SubTaskList';\nimport { Ionicons, MaterialIcons, FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { formatISO } from 'date-fns';\nimport { HelperText, Chip, Surface } from 'react-native-paper';\nimport databaseService from '../database/DatabaseService';\nimport * as Haptics from 'expo-haptics';\nimport * as Speech from 'expo-speech';\n\ninterface TaskFormProps {\n  task?: Task;\n  isVisible: boolean;\n  onClose: () => void;\n  onSave: (task: Omit<Task, 'id' | 'createdAt' | 'updatedAt'>) => void;\n}\n\nconst REMINDER_OPTIONS: ReminderOption[] = [\n  { value: 0, label: 'At time of event' },\n  { value: 5, label: '5 minutes before' },\n  { value: 15, label: '15 minutes before' },\n  { value: 30, label: '30 minutes before' },\n  { value: 60, label: '1 hour before' },\n  { value: 120, label: '2 hours before' },\n  { value: 1440, label: '1 day before' },\n];\n\nconst RECURRENCE_TYPES = ['daily', 'weekly', 'monthly', 'yearly'];\n\n// Predefined simple categories with colors\nconst PRESET_CATEGORIES = [\n  { id: 'work', name: 'Work', color: '#FF5733' },\n  { id: 'personal', name: 'Personal', color: '#33A1FF' },\n  { id: 'shopping', name: 'Shopping', color: '#33FF57' },\n  { id: 'health', name: 'Health', color: '#F033FF' },\n  { id: 'education', name: 'Education', color: '#FFD433' },\n  { id: 'finance', name: 'Finance', color: '#33FFC1' }\n];\n\n// Quick add task templates\nconst QUICK_ADD_TEMPLATES = [\n  { title: 'Meeting', icon: 'users', color: '#4CAF50' },\n  { title: 'Email', icon: 'envelope', color: '#2196F3' },\n  { title: 'Call', icon: 'phone', color: '#FF9800' },\n  { title: 'Document', icon: 'file-alt', color: '#9C27B0' },\n  { title: 'Exercise', icon: 'running', color: '#E91E63' },\n];\n\n// Add priority options with enhanced visual indicators\nconst PRIORITY_OPTIONS = [\n  { value: 'low', label: 'Low', color: '#4CAF50', icon: 'arrow-downward', description: 'Not urgent' },\n  { value: 'medium', label: 'Medium', color: '#FF9800', icon: 'remove', description: 'Moderate priority' },\n  { value: 'high', label: 'High', color: '#F44336', icon: 'arrow-upward', description: 'Urgent' },\n];\n\nexport default function TaskForm({ task, isVisible, onClose, onSave }: TaskFormProps) {\n  const { theme, isDark } = useTheme();\n  const { addTask, updateTask, templates = [] } = useTaskStore();\n  \n  // Add loading states\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Add form validation state\n  const [validationErrors, setValidationErrors] = useState<{\n    title?: string;\n    description?: string;\n    dueDate?: string;\n  }>({});\n  \n  // Form state\n  const [title, setTitle] = useState(task?.title || '');\n  const [description, setDescription] = useState(task?.description || '');\n  const [priority, setPriority] = useState<Task['priority']>(task?.priority || 'medium');\n  const [dueDate, setDueDate] = useState<Date | undefined>(\n    task?.dueDate ? new Date(task.dueDate) : undefined\n  );\n  const [dueTime, setDueTime] = useState<Date | undefined>(task?.dueDate ? new Date(task.dueDate) : undefined);\n  const [category, setCategory] = useState<string | undefined>(task?.categoryId || undefined);\n  \n  // Add AI suggestion state\n  const [suggestedTitle, setSuggestedTitle] = useState('');\n  const [showSuggestion, setShowSuggestion] = useState(false);\n  const [isGeneratingSuggestion, setIsGeneratingSuggestion] = useState(false);\n  \n  // Advanced options\n  const [hasReminder, setHasReminder] = useState(task?.reminder !== undefined);\n  const [reminderMinutes, setReminderMinutes] = useState(task?.reminder || 30);\n  const [isRecurring, setIsRecurring] = useState(task?.recurrence !== undefined);\n  const [recurrenceType, setRecurrenceType] = useState<RecurrencePattern['type']>(task?.recurrence?.type || 'daily');\n  const [recurrenceInterval, setRecurrenceInterval] = useState(task?.recurrence?.interval || 1);\n  const [recurrenceEndDate, setRecurrenceEndDate] = useState<Date | undefined>(task?.recurrence?.endDate);\n  \n  // UI state\n  const [showAdvancedOptions, setShowAdvancedOptions] = useState(false);\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [showTimePicker, setShowTimePicker] = useState(false);\n  const [showRecurrenceEndDatePicker, setShowRecurrenceEndDatePicker] = useState(false);\n  const [datePickerMode, setDatePickerMode] = useState<'date' | 'time'>('date');\n  const [activeDateInput, setActiveDateInput] = useState<'dueDate' | 'dueTime' | 'recurrenceEndDate'>('dueDate');\n  \n  // Add state for subtasks\n  const [subtasks, setSubtasks] = useState<SubTask[]>(task?.subtasks || []);\n  const [progress, setProgress] = useState(task?.progress || 0);\n  \n  // Add state for quick add\n  const [showQuickAdd, setShowQuickAdd] = useState(false);\n  \n  // Add state for focused section\n  const [focusedSection, setFocusedSection] = useState<'basic' | 'details' | 'subtasks'>('basic');\n  \n  // Add smart date input state\n  const [smartDateInput, setSmartDateInput] = useState('');\n  const [showSmartDateInput, setShowSmartDateInput] = useState(false);\n  \n  // Voice input states\n  const [isListening, setIsListening] = useState(false);\n  const [voiceTarget, setVoiceTarget] = useState<'title' | 'description' | null>(null);\n  \n  // Update the useEffect for initializing form data to include subtasks\n  useEffect(() => {\n    if (task) {\n      setTitle(task.title);\n      setDescription(task.description || '');\n      setPriority(task.priority);\n      setDueDate(task.dueDate ? new Date(task.dueDate) : undefined);\n      setCategory(task.categoryId);\n      \n      // Set time if available\n      if (task.dueDate) {\n        setDueTime(task.dueDate ? new Date(task.dueDate) : undefined);\n      }\n      \n      // Set reminder if available\n      if (task.reminder !== undefined) {\n        setHasReminder(true);\n        setReminderMinutes(task.reminder);\n      }\n      \n      // Set recurrence if available\n      if (task.recurrence) {\n        setIsRecurring(true);\n        setRecurrenceType(task.recurrence.type);\n        setRecurrenceInterval(task.recurrence.interval);\n        setRecurrenceEndDate(task.recurrence.endDate);\n      }\n      \n      // Show advanced options if needed\n      if (task.reminder !== undefined || task.recurrence) {\n        setShowAdvancedOptions(true);\n      }\n      \n      // Set subtasks if available\n      if (task.subtasks) {\n        setSubtasks(task.subtasks);\n        \n        // Calculate progress\n        if (task.progress !== undefined) {\n          setProgress(task.progress);\n        } else if (task.subtasks.length > 0) {\n          const completedCount = task.subtasks.filter(subtask => subtask.completed).length;\n          setProgress(Math.round((completedCount / task.subtasks.length) * 100));\n        }\n      }\n    } else {\n      // Reset form for new task\n      resetForm();\n    }\n  }, [task, isVisible]);\n  \n  // Update the resetForm function to include subtasks\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setPriority('medium');\n    setDueDate(undefined);\n    setDueTime(undefined);\n    setCategory(undefined);\n    setHasReminder(false);\n    setReminderMinutes(30);\n    setIsRecurring(false);\n    setRecurrenceType('daily');\n    setRecurrenceInterval(1);\n    setRecurrenceEndDate(undefined);\n    setShowAdvancedOptions(false);\n    \n    // Reset subtasks\n    setSubtasks([]);\n    setProgress(0);\n  };\n  \n  // Handle date/time picker opening\n  const openDateTimePicker = (mode: 'date' | 'time', inputType: 'dueDate' | 'dueTime' | 'recurrenceEndDate') => {\n    setDatePickerMode(mode);\n    setActiveDateInput(inputType);\n    \n    if (Platform.OS === 'ios') {\n      setShowDatePicker(true);\n    } else {\n      // On Android, we need separate handling for date and time\n      if (mode === 'date') {\n        setShowDatePicker(true);\n      } else {\n        setShowTimePicker(true);\n      }\n    }\n  };\n  \n  // Handle date/time selection\n  const handleDateTimeChange = (event: any, selectedDate?: Date) => {\n    // On Android, the picker is automatically dismissed\n    if (Platform.OS === 'android') {\n      setShowDatePicker(false);\n      setShowTimePicker(false);\n    }\n    \n    if (selectedDate) {\n      // Ensure we have a valid date object\n      const date = new Date(selectedDate);\n      \n      // Update the appropriate state based on which input triggered the picker\n      if (activeDateInput === 'dueDate') {\n        // If we already have a time, preserve it\n        if (dueTime && datePickerMode === 'date') {\n          const newDate = new Date(date);\n          newDate.setHours(dueTime.getHours(), dueTime.getMinutes());\n          setDueDate(newDate);\n          setDueTime(newDate);\n        } else {\n          setDueDate(date);\n          // If selecting time, update both date and time\n          if (datePickerMode === 'time') {\n            setDueTime(date);\n          }\n        }\n      } else if (activeDateInput === 'dueTime') {\n        // Ensure we have a valid date to set the time on\n        const baseDate = dueDate || new Date();\n        const newDate = new Date(baseDate);\n        newDate.setHours(date.getHours(), date.getMinutes());\n        setDueTime(newDate);\n        setDueDate(newDate);\n      } else if (activeDateInput === 'recurrenceEndDate') {\n        setRecurrenceEndDate(date);\n      }\n    }\n  };\n  \n  // Close date picker (for iOS)\n  const closeDatePicker = () => {\n    setShowDatePicker(false);\n    setShowTimePicker(false);\n    setShowRecurrenceEndDatePicker(false);\n  };\n  \n  // Format time for display\n  const formatTimeForDisplay = (date?: Date) => {\n    if (!date) return 'Set time';\n    try {\n      return format(date, 'h:mm a');\n    } catch (error) {\n      console.error('Error formatting time:', error);\n      return 'Invalid time';\n    }\n  };\n  \n  // Format recurrence for display\n  const getRecurrenceDescription = () => {\n    if (!isRecurring) return '';\n    \n    let description = `Every `;\n    if (recurrenceInterval > 1) {\n      description += `${recurrenceInterval} `;\n    }\n    \n    switch (recurrenceType) {\n      case 'daily':\n        description += recurrenceInterval > 1 ? 'days' : 'day';\n        break;\n      case 'weekly':\n        description += recurrenceInterval > 1 ? 'weeks' : 'week';\n        break;\n      case 'monthly':\n        description += recurrenceInterval > 1 ? 'months' : 'month';\n        break;\n      case 'yearly':\n        description += recurrenceInterval > 1 ? 'years' : 'year';\n        break;\n    }\n    \n    if (recurrenceEndDate) {\n      description += ` until ${format(recurrenceEndDate, 'MMM d, yyyy')}`;\n    }\n    \n    return description;\n  };\n  \n  // Get the next occurrence based on recurrence pattern\n  const getNextOccurrence = (baseDate: Date, pattern: RecurrencePattern): Date => {\n    const { type, interval } = pattern;\n    \n    switch (type) {\n      case 'daily':\n        return addDays(baseDate, interval);\n      case 'weekly':\n        return addWeeks(baseDate, interval);\n      case 'monthly':\n        return addMonths(baseDate, interval);\n      case 'yearly':\n        return addYears(baseDate, interval);\n      default:\n        return baseDate;\n    }\n  };\n  \n  // Add haptic feedback\n  const handleInteraction = async (type: 'light' | 'medium' | 'heavy') => {\n    try {\n      switch (type) {\n        case 'light':\n          await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n          break;\n        case 'medium':\n          await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n          break;\n        case 'heavy':\n          await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Heavy);\n          break;\n      }\n    } catch (error) {\n      console.error('Haptics error:', error);\n    }\n  };\n  \n  // Update handleSubmit with better validation and logging\n  const handleSubmit = async () => {\n    console.log('TaskForm - handleSubmit called');\n    console.log('TaskForm - Current title:', title);\n    console.log('TaskForm - Trimmed title:', title?.trim());\n    \n    // First validate the form\n    if (!validateForm()) {\n      console.log('TaskForm - Form validation failed');\n      await handleInteraction('medium');\n      return;\n    }\n\n    setError(null);\n    setIsSubmitting(true);\n    \n    try {\n      const taskData = {\n        title: title || '',\n        description: description || '',\n        priority: priority || 'low',\n        dueDate: dueDate ? formatISO(dueDate) : undefined,\n        dueTime: dueTime ? format(dueTime, 'HH:mm') : undefined,\n        recurrence: isRecurring ? {\n          type: recurrenceType,\n          interval: recurrenceInterval,\n          endDate: recurrenceEndDate,\n        } : undefined,\n        reminder: hasReminder ? reminderMinutes : undefined,\n        completed: task?.completed || false,\n        subtasks: subtasks.length > 0 ? subtasks : undefined,\n        progress: subtasks.length > 0 ? progress : undefined,\n        tags: selectedTags,\n        categoryId: category || undefined,\n      };\n\n      console.log('TaskForm - Submitting task data:', taskData);\n\n      let savedTask: Task;\n      \n      if (task) {\n        savedTask = await updateTask({id: task.id, ...taskData});\n      } else {\n        savedTask = await addTask(taskData);\n      }\n      \n      await handleInteraction('heavy');\n      \n      if (onSave) {\n        onSave(savedTask);\n      }\n      onClose();\n    } catch (error) {\n      await handleInteraction('medium');\n      console.error('TaskForm - Error saving task:', error);\n      \n      // Only show error if it's not a successful task creation\n      if (!(error instanceof Error && error.message === 'Title is required' && title)) {\n        setError(error instanceof Error ? error.message : 'Failed to save task. Please try again.');\n        Alert.alert('Error', 'Failed to save task. Please try again.');\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Update validateForm function with better logging\n  const validateForm = () => {\n    console.log('TaskForm - Validating form...');\n    console.log('TaskForm - Title:', title);\n    console.log('TaskForm - Trimmed title:', title.trim());\n    \n    const errors: typeof validationErrors = {};\n    \n    if (dueDate && dueDate < new Date()) {\n      console.log('TaskForm - Due date validation failed');\n      errors.dueDate = 'Due date cannot be in the past';\n    }\n    \n    if (description && description.length > 1000) {\n      console.log('TaskForm - Description validation failed');\n      errors.description = 'Description is too long (max 1000 characters)';\n    }\n    \n    console.log('TaskForm - Validation errors:', errors);\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Update handleSave to use handleSubmit directly\n  const handleSave = () => {\n    console.log('TaskForm - Save button pressed');\n    handleSubmit();\n  };\n\n  // Update the title input onChangeText handler\n  const handleTitleChange = (text: string) => {\n    console.log('TaskForm - Title changed:', text);\n    setTitle(text);\n    // Clear validation error when user types\n    if (validationErrors.title) {\n      setValidationErrors(prev => ({ ...prev, title: undefined }));\n    }\n  };\n\n  // Add auto-save functionality\n  useEffect(() => {\n    const autoSaveTimeout = setTimeout(() => {\n      if (title.trim() && !isSubmitting) {\n        handleSubmit();\n      }\n    }, 30000); // Auto-save after 30 seconds of inactivity\n\n    return () => clearTimeout(autoSaveTimeout);\n  }, [title, description, priority, dueDate, dueTime, isRecurring, recurrenceType, recurrenceInterval, recurrenceEndDate, hasReminder, reminderMinutes, subtasks, progress, selectedTags, category]);\n\n  // Add keyboard handling\n  const handleKeyboardDismiss = () => {\n    Keyboard.dismiss();\n  };\n  \n  // Toggle showing advanced options\n  const toggleAdvancedOptions = () => {\n    setShowAdvancedOptions(!showAdvancedOptions);\n  };\n  \n  // Add function to update local subtasks state (for use in SubTaskList)\n  const handleSubtasksChange = (updatedSubtasks: SubTask[]) => {\n    console.log(\"Subtasks changed:\", updatedSubtasks);\n    setSubtasks(updatedSubtasks);\n    \n    // Calculate progress\n    if (updatedSubtasks.length > 0) {\n      const completedCount = updatedSubtasks.filter(subtask => subtask.completed).length;\n      const newProgress = Math.round((completedCount / updatedSubtasks.length) * 100);\n      console.log(\"New progress:\", newProgress);\n      setProgress(newProgress);\n    } else {\n      setProgress(0);\n    }\n  };\n  \n  const [availableTags, setAvailableTags] = useState<Array<{ id: string; name: string; color: string }>>([]);\n  const [selectedTags, setSelectedTags] = useState<string[]>((task as any)?.tags?.map((t: any) => t.id) || []);\n  const [tags, setTags] = useState<string[]>(task?.tags || []);\n  const [newTag, setNewTag] = useState('');\n\n  useEffect(() => {\n    loadTags();\n  }, []);\n\n  const loadTags = async () => {\n    try {\n      const result = await databaseService.executeSql('SELECT * FROM tags ORDER BY name');\n      setAvailableTags(result.rows._array);\n    } catch (error) {\n      console.error('Error loading tags:', error);\n    }\n  };\n\n  const toggleTag = (tagId: string) => {\n    setSelectedTags(prev => \n      prev.includes(tagId)\n        ? prev.filter(id => id !== tagId)\n        : [...prev, tagId]\n    );\n  };\n\n  // Update quick add handler with haptic feedback\n  const handleQuickAdd = async (template: typeof QUICK_ADD_TEMPLATES[0]) => {\n    await handleInteraction('light');\n    setTitle(template.title);\n    setCategory(template.color);\n    setShowQuickAdd(false);\n  };\n\n  // Handle applying a custom template from the store\n  const handleUseTemplate = async (template: any) => {\n    await handleInteraction('medium');\n    // Apply template data to form\n    setTitle(template.title);\n    setDescription(template.description || '');\n    setPriority(template.priority || 'medium');\n    \n    // Set due date based on template's dueTimeOffset or default to tomorrow\n    if (template.dueTimeOffset) {\n      const newDueDate = new Date();\n      newDueDate.setDate(newDueDate.getDate() + template.dueTimeOffset);\n      setDueDate(newDueDate);\n    } else {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      setDueDate(tomorrow);\n    }\n    \n    // Add subtasks from template\n    if (template.subtasks && Array.isArray(template.subtasks)) {\n      const newSubtasks = template.subtasks.map((st: any) => ({\n        id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n        title: st.title,\n        completed: false,\n        createdAt: new Date()\n      }));\n      setSubtasks(newSubtasks);\n    }\n    \n    // Set category if provided\n    if (template.categoryId) {\n      setCategory(template.categoryId);\n    }\n    \n    setShowQuickAdd(false);\n  };\n\n  // Handle tag management\n  const handleAddTag = async () => {\n    if (newTag.trim()) {\n      try {\n        // Create new tag in database\n        const result = await databaseService.executeSql(\n          'INSERT INTO tags (name, color) VALUES (?, ?)',\n          [newTag.trim(), theme.colors.primary]\n        );\n        \n        const tagId = result.insertId?.toString();\n        if (tagId) {\n          // Add tag to selected tags\n          setSelectedTags(prev => [...prev, tagId]);\n          setNewTag('');\n          // Reload available tags\n          loadTags();\n        }\n      } catch (error) {\n        console.error('Error adding tag:', error);\n      }\n    }\n  };\n\n  const handleRemoveTag = async (tagId: string) => {\n    try {\n      setSelectedTags(prev => prev.filter(id => id !== tagId));\n    } catch (error) {\n      console.error('Error removing tag:', error);\n    }\n  };\n\n  // Add the priority color helper function\n  const getPriorityColor = (priority: string = 'medium') => {\n    switch (priority.toLowerCase()) {\n      case 'high':\n        return '#FF5252';\n      case 'medium':\n        return '#FFB300';\n      case 'low':\n        return '#69F0AE';\n      default:\n        return '#BDBDBD';\n    }\n  };\n\n  // Generate AI suggestion for the task\n  const generateSuggestion = () => {\n    setIsGeneratingSuggestion(true);\n    \n    // Simulate AI generating a suggestion (would be replaced with actual API call)\n    setTimeout(() => {\n      const suggestions = [\n        \"Weekly team meeting\",\n        \"Review project documentation\",\n        \"Send follow-up email to client\",\n        \"Update project timeline\",\n        \"Research competitor strategies\",\n        \"Prepare presentation slides\",\n        \"Schedule stakeholder interview\"\n      ];\n      \n      const randomSuggestion = suggestions[Math.floor(Math.random() * suggestions.length)];\n      setSuggestedTitle(randomSuggestion);\n      setShowSuggestion(true);\n      setIsGeneratingSuggestion(false);\n    }, 1000);\n  };\n\n  // Accept the suggested title\n  const acceptSuggestion = () => {\n    setTitle(suggestedTitle);\n    setShowSuggestion(false);\n  };\n\n  // Parse natural language date\n  const parseSmartDate = (input: string) => {\n    const today = new Date();\n    const lowercaseInput = input.toLowerCase().trim();\n    \n    if (lowercaseInput === 'today') {\n      return today;\n    }\n    \n    if (lowercaseInput === 'tomorrow') {\n      return addDays(today, 1);\n    }\n    \n    if (lowercaseInput === 'next week' || lowercaseInput === 'in a week') {\n      return addWeeks(today, 1);\n    }\n    \n    if (lowercaseInput === 'next month') {\n      return addMonths(today, 1);\n    }\n    \n    // Handle \"next [day of week]\"\n    const days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n    for (let i = 0; i < days.length; i++) {\n      if (lowercaseInput === `next ${days[i]}`) {\n        const targetDay = i;\n        const currentDay = today.getDay();\n        const daysUntilNext = (targetDay + 7 - currentDay) % 7;\n        return addDays(today, daysUntilNext === 0 ? 7 : daysUntilNext);\n      }\n    }\n    \n    // Try to parse as a date string\n    try {\n      const parsedDate = new Date(input);\n      if (isValid(parsedDate)) {\n        return parsedDate;\n      }\n    } catch (error) {\n      console.log('Error parsing date:', error);\n    }\n    \n    // If all else fails, return undefined\n    return undefined;\n  };\n  \n  // Handle smart date input submission\n  const handleSmartDateSubmit = () => {\n    const parsedDate = parseSmartDate(smartDateInput);\n    if (parsedDate) {\n      setDueDate(parsedDate);\n      // Also set time to noon by default\n      const dateWithTime = new Date(parsedDate);\n      dateWithTime.setHours(12, 0, 0, 0);\n      setDueTime(dateWithTime);\n    }\n    setSmartDateInput('');\n    setShowSmartDateInput(false);\n  };\n\n  // Simulate voice recognition (in a real app, would use Speech Recognition API)\n  const startVoiceInput = (target: 'title' | 'description') => {\n    setVoiceTarget(target);\n    setIsListening(true);\n    \n    // Show feedback to user\n    handleInteraction('medium');\n    \n    // Simulate voice processing (would be real speech recognition in production)\n    setTimeout(() => {\n      const demoVoiceResults = {\n        title: [\n          \"Schedule team meeting for project review\",\n          \"Complete budget report for Q3\",\n          \"Research new project management tools\",\n          \"Follow up with client about feedback\"\n        ],\n        description: [\n          \"Need to discuss timeline changes and resource allocation with the team. Prepare slides beforehand.\",\n          \"Include sales projections and expense breakdown. Send to finance department when complete.\",\n          \"Focus on tools that integrate with our current stack and have good collaboration features.\",\n          \"Address their concerns about the latest deliverable and provide timeline for revisions.\"\n        ]\n      };\n      \n      // Get random result based on target\n      const results = demoVoiceResults[target];\n      const randomResult = results[Math.floor(Math.random() * results.length)];\n      \n      // Apply the result to the appropriate field\n      if (target === 'title') {\n        setTitle(randomResult);\n      } else {\n        setDescription(randomResult);\n      }\n      \n      // End voice recognition\n      setIsListening(false);\n      setVoiceTarget(null);\n      \n      // Provide feedback\n      handleInteraction('heavy');\n    }, 2000);\n  };\n  \n  // Cancel voice input\n  const cancelVoiceInput = () => {\n    setIsListening(false);\n    setVoiceTarget(null);\n    handleInteraction('light');\n  };\n\n  return (\n    <Modal\n      visible={isVisible}\n      animationType=\"slide\"\n      transparent={false}\n      onRequestClose={onClose}\n      accessibilityLabel={task ? 'Edit Task Form' : 'Add Task Form'}\n    >\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={[styles.container, { backgroundColor: theme.colors.background }]}\n      >\n        <TouchableWithoutFeedback onPress={handleKeyboardDismiss}>\n          <View style={styles.container}>\n            <View style={[styles.header, { borderBottomColor: theme.colors.outline }]}>\n              <Text \n                style={[styles.headerTitle, { color: theme.colors.text }]}\n                accessibilityRole=\"header\"\n              >\n                {task ? 'Edit Task' : 'New Task'}\n              </Text>\n              <View style={styles.headerActions}>\n                <TouchableOpacity \n                  style={styles.quickAddButton}\n                  onPress={() => setShowQuickAdd(!showQuickAdd)}\n                  accessibilityLabel=\"Quick Add Templates\"\n                  accessibilityHint=\"Shows quick add task templates\"\n                >\n                  <MaterialIcons \n                    name=\"bolt\" \n                    size={24} \n                    color={theme.colors.primary} \n                  />\n                </TouchableOpacity>\n                <TouchableOpacity \n                  style={styles.closeButton} \n                  onPress={onClose}\n                  accessibilityLabel=\"Close\"\n                >\n                  <MaterialIcons \n                    name=\"close\" \n                    size={24} \n                    color={theme.colors.text} \n                  />\n                </TouchableOpacity>\n              </View>\n            </View>\n\n            {/* New section navigation */}\n            <View style={styles.sectionNav}>\n              <TouchableOpacity \n                style={[\n                  styles.sectionTab, \n                  focusedSection === 'basic' && [styles.activeTab, {borderBottomColor: theme.colors.primary}]\n                ]}\n                onPress={() => setFocusedSection('basic')}\n              >\n                <Text style={[\n                  styles.sectionTabText, \n                  {color: focusedSection === 'basic' ? theme.colors.primary : theme.colors.text}\n                ]}>\n                  Basic\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={[\n                  styles.sectionTab, \n                  focusedSection === 'details' && [styles.activeTab, {borderBottomColor: theme.colors.primary}]\n                ]}\n                onPress={() => setFocusedSection('details')}\n              >\n                <Text style={[\n                  styles.sectionTabText, \n                  {color: focusedSection === 'details' ? theme.colors.primary : theme.colors.text}\n                ]}>\n                  Details\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={[\n                  styles.sectionTab, \n                  focusedSection === 'subtasks' && [styles.activeTab, {borderBottomColor: theme.colors.primary}]\n                ]}\n                onPress={() => setFocusedSection('subtasks')}\n              >\n                <Text style={[\n                  styles.sectionTabText, \n                  {color: focusedSection === 'subtasks' ? theme.colors.primary : theme.colors.text}\n                ]}>\n                  Subtasks\n                </Text>\n              </TouchableOpacity>\n            </View>\n\n            {showQuickAdd && (\n              <View \n                style={[styles.quickAddContainer, { backgroundColor: theme.colors.background }]}\n                accessibilityLabel=\"Quick Add Templates\"\n              >\n                <Text style={[\n                  styles.sectionLabel, \n                  {color: theme.colors.text, fontWeight: 'bold', marginBottom: 8 }\n                ]}>\n                  Quick Templates\n                </Text>\n                <ScrollView \n                  horizontal \n                  showsHorizontalScrollIndicator={false}\n                  accessibilityRole=\"list\"\n                >\n                  {QUICK_ADD_TEMPLATES.map((template) => (\n                    <TouchableOpacity\n                      key={template.title}\n                      style={[styles.quickAddItem, { backgroundColor: template.color + '20' }]}\n                      onPress={() => handleQuickAdd(template)}\n                      accessibilityLabel={`Quick add ${template.title} task`}\n                      accessibilityRole=\"button\"\n                    >\n                      <FontAwesome5 name={template.icon} size={24} color={template.color} />\n                      <Text style={[styles.quickAddText, { color: template.color }]}>\n                        {template.title}\n                      </Text>\n                    </TouchableOpacity>\n                  ))}\n                </ScrollView>\n                \n                {templates.length > 0 && (\n                  <>\n                    <Text style={[\n                      styles.sectionLabel, \n                      {color: theme.colors.text, fontWeight: 'bold', marginTop: 16, marginBottom: 8 }\n                    ]}>\n                      Your Templates\n                    </Text>\n                    <ScrollView \n                      horizontal \n                      showsHorizontalScrollIndicator={false}\n                      accessibilityRole=\"list\"\n                    >\n                      {templates.map((template) => (\n                        <TouchableOpacity\n                          key={template.id}\n                          style={[\n                            styles.quickAddItem, \n                            { \n                              backgroundColor: getPriorityColor(template.priority) + '20',\n                              borderLeftWidth: 3,\n                              borderLeftColor: getPriorityColor(template.priority)\n                            }\n                          ]}\n                          onPress={() => handleUseTemplate(template)}\n                          accessibilityLabel={`Use template ${template.name}`}\n                          accessibilityRole=\"button\"\n                        >\n                          <MaterialCommunityIcons \n                            name=\"file-document-outline\" \n                            size={24} \n                            color={getPriorityColor(template.priority)} \n                          />\n                          <Text style={[\n                            styles.quickAddText, \n                            { color: theme.colors.text }\n                          ]}>\n                            {template.name}\n                          </Text>\n                        </TouchableOpacity>\n                      ))}\n                    </ScrollView>\n                  </>\n                )}\n              </View>\n            )}\n            \n            <ScrollView \n              style={styles.formContainer}\n              keyboardShouldPersistTaps=\"handled\"\n              showsVerticalScrollIndicator={false}\n              accessibilityRole=\"none\"\n            >\n              {focusedSection === 'basic' && (\n                <>\n                  {/* Title input with AI suggestion button */}\n                  <Surface style={[styles.inputSurface, { backgroundColor: theme.colors.surface }]}>\n                    <View style={styles.titleInputContainer}>\n                      <TextInput\n                        style={[\n                          styles.input, \n                          { \n                            color: theme.colors.text,\n                            flex: 1\n                          },\n                          validationErrors.title && styles.inputError\n                        ]}\n                        placeholder=\"What do you need to do?\"\n                        placeholderTextColor={theme.colors.text + '80'}\n                        value={title}\n                        onChangeText={handleTitleChange}\n                        accessibilityLabel=\"Task Title\"\n                        accessibilityHint=\"Enter the title of your task\"\n                        accessibilityRole=\"none\"\n                      />\n                      <TouchableOpacity \n                        style={styles.voiceButton}\n                        onPress={() => startVoiceInput('title')}\n                        disabled={isListening}\n                      >\n                        <MaterialCommunityIcons \n                          name=\"microphone-outline\" \n                          size={24} \n                          color={isListening && voiceTarget === 'title' ? 'red' : theme.colors.primary} \n                        />\n                      </TouchableOpacity>\n                    </View>\n                    \n                    {showSuggestion && (\n                      <View style={styles.suggestionContainer}>\n                        <Text style={styles.suggestionText}>\n                          Suggestion: {suggestedTitle}\n                        </Text>\n                        <TouchableOpacity \n                          style={styles.acceptButton}\n                          onPress={acceptSuggestion}\n                        >\n                          <Text style={styles.acceptButtonText}>Use this</Text>\n                        </TouchableOpacity>\n                      </View>\n                    )}\n                    \n                    {isGeneratingSuggestion && (\n                      <View style={styles.loadingContainer}>\n                        <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n                        <Text style={{marginLeft: 8, color: theme.colors.text}}>\n                          Generating suggestion...\n                        </Text>\n                      </View>\n                    )}\n                    \n                    {validationErrors.title && (\n                      <HelperText type=\"error\" visible={true}>\n                        {validationErrors.title}\n                      </HelperText>\n                    )}\n                  </Surface>\n\n                  {/* Description input with enhanced styling */}\n                  <Surface style={[styles.inputSurface, { backgroundColor: theme.colors.surface }]}>\n                    <View style={styles.descriptionContainer}>\n                      <TextInput\n                        style={[\n                          styles.input, \n                          styles.textArea,\n                          { \n                            color: theme.colors.text,\n                            flex: 1\n                          }\n                        ]}\n                        placeholder=\"Add details (optional)\"\n                        placeholderTextColor={theme.colors.text + '80'}\n                        value={description}\n                        onChangeText={setDescription}\n                        multiline\n                        numberOfLines={3}\n                        accessibilityLabel=\"Task Description\"\n                        accessibilityHint=\"Enter the description of your task\"\n                        accessibilityRole=\"none\"\n                      />\n                      <TouchableOpacity \n                        style={styles.voiceButton}\n                        onPress={() => startVoiceInput('description')}\n                        disabled={isListening}\n                      >\n                        <MaterialCommunityIcons \n                          name=\"microphone-outline\" \n                          size={24} \n                          color={isListening && voiceTarget === 'description' ? 'red' : theme.colors.primary} \n                        />\n                      </TouchableOpacity>\n                    </View>\n                  </Surface>\n\n                  {/* Priority selector with enhanced styling */}\n                  <View style={styles.prioritySection}>\n                    <Text style={[styles.label, { color: theme.colors.text }]}>Priority</Text>\n                    <View style={styles.priorityContainer}>\n                      {PRIORITY_OPTIONS.map((option) => (\n                        <TouchableOpacity\n                          key={option.value}\n                          style={[\n                            styles.priorityButton,\n                            { \n                              borderColor: priority === option.value ? option.color : theme.colors.outline,\n                              backgroundColor: priority === option.value ? option.color + '20' : 'transparent',\n                            }\n                          ]}\n                          onPress={() => {\n                            handleInteraction('light');\n                            setPriority(option.value as 'low' | 'medium' | 'high');\n                          }}\n                          accessibilityLabel={`Set priority to ${option.label} - ${option.description}`}\n                          accessibilityRole=\"button\"\n                        >\n                          <MaterialIcons\n                            name={option.icon}\n                            size={24}\n                            color={priority === option.value ? option.color : theme.colors.text}\n                          />\n                          <Text\n                            style={[\n                              styles.priorityText,\n                              { color: priority === option.value ? option.color : theme.colors.text }\n                            ]}\n                          >\n                            {option.label}\n                          </Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  </View>\n                </>\n              )}\n\n              {focusedSection === 'details' && (\n                <>\n                  {/* Enhanced date/time picker */}\n                  <Text style={[styles.label, { color: theme.colors.text }]}>Due Date & Time</Text>\n                  <View style={styles.dateTimeContainer}>\n                    <TouchableOpacity\n                      style={[styles.dateTimeButton, { borderColor: theme.colors.outline }]}\n                      onPress={() => openDateTimePicker('date', 'dueDate')}\n                    >\n                      <MaterialIcons name=\"event\" size={20} color={theme.colors.text} />\n                      <Text style={[styles.dateTimeButtonText, { color: theme.colors.text }]}>\n                        {dueDate ? format(dueDate, 'EEE, MMM d') : 'Add date'}\n                      </Text>\n                    </TouchableOpacity>\n                    \n                    <TouchableOpacity\n                      style={[\n                        styles.dateTimeButton,\n                        { borderColor: theme.colors.outline },\n                        !dueDate && styles.dateTimeButtonDisabled\n                      ]}\n                      onPress={() => dueDate && openDateTimePicker('time', 'dueTime')}\n                      disabled={!dueDate}\n                    >\n                      <MaterialIcons name=\"schedule\" size={20} color={theme.colors.text} />\n                      <Text style={[styles.dateTimeButtonText, { color: theme.colors.text }]}>\n                        {dueTime ? formatTimeForDisplay(dueTime) : 'Add time'}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                  \n                  {/* Category selection */}\n                  <Text style={[styles.label, { color: theme.colors.text }]}>Category</Text>\n                  <View style={styles.categoryContainer}>\n                    {PRESET_CATEGORIES.map(cat => (\n                      <TouchableOpacity\n                        key={cat.id}\n                        style={[\n                          styles.categoryButton,\n                          { \n                            borderColor: cat.color,\n                            backgroundColor: category === cat.id ? cat.color + '30' : 'transparent',\n                          }\n                        ]}\n                        onPress={() => setCategory(cat.id)}\n                      >\n                        <View style={[styles.colorIndicator, { backgroundColor: cat.color }]} />\n                        <Text style={[\n                          styles.categoryText,\n                          { color: category === cat.id ? cat.color : theme.colors.text }\n                        ]}>\n                          {cat.name}\n                        </Text>\n                      </TouchableOpacity>\n                    ))}\n                  </View>\n                  \n                  {/* Tags section */}\n                  <Text style={[styles.label, { color: theme.colors.text }]}>Tags</Text>\n                  <View style={styles.tagsContainer}>\n                    <View style={styles.tagsList}>\n                      {availableTags.map((tag) => (\n                        <Chip\n                          key={tag.id}\n                          selected={selectedTags.includes(tag.id)}\n                          onPress={() => toggleTag(tag.id)}\n                          style={[\n                            styles.tag,\n                            { \n                              backgroundColor: selectedTags.includes(tag.id) \n                                ? tag.color + '20' \n                                : theme.colors.surface,\n                              borderColor: tag.color,\n                              marginRight: 8\n                            }\n                          ]}\n                        >\n                          {tag.name}\n                        </Chip>\n                      ))}\n                    </View>\n                    <View style={styles.tagInputContainer}>\n                      <TextInput\n                        style={[styles.tagInput, { \n                          color: theme.colors.text,\n                          backgroundColor: theme.colors.surface,\n                          borderColor: theme.colors.outline\n                        }]}\n                        value={newTag}\n                        onChangeText={setNewTag}\n                        placeholder=\"Add new tag\"\n                        placeholderTextColor={theme.colors.text + '80'}\n                        onSubmitEditing={handleAddTag}\n                      />\n                      <TouchableOpacity\n                        style={[styles.addTagButton, { backgroundColor: theme.colors.primary }]}\n                        onPress={handleAddTag}\n                      >\n                        <MaterialIcons name=\"add\" size={24} color=\"#fff\" />\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                  \n                  {/* Reminders and recurrence */}\n                  <View style={styles.optionRow}>\n                    <Text style={[styles.optionLabel, { color: theme.colors.text }]}>Set Reminder</Text>\n                    <Switch\n                      value={hasReminder}\n                      onValueChange={setHasReminder}\n                      trackColor={{ false: theme.colors.text + '40', true: theme.colors.primary + '80' }}\n                      thumbColor={hasReminder ? theme.colors.primary : theme.colors.surface}\n                    />\n                  </View>\n                  \n                  {hasReminder && (\n                    <View style={[styles.pickerContainer, { \n                      borderColor: theme.colors.outline,\n                      backgroundColor: theme.colors.surface,\n                      marginBottom: 16\n                    }]}>\n                      <Picker\n                        selectedValue={reminderMinutes}\n                        onValueChange={(value) => setReminderMinutes(value)}\n                        style={{ color: theme.colors.text }}\n                      >\n                        {REMINDER_OPTIONS.map(option => (\n                          <Picker.Item \n                            key={option.value} \n                            label={option.label} \n                            value={option.value}\n                          />\n                        ))}\n                      </Picker>\n                    </View>\n                  )}\n                  \n                  <View style={styles.optionRow}>\n                    <Text style={[styles.optionLabel, { color: theme.colors.text }]}>Recurring Task</Text>\n                    <Switch\n                      value={isRecurring}\n                      onValueChange={setIsRecurring}\n                      trackColor={{ false: theme.colors.text + '40', true: theme.colors.primary + '80' }}\n                      thumbColor={isRecurring ? theme.colors.primary : theme.colors.surface}\n                    />\n                  </View>\n                  \n                  {isRecurring && (\n                    <>\n                      <Text style={[styles.recurDescription, { color: theme.colors.text }]}>\n                        {getRecurrenceDescription()}\n                      </Text>\n                      \n                      <View style={styles.recurrenceRow}>\n                        <Text style={[styles.recurrenceLabel, { color: theme.colors.text }]}>Repeat every</Text>\n                        <TextInput\n                          style={[styles.recurrenceInput, { \n                            borderColor: theme.colors.outline,\n                            backgroundColor: theme.colors.surface,\n                            color: theme.colors.text\n                          }]}\n                          value={recurrenceInterval.toString()}\n                          onChangeText={(text) => {\n                            const value = parseInt(text);\n                            if (!isNaN(value) && value > 0) {\n                              setRecurrenceInterval(value);\n                            } else if (text === '') {\n                              setRecurrenceInterval(1);\n                            }\n                          }}\n                          keyboardType=\"number-pad\"\n                        />\n                        \n                        <View style={[styles.typePickerContainer, {\n                          borderColor: theme.colors.outline,\n                          backgroundColor: theme.colors.surface\n                        }]}>\n                          <Picker\n                            selectedValue={recurrenceType}\n                            onValueChange={(value) => setRecurrenceType(value)}\n                            style={{ color: theme.colors.text, flex: 1 }}\n                          >\n                            {RECURRENCE_TYPES.map(type => (\n                              <Picker.Item \n                                key={type} \n                                label={type + (recurrenceInterval > 1 ? 's' : '')} \n                                value={type} \n                              />\n                            ))}\n                          </Picker>\n                        </View>\n                      </View>\n                      \n                      <TouchableOpacity\n                        style={[styles.endDateButton, { \n                          borderColor: theme.colors.outline,\n                          backgroundColor: theme.colors.surface\n                        }]}\n                        onPress={() => openDateTimePicker('date', 'recurrenceEndDate')}\n                      >\n                        <Text style={[styles.endDateButtonText, { color: theme.colors.text }]}>\n                          {recurrenceEndDate \n                            ? `End on ${format(recurrenceEndDate, 'MMM d, yyyy')}` \n                            : 'Set end date (optional)'}\n                        </Text>\n                      </TouchableOpacity>\n                    </>\n                  )}\n                </>\n              )}\n\n              {focusedSection === 'subtasks' && (\n                /* Add SubTaskList component with improved styling */\n                <SubTaskList \n                  taskId={task?.id || 'new'} \n                  subtasks={subtasks}\n                  progress={progress}\n                  onChange={handleSubtasksChange}\n                  isNewTask={!task}\n                />\n              )}\n              \n              {/* Add error message display */}\n              {error && (\n                <View style={[styles.errorContainer, { backgroundColor: theme.colors.error + '20' }]}>\n                  <Text style={[styles.errorText, { color: theme.colors.error }]}>\n                    {error}\n                  </Text>\n                </View>\n              )}\n              \n              {/* Update save button with loading state and accessibility */}\n              <TouchableOpacity \n                style={[\n                  styles.saveButton, \n                  { backgroundColor: theme.colors.primary },\n                  (isSubmitting || isLoading) && styles.saveButtonDisabled\n                ]}\n                onPress={handleSubmit}\n                disabled={isSubmitting || isLoading}\n                accessibilityLabel={task ? 'Update Task' : 'Add Task'}\n                accessibilityRole=\"button\"\n                accessibilityState={{ disabled: isSubmitting || isLoading }}\n              >\n                {isSubmitting ? (\n                  <ActivityIndicator color=\"#fff\" />\n                ) : (\n                  <Text style={styles.saveButtonText}>\n                    {task ? 'Update Task' : 'Add Task'}\n                  </Text>\n                )}\n              </TouchableOpacity>\n            </ScrollView>\n            \n            {/* Date picker for iOS */}\n            {Platform.OS === 'ios' && showDatePicker && (\n              <View style={[styles.datePickerContainer, { backgroundColor: theme.colors.surface }]}>\n                <View style={styles.datePickerHeader}>\n                  <TouchableOpacity onPress={closeDatePicker}>\n                    <Text style={[styles.datePickerCancel, { color: theme.colors.error }]}>Cancel</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity onPress={closeDatePicker}>\n                    <Text style={[styles.datePickerDone, { color: theme.colors.primary }]}>Done</Text>\n                  </TouchableOpacity>\n                </View>\n                <DateTimePicker\n                  value={(() => {\n                    if (activeDateInput === 'dueDate') {\n                      return dueDate || new Date();\n                    } else if (activeDateInput === 'dueTime') {\n                      return dueTime || new Date();\n                    } else {\n                      return recurrenceEndDate || new Date();\n                    }\n                  })()}\n                  mode={datePickerMode}\n                  display=\"spinner\"\n                  onChange={handleDateTimeChange}\n                  textColor={theme.colors.text}\n                />\n              </View>\n            )}\n            \n            {/* Date/time pickers for Android */}\n            {Platform.OS === 'android' && showDatePicker && (\n              <DateTimePicker\n                value={(() => {\n                  if (activeDateInput === 'dueDate') {\n                    return dueDate || new Date();\n                  } else {\n                    return recurrenceEndDate || new Date();\n                  }\n                })()}\n                mode=\"date\"\n                display=\"default\"\n                onChange={handleDateTimeChange}\n                textColor={theme.colors.text}\n              />\n            )}\n            \n            {Platform.OS === 'android' && showTimePicker && (\n              <DateTimePicker\n                value={dueTime || new Date()}\n                mode=\"time\"\n                display=\"default\"\n                onChange={handleDateTimeChange}\n                textColor={theme.colors.text}\n              />\n            )}\n\n            {/* Add voice listening indicator */}\n            {isListening && (\n              <View style={styles.listeningIndicator}>\n                <ActivityIndicator size=\"small\" color=\"red\" />\n                <Text style={styles.listeningText}>Listening...</Text>\n                <TouchableOpacity\n                  style={styles.cancelVoiceButton}\n                  onPress={cancelVoiceInput}\n                >\n                  <Text style={styles.cancelVoiceText}>Cancel</Text>\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n    backgroundColor: '#fff',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  headerActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  quickAddButton: {\n    marginRight: 16,\n    padding: 8,\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  closeButton: {\n    padding: 8,\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  quickAddContainer: {\n    padding: 16,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  sectionLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  quickAddItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 12,\n    marginRight: 12,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n  },\n  quickAddText: {\n    marginLeft: 8,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  formContainer: {\n    flex: 1,\n    padding: 16,\n  },\n  inputGroup: {\n    marginBottom: 24,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 8,\n  },\n  input: {\n    backgroundColor: '#f8f8f8',\n    padding: 16,\n    borderRadius: 12,\n    fontSize: 16,\n    borderWidth: 1,\n    borderColor: '#eee',\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  prioritySection: {\n    marginBottom: 16,\n  },\n  priorityContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 12,\n    marginTop: 8,\n  },\n  priorityButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 12,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#eee',\n  },\n  priorityText: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginTop: 4,\n  },\n  priorityIcon: {\n    marginBottom: 8,\n  },\n  dateTimeContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 12,\n  },\n  dateTimeButton: {\n    flex: 1,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: '#f8f8f8',\n    borderWidth: 1,\n    borderColor: '#eee',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  dateTimeButtonDisabled: {\n    opacity: 0.5,\n  },\n  dateTimeButtonText: {\n    fontSize: 16,\n    color: '#333',\n    marginLeft: 8,\n  },\n  dateTimeButtonTextDisabled: {\n    color: '#999',\n  },\n  tagsContainer: {\n    marginTop: 8,\n  },\n  tagsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 12,\n  },\n  tag: {\n    marginBottom: 8,\n  },\n  tagInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  tagInput: {\n    flex: 1,\n    height: 40,\n    paddingHorizontal: 12,\n    borderRadius: 20,\n    borderWidth: 1,\n    fontSize: 16,\n  },\n  addTagButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n  },\n  pickerContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#eee',\n    marginBottom: 16,\n  },\n  pickerLabel: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  picker: {\n    height: 50,\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    backgroundColor: '#fff',\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n  },\n  cancelButton: {\n    flex: 1,\n    marginRight: 8,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 12,\n    padding: 16,\n  },\n  cancelButtonText: {\n    color: '#666',\n    fontSize: 16,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  createButton: {\n    flex: 1,\n    marginLeft: 8,\n    backgroundColor: '#007AFF',\n    borderRadius: 12,\n    padding: 16,\n  },\n  createButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  errorText: {\n    color: '#FF3B30',\n    fontSize: 14,\n    marginTop: 4,\n  },\n  subtasksContainer: {\n    backgroundColor: '#f8f8f8',\n    borderRadius: 12,\n    padding: 16,\n    marginTop: 8,\n  },\n  subtaskItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  subtaskItemLast: {\n    borderBottomWidth: 0,\n  },\n  subtaskCheckbox: {\n    marginRight: 12,\n  },\n  subtaskInput: {\n    flex: 1,\n    fontSize: 16,\n    color: '#333',\n  },\n  addSubtaskButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 12,\n    padding: 8,\n  },\n  addSubtaskText: {\n    color: '#007AFF',\n    fontSize: 16,\n    marginLeft: 8,\n  },\n  addSubtaskIcon: {\n    color: '#007AFF',\n  },\n  categoryContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginTop: 8,\n    marginBottom: 24,\n  },\n  categoryButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 12,\n    backgroundColor: '#f8f8f8',\n    borderWidth: 1,\n    borderColor: '#eee',\n  },\n  categoryButtonActive: {\n    backgroundColor: '#007AFF10',\n    borderColor: '#007AFF',\n  },\n  categoryIcon: {\n    marginRight: 8,\n    fontSize: 18,\n  },\n  categoryText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  categoryTextActive: {\n    color: '#007AFF',\n  },\n  inputSurface: {\n    elevation: 2,\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  inputError: {\n    borderColor: '#B00020',\n  },\n  advancedButton: {\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    alignItems: 'center',\n    marginBottom: 16,\n    borderStyle: 'dashed',\n  },\n  advancedButtonText: {\n    fontWeight: '500',\n  },\n  advancedSection: {\n    marginBottom: 16,\n  },\n  optionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  optionLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  recurDescription: {\n    fontSize: 14,\n    marginBottom: 16,\n    fontStyle: 'italic',\n  },\n  recurrenceRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  recurrenceLabel: {\n    fontSize: 16,\n    marginRight: 8,\n  },\n  recurrenceInput: {\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 8,\n    width: 50,\n    textAlign: 'center',\n    marginRight: 8,\n  },\n  typePickerContainer: {\n    flex: 1,\n    borderWidth: 1,\n    borderRadius: 8,\n    height: 40,\n    justifyContent: 'center',\n  },\n  endDateButton: {\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  endDateButtonText: {\n    fontSize: 16,\n  },\n  saveButton: {\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginVertical: 8,\n  },\n  saveButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  datePickerContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 16,\n  },\n  datePickerHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  datePickerCancel: {\n    fontSize: 16,\n  },\n  datePickerDone: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  errorContainer: {\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  saveButtonDisabled: {\n    opacity: 0.7,\n  },\n  advancedOptionsButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderRadius: 12,\n    marginTop: 8,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: '#eee',\n  },\n  sectionNav: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  sectionTab: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n  },\n  sectionTabText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  titleInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  aiSuggestButton: {\n    padding: 8,\n  },\n  suggestionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    backgroundColor: '#f0f8ff',\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  suggestionText: {\n    flex: 1,\n    fontSize: 14,\n    color: '#333',\n  },\n  acceptButton: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  acceptButtonText: {\n    color: '#fff',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  loadingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 8,\n  },\n  smartDateContainer: {\n    marginBottom: 16,\n  },\n  smartDateButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  smartDateText: {\n    marginLeft: 8,\n    fontSize: 14,\n  },\n  smartDateInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 8,\n  },\n  smartDateInput: {\n    flex: 1,\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    marginRight: 8,\n  },\n  smartDateSubmit: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  voiceButton: {\n    padding: 8,\n  },\n  descriptionContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  listeningIndicator: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n    backgroundColor: 'rgba(255,0,0,0.1)',\n    borderRadius: 16,\n    marginVertical: 8,\n  },\n  listeningText: {\n    color: 'red',\n    marginLeft: 8,\n    flex: 1,\n  },\n  cancelVoiceButton: {\n    backgroundColor: 'rgba(255,0,0,0.2)',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  cancelVoiceText: {\n    color: 'red',\n    fontSize: 12,\n  },\n}); ","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  TextInput,\n  Platform,\n  Vibration,\n  Animated,\n  Easing,\n  ScrollView\n} from 'react-native';\nimport { useTaskStore } from '../stores/taskStore';\nimport { Task } from '../types/Task';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { Ionicons, MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport Svg, { Circle } from 'react-native-svg';\nimport { formatTime } from '../utils/timeUtils';\n\ninterface PomodoroTimerProps {\n  onClose?: () => void;\n  initialTaskId?: string;\n  showCloseButton?: boolean;\n}\n\nconst PomodoroTimer: React.FC<PomodoroTimerProps> = ({\n  onClose,\n  initialTaskId,\n  showCloseButton = true\n}) => {\n  const { theme, isDark } = useTheme();\n  const {\n    tasks,\n    currentPomodoro,\n    pomodoroSettings,\n    startPomodoro,\n    pausePomodoro,\n    resumePomodoro,\n    stopPomodoro,\n    completePomodoro,\n    skipBreak\n  } = useTaskStore();\n\n  // State\n  const [selectedTaskId, setSelectedTaskId] = useState<string | null>(initialTaskId || null);\n  const [interruptionNote, setInterruptionNote] = useState('');\n  const [showTaskSelector, setShowTaskSelector] = useState(false);\n  const [showInterruptionDialog, setShowInterruptionDialog] = useState(false);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [showSettings, setShowSettings] = useState(false);\n  \n  // Animation refs\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const progressAnimation = useRef(new Animated.Value(0)).current;\n  const pulseAnimation = useRef(new Animated.Value(1)).current;\n  \n  // Computed values\n  const selectedTask = selectedTaskId \n    ? tasks.find(t => t.id === selectedTaskId) \n    : null;\n  \n  const formattedTime = formatTime(currentPomodoro.timeRemaining);\n  \n  const isActive = currentPomodoro.active;\n  const isBreak = currentPomodoro.isBreak;\n  \n  const timerTitle = isBreak \n    ? (currentPomodoro.timeRemaining > pomodoroSettings.shortBreakDuration * 60 \n        ? 'Long Break' \n        : 'Short Break') \n    : 'Work Session';\n  \n  // Color scheme based on current state\n  const timerColor = isBreak ? theme.colors.success : theme.colors.primary;\n  \n  // Calculate progress percentage for the circular indicator\n  const totalDuration = isBreak \n    ? (currentPomodoro.timeRemaining > pomodoroSettings.shortBreakDuration * 60 \n        ? pomodoroSettings.longBreakDuration * 60 \n        : pomodoroSettings.shortBreakDuration * 60)\n    : pomodoroSettings.workDuration * 60;\n    \n  const progress = (totalDuration - currentPomodoro.timeRemaining) / totalDuration;\n  \n  // SVG circle properties\n  const circleRadius = 120;\n  const circleCircumference = 2 * Math.PI * circleRadius;\n  const staticStrokeDashoffset = circleCircumference * (1 - progress);\n  \n  // Animated stroke dash offset for the progress circle\n  const animatedStrokeDashoffset = progressAnimation.interpolate({\n    inputRange: [0, 1],\n    outputRange: [circleCircumference, 0],\n  });\n  \n  // Update progress animation\n  useEffect(() => {\n    Animated.timing(progressAnimation, {\n      toValue: progress,\n      duration: 300,\n      useNativeDriver: false,\n      easing: Easing.linear\n    }).start();\n    \n    // Add pulse animation when under 1 minute\n    if (currentPomodoro.timeRemaining <= 60 && isActive) {\n      Animated.sequence([\n        Animated.timing(pulseAnimation, {\n          toValue: 1.05,\n          duration: 500,\n          useNativeDriver: true,\n          easing: Easing.out(Easing.ease)\n        }),\n        Animated.timing(pulseAnimation, {\n          toValue: 1,\n          duration: 500,\n          useNativeDriver: true,\n          easing: Easing.in(Easing.ease)\n        })\n      ]).start(() => {\n        if (currentPomodoro.timeRemaining <= 60 && isActive) {\n          // Only restart if still active and under 1 minute\n          pulseAnimation.setValue(1);\n        }\n      });\n    }\n  }, [currentPomodoro.timeRemaining, isActive]);\n  \n  // Set up timer\n  useEffect(() => {\n    if (isActive) {\n      timerRef.current = setInterval(() => {\n        if (currentPomodoro.timeRemaining <= 1) {\n          // Timer complete\n          if (isBreak) {\n            // Break complete\n            handleBreakComplete();\n          } else {\n            // Work session complete\n            handleSessionComplete();\n          }\n        } else {\n          // Decrement timer\n          useTaskStore.setState((state) => ({\n            currentPomodoro: {\n              ...state.currentPomodoro,\n              timeRemaining: state.currentPomodoro.timeRemaining - 1\n            }\n          }));\n        }\n      }, 1000);\n    } else if (timerRef.current) {\n      // Clear timer when not active\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n    \n    // Clean up timer on unmount\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isActive, currentPomodoro.timeRemaining, isBreak]);\n  \n  // Update selected task when initialTaskId changes\n  useEffect(() => {\n    if (initialTaskId) {\n      setSelectedTaskId(initialTaskId);\n    }\n  }, [initialTaskId]);\n  \n  // Clear state when component unmounts\n  useEffect(() => {\n    return () => {\n      if (!currentPomodoro.active) {\n        stopPomodoro(false, '');\n      }\n    };\n  }, []);\n  \n  // Handle timer completion\n  const handleSessionComplete = () => {\n    // Vibrate device to notify user\n    if (Platform.OS !== 'web' && soundEnabled) {\n      Vibration.vibrate([500, 200, 500]);\n    }\n    \n    // Mark session as complete\n    completePomodoro();\n  };\n  \n  const handleBreakComplete = () => {\n    // Vibrate device to notify user\n    if (Platform.OS !== 'web' && soundEnabled) {\n      Vibration.vibrate([300, 100, 300]);\n    }\n    \n    // Reset timer state\n    stopPomodoro(false, '');\n    \n    // Auto-start next session if setting is enabled\n    if (pomodoroSettings.autoStartNextSession && selectedTaskId) {\n      startPomodoro(selectedTaskId);\n    }\n  };\n  \n  // Timer control actions\n  const handleStart = () => {\n    if (!selectedTaskId) {\n      setShowTaskSelector(true);\n      return;\n    }\n    \n    startPomodoro(selectedTaskId);\n  };\n  \n  const handlePause = () => {\n    pausePomodoro();\n  };\n  \n  const handleResume = () => {\n    resumePomodoro();\n  };\n  \n  const handleStop = () => {\n    setShowInterruptionDialog(true);\n  };\n  \n  const handleConfirmStop = () => {\n    stopPomodoro(true, interruptionNote);\n    setInterruptionNote('');\n    setShowInterruptionDialog(false);\n  };\n  \n  const handleSkipBreak = () => {\n    skipBreak();\n    \n    // If auto start is not enabled and we have a selected task, start a new session\n    if (!pomodoroSettings.autoStartNextSession && selectedTaskId) {\n      startPomodoro(selectedTaskId);\n    }\n  };\n  \n  const handleTaskSelect = (taskId: string) => {\n    setSelectedTaskId(taskId);\n    setShowTaskSelector(false);\n    \n    // If not already in a session, start one\n    if (!currentPomodoro.active) {\n      startPomodoro(taskId);\n    }\n  };\n  \n  const handleClose = () => {\n    // Ensure we stop the timer if active\n    if (currentPomodoro.active) {\n      stopPomodoro(false, '');\n    }\n    \n    // Make sure we call the onClose prop consistently\n    if (onClose) {\n      onClose();\n    }\n  };\n  \n  // Render task options for selector\n  const renderTaskOptions = () => {\n    const activeTasks = tasks.filter(task => !task.completed);\n    \n    if (activeTasks.length === 0) {\n      return (\n        <View style={styles.emptyTasksContainer}>\n          <Text style={[styles.emptyTasksText, { color: theme.colors.text }]}>\n            No active tasks available. Create a task first.\n          </Text>\n        </View>\n      );\n    }\n    \n    return activeTasks.map(task => (\n      <TouchableOpacity\n        key={task.id}\n        style={[\n          styles.taskOption,\n          { backgroundColor: isDark ? '#333' : '#f5f5f5' },\n          selectedTaskId === task.id && { \n            backgroundColor: isDark ? '#2c3e50' : '#e1f5fe',\n            borderColor: theme.colors.primary,\n            borderWidth: 1\n          }\n        ]}\n        onPress={() => handleTaskSelect(task.id)}\n      >\n        <View style={[\n          styles.priorityIndicator, \n          { \n            backgroundColor: \n              task.priority === 'high' ? theme.colors.error :\n              task.priority === 'medium' ? theme.colors.warning :\n              theme.colors.success\n          }\n        ]} />\n        \n        <View style={styles.taskOptionContent}>\n          <Text \n            style={[styles.taskTitle, { color: theme.colors.text }]}\n            numberOfLines={1}\n          >\n            {task.title}\n          </Text>\n          \n          {selectedTaskId === task.id && (\n            <View style={styles.selectedIndicator}>\n              <MaterialIcons name=\"check-circle\" size={20} color={theme.colors.primary} />\n            </View>\n          )}\n        </View>\n      </TouchableOpacity>\n    ));\n  };\n  \n  // Add keydown event handler for Escape key to close the timer\n  useEffect(() => {\n    // Define the handler function\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        handleClose();\n      }\n    };\n\n    // Add the event listener\n    if (Platform.OS === 'web') {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    // Return cleanup function\n    return () => {\n      if (Platform.OS === 'web') {\n        document.removeEventListener('keydown', handleKeyDown);\n      }\n      \n      // Stop the timer if active when component unmounts\n      if (currentPomodoro.active) {\n        stopPomodoro(false, '');\n      }\n    };\n  }, [currentPomodoro.active, stopPomodoro]);\n  \n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={[\n          styles.pomodoroContainer,\n          { \n            backgroundColor: isDark ? '#222' : '#fff',\n            shadowColor: isDark ? '#000' : '#888',\n          }\n        ]}>\n          {/* Header */}\n          <View style={styles.header}>\n            <Text style={[styles.headerTitle, { color: theme.colors.text }]}>\n              Pomodoro Timer\n            </Text>\n            \n            <View style={styles.headerControls}>\n              <TouchableOpacity\n                style={styles.iconButton}\n                onPress={() => setSoundEnabled(!soundEnabled)}\n                accessibilityLabel={soundEnabled ? \"Disable sound\" : \"Enable sound\"}\n              >\n                <MaterialIcons \n                  name={soundEnabled ? \"volume-up\" : \"volume-off\"} \n                  size={24} \n                  color={theme.colors.text} \n                />\n              </TouchableOpacity>\n              \n              {showCloseButton && (\n                <TouchableOpacity\n                  style={[styles.iconButton, { marginLeft: 8 }]}\n                  onPress={handleClose}\n                >\n                  <MaterialIcons name=\"close\" size={24} color={theme.colors.text} />\n                </TouchableOpacity>\n              )}\n            </View>\n          </View>\n          \n          {/* Task Selection */}\n          <TouchableOpacity\n            style={[\n              styles.taskSelector,\n              { backgroundColor: isDark ? '#333' : '#f5f5f5' }\n            ]}\n            onPress={() => setShowTaskSelector(true)}\n          >\n            <MaterialIcons \n              name=\"assignment\" \n              size={20} \n              color={theme.colors.primary} \n              style={styles.taskSelectorIcon}\n            />\n            \n            <Text \n              style={[\n                styles.taskSelectorText, \n                { color: theme.colors.text },\n                !selectedTask && { color: theme.colors.placeholder || '#999' }\n              ]}\n              numberOfLines={1}\n            >\n              {selectedTask ? selectedTask.title : 'Select a task to focus on'}\n            </Text>\n            \n            <MaterialIcons \n              name=\"keyboard-arrow-down\" \n              size={20} \n              color={theme.colors.text} \n            />\n          </TouchableOpacity>\n          \n          {/* Timer Display with Circular Progress */}\n          <Animated.View \n            style={[\n              styles.timerContainer,\n              { transform: [{ scale: pulseAnimation }] }\n            ]}\n          >\n            <View style={styles.circularProgress}>\n              {/* Background Circle */}\n              <View style={[\n                styles.circleBackground,\n                { borderColor: isDark ? '#444' : '#eee' }\n              ]} />\n              \n              {/* Progress Arc */}\n              <Svg width={250} height={250} style={styles.circleProgress}>\n                <Circle\n                  cx={125}\n                  cy={125}\n                  r={120}\n                  stroke={timerColor}\n                  strokeWidth={10}\n                  fill=\"transparent\"\n                  strokeDasharray={circleCircumference}\n                  strokeDashoffset={staticStrokeDashoffset}\n                  strokeLinecap=\"round\"\n                  transform=\"rotate(-90, 125, 125)\"\n                />\n              </Svg>\n              \n              {/* Timer Text */}\n              <View style={styles.timerTextContainer}>\n                <Text style={[styles.timerTypeText, { color: theme.colors.text }]}>\n                  {timerTitle}\n                </Text>\n                \n                <Text style={[styles.timerText, { color: timerColor }]}>\n                  {formattedTime}\n                </Text>\n                \n                <Text style={[styles.sessionCountText, { color: theme.colors.secondary || '#999' }]}>\n                  Session {currentPomodoro.currentSessionCount} of {pomodoroSettings.sessionsUntilLongBreak}\n                </Text>\n              </View>\n            </View>\n          </Animated.View>\n          \n          {/* Controls */}\n          <View style={styles.controlsContainer}>\n            {isActive ? (\n              <View style={styles.activeControls}>\n                <TouchableOpacity\n                  style={[\n                    styles.controlButton,\n                    { backgroundColor: theme.colors.error }\n                  ]}\n                  onPress={handleStop}\n                >\n                  <MaterialIcons name=\"stop\" size={24} color=\"#fff\" />\n                </TouchableOpacity>\n                \n                <TouchableOpacity\n                  style={[\n                    styles.controlButton,\n                    styles.mainControlButton,\n                    { backgroundColor: isActive ? theme.colors.warning : theme.colors.primary }\n                  ]}\n                  onPress={isActive ? handlePause : isBreak ? handleSkipBreak : handleStart}\n                >\n                  <MaterialIcons \n                    name={isActive ? \"pause\" : \"play-arrow\"} \n                    size={32} \n                    color=\"#fff\" \n                  />\n                </TouchableOpacity>\n                \n                {isBreak && (\n                  <TouchableOpacity\n                    style={[\n                      styles.controlButton,\n                      { backgroundColor: theme.colors.primary }\n                    ]}\n                    onPress={handleSkipBreak}\n                  >\n                    <MaterialIcons name=\"skip-next\" size={24} color=\"#fff\" />\n                  </TouchableOpacity>\n                )}\n                \n                {!isBreak && !isActive && (\n                  <TouchableOpacity\n                    style={[\n                      styles.controlButton,\n                      { backgroundColor: theme.colors.secondary || '#666' }\n                    ]}\n                    onPress={() => setShowSettings(true)}\n                  >\n                    <MaterialIcons name=\"settings\" size={24} color=\"#fff\" />\n                  </TouchableOpacity>\n                )}\n              </View>\n            ) : (\n              <TouchableOpacity\n                style={[\n                  styles.startButton,\n                  { backgroundColor: theme.colors.primary }\n                ]}\n                onPress={currentPomodoro.sessionId ? handleResume : handleStart}\n              >\n                <MaterialIcons \n                  name={currentPomodoro.sessionId ? \"play-arrow\" : \"play-circle-filled\"} \n                  size={24} \n                  color=\"#fff\" \n                />\n                <Text style={styles.startButtonText}>\n                  {currentPomodoro.sessionId ? 'Resume Session' : 'Start Session'}\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n          \n          {/* Session Progress */}\n          {selectedTask && selectedTask.completedPomodoros !== undefined && selectedTask.completedPomodoros > 0 && (\n            <View style={styles.statsContainer}>\n              <Text style={[styles.statsTitle, { color: theme.colors.text }]}>\n                Task Progress\n              </Text>\n              \n              <View style={styles.statsRow}>\n                <View style={[\n                  styles.statCard, \n                  { backgroundColor: isDark ? '#333' : '#f5f5f5' }\n                ]}>\n                  <FontAwesome5 name=\"hourglass-half\" size={18} color={theme.colors.primary} />\n                  <Text style={[styles.statValue, { color: theme.colors.primary }]}>\n                    {selectedTask.completedPomodoros}\n                  </Text>\n                  <Text style={[styles.statLabel, { color: theme.colors.text }]}>\n                    Pomodoros\n                  </Text>\n                </View>\n                \n                <View style={[\n                  styles.statCard, \n                  { backgroundColor: isDark ? '#333' : '#f5f5f5' }\n                ]}>\n                  <FontAwesome5 name=\"stopwatch\" size={18} color={theme.colors.success} />\n                  <Text style={[styles.statValue, { color: theme.colors.success }]}>\n                    {selectedTask.totalPomodoroTime || 0}\n                  </Text>\n                  <Text style={[styles.statLabel, { color: theme.colors.text }]}>\n                    Minutes\n                  </Text>\n                </View>\n              </View>\n            </View>\n          )}\n          \n          {/* Pomodoro Information */}\n          <View style={styles.infoContainer}>\n            <Text style={[styles.infoTitle, { color: theme.colors.text }]}>\n              What is the Pomodoro Technique?\n            </Text>\n            \n            <Text style={[styles.infoText, { color: theme.colors.text }]}>\n              The Pomodoro Technique is a time management method developed by Francesco Cirillo in the late 1980s. It uses a timer to break work into intervals, traditionally 25 minutes in length, separated by short breaks.\n            </Text>\n            \n            <Text style={[styles.infoSubtitle, { color: theme.colors.text }]}>\n              Benefits:\n            </Text>\n            \n            <View style={styles.benefitsList}>\n              <View style={styles.benefitItem}>\n                <MaterialIcons name=\"check-circle\" size={18} color={theme.colors.primary} style={styles.benefitIcon} />\n                <Text style={[styles.benefitText, { color: theme.colors.text }]}>\n                  Improved focus and concentration\n                </Text>\n              </View>\n              <View style={styles.benefitItem}>\n                <MaterialIcons name=\"check-circle\" size={18} color={theme.colors.primary} style={styles.benefitIcon} />\n                <Text style={[styles.benefitText, { color: theme.colors.text }]}>\n                  Reduced mental fatigue\n                </Text>\n              </View>\n              <View style={styles.benefitItem}>\n                <MaterialIcons name=\"check-circle\" size={18} color={theme.colors.primary} style={styles.benefitIcon} />\n                <Text style={[styles.benefitText, { color: theme.colors.text }]}>\n                  Increased productivity and work quality\n                </Text>\n              </View>\n              <View style={styles.benefitItem}>\n                <MaterialIcons name=\"check-circle\" size={18} color={theme.colors.primary} style={styles.benefitIcon} />\n                <Text style={[styles.benefitText, { color: theme.colors.text }]}>\n                  Better planning and time estimation\n                </Text>\n              </View>\n              <View style={styles.benefitItem}>\n                <MaterialIcons name=\"check-circle\" size={18} color={theme.colors.primary} style={styles.benefitIcon} />\n                <Text style={[styles.benefitText, { color: theme.colors.text }]}>\n                  Reduced procrastination\n                </Text>\n              </View>\n            </View>\n            \n            <Text style={[styles.infoSubtitle, { color: theme.colors.text }]}>\n              Why use it?\n            </Text>\n            \n            <Text style={[styles.infoText, { color: theme.colors.text }]}>\n              The technique works with your brain's natural rhythms, leveraging focused work periods and regular breaks to maintain high productivity. By breaking work into manageable chunks, you can avoid burnout and maintain a sustainable pace throughout the day.\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n      \n      {/* Task Selector Modal */}\n      <Modal\n        visible={showTaskSelector}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setShowTaskSelector(false)}\n      >\n        <View style={[\n          styles.modalOverlay,\n          { backgroundColor: isDark ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)' }\n        ]}>\n          <View style={[\n            styles.taskSelectorModal,\n            { \n              backgroundColor: isDark ? '#222' : '#fff',\n              shadowColor: isDark ? '#000' : '#888'\n            }\n          ]}>\n            <View style={styles.modalHeader}>\n              <Text style={[styles.modalTitle, { color: theme.colors.text }]}>\n                Select a Task\n              </Text>\n              \n              <TouchableOpacity\n                style={styles.closeButton}\n                onPress={() => setShowTaskSelector(false)}\n              >\n                <MaterialIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            \n            <ScrollView style={styles.taskOptionsContainer}>\n              {renderTaskOptions()}\n            </ScrollView>\n          </View>\n        </View>\n      </Modal>\n      \n      {/* Interruption Dialog */}\n      <Modal\n        visible={showInterruptionDialog}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setShowInterruptionDialog(false)}\n      >\n        <View style={[\n          styles.modalOverlay,\n          { backgroundColor: isDark ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)' }\n        ]}>\n          <View style={[\n            styles.interruptionDialog,\n            { \n              backgroundColor: isDark ? '#222' : '#fff',\n              shadowColor: isDark ? '#000' : '#888'\n            }\n          ]}>\n            <Text style={[styles.dialogTitle, { color: theme.colors.text }]}>\n              Stop Pomodoro Session?\n            </Text>\n            \n            <Text style={[styles.dialogMessage, { color: theme.colors.secondary || '#666' }]}>\n              {isActive ? \n                'Your focus session is still running. Why are you stopping?' : \n                'Do you want to close the timer?'}\n            </Text>\n            \n            {isActive && (\n              <TextInput\n                style={[\n                  styles.interruptionInput,\n                  { \n                    backgroundColor: isDark ? '#333' : '#f5f5f5',\n                    color: theme.colors.text,\n                    borderColor: isDark ? '#444' : '#ddd'\n                  }\n                ]}\n                placeholder=\"Note (optional)\"\n                placeholderTextColor={theme.colors.placeholder || '#999'}\n                value={interruptionNote}\n                onChangeText={setInterruptionNote}\n                multiline\n              />\n            )}\n            \n            <View style={styles.dialogActions}>\n              <TouchableOpacity\n                style={[\n                  styles.dialogButton,\n                  { backgroundColor: isDark ? '#333' : '#f5f5f5' }\n                ]}\n                onPress={() => setShowInterruptionDialog(false)}\n              >\n                <Text style={[styles.dialogButtonText, { color: theme.colors.text }]}>\n                  Cancel\n                </Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity\n                style={[\n                  styles.dialogButton,\n                  { backgroundColor: theme.colors.error }\n                ]}\n                onPress={isActive ? handleConfirmStop : handleClose}\n              >\n                <Text style={[styles.dialogButtonText, { color: '#fff' }]}>\n                  {isActive ? 'Stop' : 'Close'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    paddingBottom: 30,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  pomodoroContainer: {\n    width: '100%',\n    borderRadius: 16,\n    padding: 16,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 4,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  headerTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n  },\n  headerControls: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  iconButton: {\n    padding: 8,\n    marginLeft: 8,\n  },\n  taskSelector: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 20,\n  },\n  taskSelectorIcon: {\n    marginRight: 8,\n  },\n  taskSelectorText: {\n    flex: 1,\n    fontSize: 16,\n  },\n  timerContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 16,\n  },\n  circularProgress: {\n    width: 250,\n    height: 250,\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n  },\n  circleBackground: {\n    width: 240,\n    height: 240,\n    borderRadius: 120,\n    borderWidth: 10,\n    position: 'absolute',\n  },\n  circleProgress: {\n    position: 'absolute',\n  },\n  timerTextContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  timerTypeText: {\n    fontSize: 18,\n    marginBottom: 4,\n  },\n  timerText: {\n    fontSize: 48,\n    fontWeight: 'bold',\n    fontVariant: ['tabular-nums'],\n    letterSpacing: 2,\n  },\n  sessionCountText: {\n    fontSize: 14,\n    marginTop: 4,\n  },\n  controlsContainer: {\n    marginTop: 24,\n    marginBottom: 16,\n  },\n  activeControls: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n  },\n  controlButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  mainControlButton: {\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n  },\n  startButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 30,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  startButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginLeft: 8,\n  },\n  statsContainer: {\n    marginTop: 16,\n    paddingTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: 'rgba(0,0,0,0.1)',\n  },\n  statsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  statCard: {\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    width: '45%',\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginVertical: 4,\n  },\n  statLabel: {\n    fontSize: 14,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  taskSelectorModal: {\n    width: '100%',\n    maxWidth: 400,\n    borderRadius: 16,\n    padding: 16,\n    maxHeight: '80%',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 4,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 16,\n    right: 16,\n    width: 36,\n    height: 36,\n    borderRadius: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 10,\n    elevation: 5,\n  },\n  taskOptionsContainer: {\n    maxHeight: 400,\n  },\n  taskOption: {\n    flexDirection: 'row',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  priorityIndicator: {\n    width: 4,\n    height: '100%',\n    borderRadius: 2,\n    marginRight: 8,\n  },\n  taskOptionContent: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  taskTitle: {\n    fontSize: 16,\n    flex: 1,\n  },\n  selectedIndicator: {\n    marginLeft: 8,\n  },\n  emptyTasksContainer: {\n    padding: 16,\n    alignItems: 'center',\n  },\n  emptyTasksText: {\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  interruptionDialog: {\n    width: '100%',\n    maxWidth: 400,\n    borderRadius: 16,\n    padding: 16,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 4,\n  },\n  dialogTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  dialogMessage: {\n    fontSize: 16,\n    marginBottom: 16,\n  },\n  interruptionInput: {\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  dialogActions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  dialogButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    marginLeft: 8,\n  },\n  dialogButtonText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  infoContainer: {\n    marginTop: 20,\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: 'rgba(0,0,0,0.1)',\n  },\n  infoTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  infoSubtitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 16,\n    marginBottom: 8,\n  },\n  infoText: {\n    fontSize: 14,\n    lineHeight: 20,\n  },\n  benefitsList: {\n    marginLeft: 8,\n  },\n  benefitItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  benefitIcon: {\n    marginRight: 8,\n  },\n  benefitText: {\n    fontSize: 14,\n    lineHeight: 20,\n  },\n});\n\nexport default PomodoroTimer; ","/**\n * Format seconds into MM:SS format\n * @param seconds Number of seconds to format\n * @returns Formatted time string in MM:SS format\n */\nexport function formatTime(seconds: number): string {\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n} ","import React, { useState } from 'react';\nimport { View, ScrollView, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Text, Button, IconButton, Divider, Chip, Surface, Menu, Portal, Modal, ProgressBar } from 'react-native-paper';\nimport { formatDistanceToNow, format } from 'date-fns';\nimport { Ionicons, MaterialIcons } from '@expo/vector-icons';\nimport { Task, SubTask } from '../types/Task';\nimport SubTaskList from './SubTaskList';\nimport InlinePomodoroTimer from './InlinePomodoroTimer';\nimport { useTaskStore } from '../stores/taskStore';\nimport { useTheme } from '../theme/ThemeProvider';\n\ninterface TaskDetailProps {\n  task: Task;\n  onBack: () => void;\n  onEdit: () => void;\n  onDelete: () => void;\n  onUpdate: (updatedTask: Task) => void;\n  onToggleCompletion: (taskId: string) => void;\n  onToggleSubtask: (taskId: string, subtaskId: string) => void;\n  onPomodoro?: () => void;\n  onAddComment?: () => void;\n  onShare?: () => void;\n}\n\nexport default function TaskDetail({ \n  task, \n  onEdit, \n  onDelete, \n  onToggleCompletion,\n  onToggleSubtask,\n  onUpdate,\n  onBack,\n  onPomodoro,\n  onAddComment,\n  onShare\n}: TaskDetailProps) {\n  const [showPomodoro, setShowPomodoro] = useState(false);\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const { theme, isDark } = useTheme();\n\n  const handlePomodoro = () => {\n    setShowPomodoro(!showPomodoro);\n    setMenuVisible(false);\n    if (onPomodoro) {\n      onPomodoro();\n    }\n  };\n\n  const handleCommentAdd = () => {\n    setMenuVisible(false);\n    if (onAddComment) {\n      onAddComment();\n    }\n  };\n\n  const handleShare = () => {\n    setMenuVisible(false);\n    if (onShare) {\n      onShare();\n    }\n  };\n\n  const handleDelete = () => {\n    setMenuVisible(false);\n    setShowDeleteConfirm(true);\n    onDelete();\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority.toLowerCase()) {\n      case 'high':\n        return isDark ? '#CF6679' : '#D32F2F';\n      case 'medium':\n        return isDark ? '#FFDF5D' : '#FFC107';\n      case 'low':\n        return isDark ? '#78939D' : '#78909C';\n      default:\n        return isDark ? '#78939D' : '#78909C';\n    }\n  };\n\n  const getPriorityIcon = (priority: string) => {\n    switch (priority.toLowerCase()) {\n      case 'high':\n        return 'priority-high';\n      case 'medium':\n        return 'drag-handle';\n      case 'low':\n        return 'arrow-downward';\n      default:\n        return 'drag-handle';\n    }\n  };\n\n  const calculateSubtaskProgress = () => {\n    if (!task.subtasks || task.subtasks.length === 0) return 0;\n    const completed = task.subtasks.filter(st => st.completed).length;\n    return completed / task.subtasks.length;\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <View style={styles.header}>\n        <View style={styles.headerLeft}>\n          <IconButton\n            icon=\"arrow-left\"\n            size={24}\n            onPress={onBack}\n          />\n          <Text style={[styles.headerTitle, { color: theme.colors.text }]}>\n            Task Details\n          </Text>\n        </View>\n        <View style={styles.actionsContainer}>\n          <IconButton\n            icon=\"pencil\"\n            size={24}\n            onPress={onEdit}\n          />\n        </View>\n      </View>\n\n      <ScrollView style={styles.content}>\n        <View style={styles.titleContainer}>\n          <Text style={[styles.title, { color: theme.colors.text }]}>{task.title}</Text>\n          {task.priority && (\n            <Surface style={[styles.priorityBadge, { backgroundColor: getPriorityColor(task.priority) }]}>\n              <MaterialIcons \n                name={getPriorityIcon(task.priority)} \n                size={16} \n                color=\"#fff\" \n                style={styles.priorityIcon}\n              />\n              <Text style={styles.priorityText}>{task.priority.toUpperCase()}</Text>\n            </Surface>\n          )}\n        </View>\n\n        <View style={styles.statusContainer}>\n          <Chip \n            icon={task.completed ? \"check\" : \"clock-outline\"}\n            onPress={() => onToggleCompletion(task.id)}\n            style={[\n              styles.statusChip,\n              { \n                backgroundColor: task.completed \n                  ? theme.colors.success \n                  : theme.colors.surfaceVariant \n              }\n            ]}\n            textStyle={{ color: task.completed ? '#fff' : theme.colors.text }}\n          >\n            {task.completed ? \"Completed\" : \"Pending\"}\n          </Chip>\n          {task.completed && task.updatedAt && (\n            <Text style={[styles.completionDate, { color: theme.colors.text }]}>\n              Completed {formatDistanceToNow(new Date(task.updatedAt), { addSuffix: true })}\n            </Text>\n          )}\n        </View>\n\n        {/* Quick Actions Bar */}\n        <View style={styles.quickActions}>\n          <TouchableOpacity \n            style={styles.quickAction}\n            onPress={() => onToggleCompletion(task.id)}\n          >\n            <MaterialIcons \n              name={task.completed ? \"check-box\" : \"check-box-outline-blank\"} \n              size={24} \n              color={theme.colors.primary} \n            />\n            <Text style={[styles.quickActionText, { color: theme.colors.text }]}>\n              {task.completed ? \"Mark Incomplete\" : \"Mark Complete\"}\n            </Text>\n          </TouchableOpacity>\n          {onPomodoro && (\n            <TouchableOpacity \n              style={styles.quickAction}\n              onPress={handlePomodoro}\n            >\n              <MaterialIcons \n                name=\"timer\" \n                size={24} \n                color={theme.colors.primary} \n              />\n              <Text style={[styles.quickActionText, { color: theme.colors.text }]}>\n                Start Focus\n              </Text>\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity \n            style={styles.quickAction}\n            onPress={onEdit}\n          >\n            <MaterialIcons \n              name=\"edit\" \n              size={24} \n              color={theme.colors.primary} \n            />\n            <Text style={[styles.quickActionText, { color: theme.colors.text }]}>\n              Edit Task\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={styles.quickAction}\n            onPress={() => setShowDeleteConfirm(true)}\n          >\n            <MaterialIcons \n              name=\"delete\" \n              size={24} \n              color={theme.colors.error} \n            />\n            <Text style={[styles.quickActionText, { color: theme.colors.error }]}>\n              Delete\n            </Text>\n          </TouchableOpacity>\n        </View>\n\n        {task.description && (\n          <View style={styles.section}>\n            <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>Description</Text>\n            <Text style={[styles.description, { color: theme.colors.text }]}>{task.description}</Text>\n          </View>\n        )}\n\n        {showPomodoro && (\n          <View style={styles.pomodoroContainer}>\n            <InlinePomodoroTimer \n              initialTaskId={task.id}\n              onMinimize={() => setShowPomodoro(false)}\n            />\n          </View>\n        )}\n\n        <View style={styles.section}>\n          <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>Details</Text>\n          <View style={styles.detailRow}>\n            <Text style={[styles.detailLabel, { color: theme.colors.text }]}>Created:</Text>\n            <Text style={[styles.detailValue, { color: theme.colors.text }]}>\n              {format(new Date(task.createdAt), 'PPP')}\n            </Text>\n          </View>\n          {task.dueDate && (\n            <View style={styles.detailRow}>\n              <Text style={[styles.detailLabel, { color: theme.colors.text }]}>Deadline:</Text>\n              <Text style={[styles.detailValue, { color: theme.colors.text }]}>\n                {format(new Date(task.dueDate), 'PPP')}\n                {' '}\n                ({formatDistanceToNow(new Date(task.dueDate), { addSuffix: true })})\n              </Text>\n            </View>\n          )}\n          {task.dueTime && (\n            <View style={styles.detailRow}>\n              <Text style={[styles.detailLabel, { color: theme.colors.text }]}>Time:</Text>\n              <Text style={[styles.detailValue, { color: theme.colors.text }]}>\n                {format(new Date(`2000-01-01T${task.dueTime}`), 'h:mm a')}\n              </Text>\n            </View>\n          )}\n          {task.location && (\n            <View style={styles.detailRow}>\n              <Text style={[styles.detailLabel, { color: theme.colors.text }]}>Location:</Text>\n              <Text style={[styles.detailValue, { color: theme.colors.text }]}>\n                {task.location}\n              </Text>\n            </View>\n          )}\n          {task.tags && task.tags.length > 0 && (\n            <View style={styles.detailRow}>\n              <Text style={[styles.detailLabel, { color: theme.colors.text }]}>Tags:</Text>\n              <View style={styles.tagsContainer}>\n                {task.tags.map((tag, index) => (\n                  <Chip\n                    key={index}\n                    style={[styles.tagChip, { backgroundColor: theme.colors.surfaceVariant }]}\n                    textStyle={{ color: theme.colors.text }}\n                  >\n                    {tag}\n                  </Chip>\n                ))}\n              </View>\n            </View>\n          )}\n        </View>\n\n        {task.subtasks && task.subtasks.length > 0 && (\n          <View style={styles.section}>\n            <View style={styles.subtaskHeader}>\n              <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>Sub-tasks</Text>\n              <Text style={[styles.subtaskProgress, { color: theme.colors.text }]}>\n                {task.subtasks.filter(st => st.completed).length} of {task.subtasks.length} completed\n              </Text>\n            </View>\n            <ProgressBar\n              progress={calculateSubtaskProgress()}\n              color={theme.colors.primary}\n              style={styles.progressBar}\n            />\n            <SubTaskList\n              taskId={task.id}\n              subtasks={task.subtasks}\n              onChange={(updatedSubtasks) => {\n                onUpdate({\n                  ...task,\n                  subtasks: updatedSubtasks\n                });\n              }}\n            />\n          </View>\n        )}\n\n        {task.pomodoroSessions && task.pomodoroSessions.length > 0 && (\n          <View style={styles.section}>\n            <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>Pomodoro Sessions</Text>\n            <View style={styles.pomodoroStats}>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: theme.colors.primary }]}>\n                  {task.completedPomodoros || 0}\n                </Text>\n                <Text style={[styles.statLabel, { color: theme.colors.text }]}>Completed</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: theme.colors.text }]}>\n                  {Math.round((task.totalPomodoroTime || 0) / 60)}h\n                </Text>\n                <Text style={[styles.statLabel, { color: theme.colors.text }]}>Total Time</Text>\n              </View>\n            </View>\n          </View>\n        )}\n\n        {task.notes && task.notes.length > 0 && (\n          <View style={styles.section}>\n            <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>Notes</Text>\n            {task.notes.map((note, index) => (\n              <Surface key={index} style={[styles.noteCard, { backgroundColor: theme.colors.surfaceVariant }]}>\n                <Text style={[styles.noteText, { color: theme.colors.text }]}>{note.content}</Text>\n                <Text style={[styles.noteDate, { color: theme.colors.text }]}>\n                  {format(new Date(note.createdAt.toString()), 'PPP')}\n                </Text>\n              </Surface>\n            ))}\n          </View>\n        )}\n      </ScrollView>\n\n      <Portal>\n        <Modal\n          visible={showDeleteConfirm}\n          onDismiss={() => setShowDeleteConfirm(false)}\n          contentContainerStyle={[\n            styles.deleteModal,\n            { backgroundColor: theme.colors.surface }\n          ]}\n        >\n          <Text style={[styles.deleteTitle, { color: theme.colors.text }]}>\n            Delete Task\n          </Text>\n          <Text style={[styles.deleteMessage, { color: theme.colors.text }]}>\n            Are you sure you want to delete this task? This action cannot be undone.\n          </Text>\n          <View style={styles.deleteActions}>\n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowDeleteConfirm(false)}\n              style={styles.deleteButton}\n            >\n              Cancel\n            </Button>\n            <Button\n              mode=\"contained\"\n              onPress={() => {\n                setShowDeleteConfirm(false);\n                handleDelete();\n              }}\n              style={[styles.deleteButton, { backgroundColor: theme.colors.error }]}\n            >\n              Delete\n            </Button>\n          </View>\n        </Modal>\n      </Portal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.1)',\n  },\n  headerLeft: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginLeft: 8,\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  content: {\n    flex: 1,\n    padding: 16,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  priorityBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    marginLeft: 8,\n  },\n  priorityIcon: {\n    marginRight: 4,\n  },\n  priorityText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 12,\n  },\n  statusContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  statusChip: {\n    marginRight: 8,\n  },\n  completionDate: {\n    fontSize: 14,\n    opacity: 0.7,\n  },\n  quickActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 24,\n    paddingVertical: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.1)',\n  },\n  quickAction: {\n    alignItems: 'center',\n  },\n  quickActionText: {\n    marginTop: 4,\n    fontSize: 12,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  description: {\n    fontSize: 16,\n    lineHeight: 24,\n  },\n  pomodoroContainer: {\n    marginBottom: 16,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  detailLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    width: 100,\n  },\n  detailValue: {\n    fontSize: 16,\n    flex: 1,\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    flex: 1,\n  },\n  tagChip: {\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  subtaskHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  subtaskProgress: {\n    fontSize: 14,\n    opacity: 0.7,\n  },\n  progressBar: {\n    height: 4,\n    borderRadius: 2,\n    marginBottom: 16,\n  },\n  pomodoroStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 16,\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  statLabel: {\n    fontSize: 14,\n    opacity: 0.7,\n  },\n  noteCard: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  noteText: {\n    fontSize: 16,\n    marginBottom: 8,\n  },\n  noteDate: {\n    fontSize: 12,\n    opacity: 0.7,\n  },\n  deleteModal: {\n    margin: 20,\n    padding: 20,\n    borderRadius: 8,\n  },\n  deleteTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  deleteMessage: {\n    fontSize: 16,\n    marginBottom: 24,\n  },\n  deleteActions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  deleteButton: {\n    marginLeft: 8,\n  },\n}); ","import React, { useState, useEffect, useMemo } from 'react';\nimport { \n  View, \n  StyleSheet, \n  FlatList,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  Platform\n} from 'react-native';\nimport {\n  Button,\n  Modal,\n  Portal,\n  Text,\n  useTheme,\n  IconButton,\n  Menu,\n  Divider,\n  Searchbar,\n  Chip,\n  Surface,\n  Card,\n  Dialog\n} from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { Task } from '../types/Task';\nimport ViewToggle, { ViewMode } from '../components/ViewToggle';\nimport TaskList from '../components/TaskList';\nimport TaskGridView from '../components/TaskGridView';\nimport TimelineView from '../components/TimelineView';\nimport InlinePomodoroTimer from '../components/InlinePomodoroTimer';\nimport TaskForm from '../components/TaskForm';\nimport { useTaskStore } from '../stores/taskStore';\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { format } from 'date-fns';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport PomodoroTimer from '../components/PomodoroTimer';\nimport TaskDetail from '../components/TaskDetail';\n\ntype TasksScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Main'>;\n\nconst TasksScreen = () => {\n  const navigation = useNavigation<TasksScreenNavigationProp>();\n  const theme = useTheme();\n  const isDark = (theme as any).dark;\n  const { colors } = theme;\n  const { \n    tasks, \n    isLoading, \n    fetchTasks, \n    addTask, \n    updateTask, \n    deleteTask,\n    toggleTaskCompletion,\n    toggleSubtask\n  } = useTaskStore();\n  \n  // State\n  const [viewMode, setViewMode] = useState<ViewMode>('list');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filter, setFilter] = useState<{\n    status?: string[];\n    priority?: string[];\n    dueDateRange?: { start?: Date, end?: Date };\n    tags?: string[];\n  }>({\n    status: [],\n    priority: [],\n    dueDateRange: {},\n    tags: []\n  });\n  const [sortBy, setSortBy] = useState<'priority' | 'dueDate' | 'createdAt'>('dueDate');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\n  const [showForm, setShowForm] = useState(false);\n  const [showPomodoro, setShowPomodoro] = useState(false);\n  const [pomodoroTaskId, setPomodoroTaskId] = useState<string | undefined>(undefined);\n  const [showFilterMenu, setShowFilterMenu] = useState(false);\n  const [showSortMenu, setShowSortMenu] = useState(false);\n  const [showDateFilterDialog, setShowDateFilterDialog] = useState(false);\n  const [showStartDatePicker, setShowStartDatePicker] = useState(false);\n  const [showEndDatePicker, setShowEndDatePicker] = useState(false);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const [taskToDelete, setTaskToDelete] = useState<string | null>(null);\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\n  const [showTaskDetail, setShowTaskDetail] = useState(false);\n\n  // Fetch tasks when component mounts (consolidated from multiple hooks)\n  useEffect(() => {\n    const loadTasks = async () => {\n      try {\n        console.log('Loading tasks on component mount (single useEffect)...');\n        \n        // Reset all filters\n        setFilter({\n          status: [],\n          priority: [],\n          dueDateRange: {},\n          tags: []\n        });\n        setSearchQuery('');\n        \n        // Make sure we're in list view for better visibility\n        setViewMode('list');\n        \n        // Fetch all tasks without any filtering\n        await fetchTasks();\n        \n        console.log(`Total number of tasks in database: ${tasks.length}`);\n        tasks.forEach((task, index) => {\n          console.log(`Task ${index + 1}: ID=${task.id}, Title=${task.title}, Completed=${task.completed}`);\n        });\n      } catch (error) {\n        console.error('Error loading tasks:', error);\n      }\n    };\n    \n    loadTasks();\n    // Empty dependency array means this only runs once on component mount\n  }, []);\n  \n  // Debug effect for filter menu\n  useEffect(() => {\n    console.log('Filter menu state updated:', showFilterMenu);\n  }, [showFilterMenu]);\n  \n  // Navigate to task details\n  const handleTaskPress = (taskId: string) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      setSelectedTask(task);\n      setShowTaskDetail(true);\n    }\n  };\n  \n  // Start pomodoro timer\n  const handleStartPomodoro = (taskId: string) => {\n    setPomodoroTaskId(taskId);\n    setShowPomodoro(true);\n  };\n\n  // Toggle task completion\n  const handleToggleCompletion = async (taskId: string) => {\n    console.log('TasksScreen - handleToggleCompletion called with taskId:', taskId);\n    try {\n      const task = tasks.find(t => t.id === taskId);\n      if (task) {\n        console.log('Found task:', task.id, task.title, 'Current completed status:', task.completed);\n        // Update task with new completed status\n        const updatedTask = {\n          ...task,\n          completed: !task.completed\n        };\n        await updateTask(updatedTask);\n        console.log('Task completion toggled successfully');\n        \n        // Refresh tasks to update UI\n        await fetchTasks();\n      } else {\n        console.error('Task not found with ID:', taskId);\n      }\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    }\n  };\n  \n  // Create a new task\n  const handleCreateTask = async (taskData: Partial<Task>) => {\n    try {\n      console.log('Creating new task with data:', taskData);\n      \n      // Ensure required fields are present\n      const newTaskData = {\n        ...taskData,\n        title: taskData.title || 'Untitled Task',\n        priority: taskData.priority || 'medium',\n        completed: false,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      \n      console.log('Creating task with complete data:', newTaskData);\n      const newTask = await addTask(newTaskData);\n      \n      if (!newTask) {\n        throw new Error('Failed to create task');\n      }\n      \n      console.log('New task created successfully:', newTask.id);\n      \n      // Close the form if it's open\n      setShowForm(false);\n      \n      // Log the current task count\n      console.log(`Current task count after creation: ${tasks.length + 1}`);\n      \n      return newTask;\n    } catch (error) {\n      console.error('Error creating task:', error);\n      throw error;\n    }\n  };\n\n  // Toggle filter selection\n  const toggleFilter = (type: 'status' | 'priority', value: string) => {\n    setFilter(prev => {\n      const current = [...(prev[type] || [])];\n      const index = current.indexOf(value);\n      \n      if (index >= 0) {\n        current.splice(index, 1);\n      } else {\n        current.push(value);\n      }\n      \n      return {\n        ...prev,\n        [type]: current\n      };\n    });\n  };\n\n  // Check if a filter is active\n  const isFilterActive = (type: 'status' | 'priority', value: string) => {\n    return filter[type]?.includes(value) || false;\n  };\n\n  // Reset all filters\n  const resetFilters = () => {\n    setFilter({\n      status: [],\n      priority: [],\n      dueDateRange: {},\n      tags: []\n    });\n    setSearchQuery('');\n  };\n\n  // Toggle sort order\n  const toggleSortOrder = () => {\n    setSortOrder(prev => prev === 'asc' ? 'desc' : 'asc');\n  };\n  \n  // Apply filter, search, and sorting\n  const getFilteredTasks = useMemo(() => {\n    console.log(`Starting filtering with ${tasks.length} total tasks`);\n    let result = [...tasks];\n    \n    // Log the initial tasks\n    console.log(`Initial task count: ${result.length}`);\n    \n    // Don't filter out null IDs, but generate temporary ones\n    const beforeNullFilter = result.length;\n    result = result.filter(task => task !== null && task !== undefined);\n    \n    // Assign temporary IDs to tasks with null IDs\n    result.forEach((task, index) => {\n      if (!task.id) {\n        console.log(`Assigning temporary ID to task: ${task.title}`);\n        task.id = `temp-${Date.now()}-${index}`;\n      }\n    });\n    \n    console.log(`After null check: ${result.length} tasks (removed ${beforeNullFilter - result.length})`);\n    \n    // Apply text search if any\n    if (searchQuery.trim()) {\n      const beforeSearch = result.length;\n      const searchTerm = searchQuery.toLowerCase();\n      \n      // First log which tasks match the search query\n      console.log(`Searching for: \"${searchTerm}\"`);\n      result.forEach(task => {\n        const titleMatch = task.title.toLowerCase().includes(searchTerm);\n        const descMatch = task.description && task.description.toLowerCase().includes(searchTerm);\n        console.log(`Task ${task.id}: \"${task.title}\" - Title match: ${titleMatch}, Desc match: ${descMatch}`);\n      });\n      \n      // Then perform the filtering\n      result = result.filter(task => \n        task.title.toLowerCase().includes(searchTerm) ||\n        (task.description && task.description.toLowerCase().includes(searchTerm))\n      );\n      console.log(`After search filter: ${result.length} tasks (removed ${beforeSearch - result.length})`);\n    }\n    \n    // Apply category filter if selected\n    if (filter.status && filter.status.length > 0) {\n      const beforeStatus = result.length;\n      result = result.filter(task => {\n        if (filter.status?.includes('completed')) {\n          if (task.completed) return true;\n        }\n        if (filter.status?.includes('pending')) {\n          if (!task.completed) return true;\n        }\n        return false;\n      });\n      console.log(`After status filter: ${result.length} tasks (removed ${beforeStatus - result.length})`);\n    }\n    \n    // Apply priority filters\n    if (filter.priority && filter.priority.length > 0) {\n      const beforePriority = result.length;\n      result = result.filter(task => \n        filter.priority?.includes(task.priority || 'medium')\n      );\n      console.log(`After priority filter: ${result.length} tasks (removed ${beforePriority - result.length})`);\n    }\n    \n    // Apply date range filter\n    if (filter.dueDateRange?.start || filter.dueDateRange?.end) {\n      const beforeDate = result.length;\n      result = result.filter(task => {\n        if (!task.dueDate) return false;\n        \n        const taskDate = new Date(task.dueDate);\n        const startOk = filter.dueDateRange?.start \n          ? taskDate >= new Date(filter.dueDateRange.start) \n          : true;\n        const endOk = filter.dueDateRange?.end \n          ? taskDate <= new Date(filter.dueDateRange.end) \n          : true;\n        \n        return startOk && endOk;\n      });\n      console.log(`After date range filter: ${result.length} tasks (removed ${beforeDate - result.length})`);\n    }\n    \n    // Apply tag filters if available\n    if (filter.tags && filter.tags.length > 0) {\n      const beforeTags = result.length;\n      result = result.filter(task => {\n        // Safe check for tags property which might not exist on Task type\n        const taskTags = (task as any).tags;\n        return taskTags && Array.isArray(taskTags) && \n          taskTags.some((tag: string) => filter.tags?.includes(tag));\n      });\n      console.log(`After tag filter: ${result.length} tasks (removed ${beforeTags - result.length})`);\n    }\n    \n    // Apply sorting\n    const beforeSort = result.length;\n    result.sort((a, b) => {\n      if (sortBy === 'priority') {\n        const priorityOrder = { high: 3, medium: 2, low: 1 };\n        const aPriority = a.priority ? priorityOrder[a.priority] || 0 : 0;\n        const bPriority = b.priority ? priorityOrder[b.priority] || 0 : 0;\n        return sortOrder === 'asc' ? aPriority - bPriority : bPriority - aPriority;\n      } else if (sortBy === 'dueDate') {\n        const aDate = a.dueDate ? new Date(a.dueDate).getTime() : 0;\n        const bDate = b.dueDate ? new Date(b.dueDate).getTime() : 0;\n        return sortOrder === 'asc' ? aDate - bDate : bDate - aDate;\n      } else {\n        const aDate = a.createdAt ? new Date(a.createdAt).getTime() : 0;\n        const bDate = b.createdAt ? new Date(b.createdAt).getTime() : 0;\n        return sortOrder === 'asc' ? aDate - bDate : bDate - aDate;\n      }\n    });\n    console.log(`After sorting: ${result.length} tasks (should be same as before)`);\n    \n    console.log(`Final filtered task count: ${result.length}`);\n    return result;\n  }, [tasks, sortBy, sortOrder, filter, searchQuery]);\n\n  // Count active filters\n  const getActiveFiltersCount = () => {\n    let count = 0;\n    if (filter.status?.length) count += filter.status.length;\n    if (filter.priority?.length) count += filter.priority.length;\n    if (filter.dueDateRange?.start || filter.dueDateRange?.end) count++;\n    if (filter.tags?.length) count += filter.tags.length;\n    return count;\n  };\n\n  // Add delete handler with confirmation\n  const handleDeleteTask = async (taskId: string) => {\n    setTaskToDelete(taskId);\n    setShowDeleteDialog(true);\n  };\n\n  const confirmDeleteTask = async () => {\n    if (!taskToDelete) return;\n    \n    try {\n      console.log('Deleting task:', taskToDelete);\n      await deleteTask(taskToDelete);\n      console.log('Task deleted successfully');\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    } finally {\n      setShowDeleteDialog(false);\n      setTaskToDelete(null);\n    }\n  };\n\n  // Render the appropriate task view based on viewMode\n  const renderTaskView = () => {\n    if (getFilteredTasks.length === 0) {\n      return (\n        <View style={styles.emptyContainer}>\n          <Text style={[styles.emptyText, { color: theme.colors.onSurface }]}>\n            No tasks found\n          </Text>\n        </View>\n      );\n    }\n\n    switch (viewMode) {\n      case 'grid':\n        return (\n          <TaskGridView\n            tasks={getFilteredTasks}\n            onTaskPress={handleTaskPress}\n            onToggleCompletion={handleToggleCompletion}\n            onDelete={handleDeleteTask}\n            onStartPomodoro={handleStartPomodoro}\n          />\n        );\n      case 'timeline':\n        return (\n          <TimelineView\n            tasks={getFilteredTasks}\n            onTaskPress={handleTaskPress}\n            onToggleCompletion={handleToggleCompletion}\n            onStartPomodoro={handleStartPomodoro}\n          />\n        );\n      default:\n        return (\n          <TaskList\n            tasks={getFilteredTasks}\n            onTaskPress={handleTaskPress}\n            onToggle={handleToggleCompletion}\n            onDelete={handleDeleteTask}\n            onStartPomodoro={handleStartPomodoro}\n          />\n        );\n    }\n  };\n\n  // Render active filter chips\n  const renderFilterChips = () => {\n    if (getActiveFiltersCount() === 0) return null;\n    \n    return (\n      <View style={styles.filterChipsContainer}>\n        <View style={styles.chipScrollContainer}>\n          {filter.status?.map((status) => (\n            <Chip \n              key={`status-${status}`}\n              style={styles.filterChip} \n              onClose={() => toggleFilter('status', status)}\n              icon={status === 'completed' ? 'check-circle' : 'clock-outline'}\n            >\n              {status === 'completed' ? 'Completed' : 'Pending'}\n            </Chip>\n          ))}\n          \n          {filter.priority?.map((priority) => (\n            <Chip \n              key={`priority-${priority}`}\n              style={styles.filterChip} \n              onClose={() => toggleFilter('priority', priority)}\n              icon={priority === 'high' ? 'arrow-up' : priority === 'medium' ? 'minus' : 'arrow-down'}\n            >\n              {priority.charAt(0).toUpperCase() + priority.slice(1)} Priority\n            </Chip>\n          ))}\n          \n          {(filter.dueDateRange?.start || filter.dueDateRange?.end) && (\n            <Chip \n              key=\"date-range\"\n              style={styles.filterChip} \n              onClose={() => setFilter(prev => ({ ...prev, dueDateRange: {} }))}\n              icon=\"calendar-range\"\n            >\n              Date Filter\n            </Chip>\n          )}\n          \n          {filter.tags?.map((tag) => (\n            <Chip \n              key={`tag-${tag}`}\n              style={styles.filterChip} \n              onClose={() => setFilter(prev => ({ \n                ...prev, \n                tags: prev.tags?.filter(t => t !== tag) \n              }))}\n              icon=\"tag\"\n            >\n              {tag}\n            </Chip>\n          ))}\n\n          <Chip \n            key=\"reset\"\n            style={styles.filterChip} \n            onPress={resetFilters}\n            icon=\"filter-remove\"\n          >\n            Reset All\n          </Chip>\n        </View>\n      </View>\n    );\n  };\n\n  // Format date for display\n  const formatDate = (date: Date | null | undefined): string => {\n    if (!date) return 'Select Date';\n    return date.toLocaleDateString();\n  };\n\n  // Add a function to force-fetch all tasks (meant to be called manually, not in useEffect)\n  const forceDisplayAllTasks = async () => {\n    try {\n      console.log('Force displaying all tasks (manual refresh)...');\n      \n      // Reset all filters\n      setFilter({\n        status: [],\n        priority: [],\n        dueDateRange: {},\n        tags: []\n      });\n      setSearchQuery('');\n      \n      // Make sure we're in list view for better visibility\n      setViewMode('list');\n      \n      // Call fetchTasks without any filters\n      await fetchTasks();\n      \n      // Log the tasks we have\n      console.log(`Database has ${tasks.length} tasks total`);\n      console.log(`Filtered tasks count: ${getFilteredTasks.length}`);\n      console.log(`Difference: ${tasks.length - getFilteredTasks.length} tasks are being filtered out`);\n      \n      // Log the search query to ensure it's empty\n      console.log(`Current search query: \"${searchQuery}\"`);\n      \n      // Debug specific filter conditions\n      console.log('Current filters:', JSON.stringify(filter));\n    } catch (error) {\n      console.error('Error displaying all tasks:', error);\n    }\n  };\n  \n  // Call the function when component mounts\n  useEffect(() => {\n    forceDisplayAllTasks();\n  }, []);\n\n  // Add a function to debug task filtering\n  const debugTaskFiltering = () => {\n    console.log('=== DEBUG TASK FILTERING ===');\n    \n    // Check if the number of tasks matches expected\n    console.log(`Database has ${tasks.length} total tasks`);\n    console.log(`${getFilteredTasks.length} tasks after filtering`);\n    \n    // Log search query\n    console.log(`Current search query: \"${searchQuery}\"`);\n    \n    // Check if any filters are active\n    console.log('Current filters:', filter);\n    \n    // Get the IDs of all tasks in the database\n    const allTaskIds = tasks.map(t => t.id);\n    \n    // Get the IDs of all filtered tasks\n    const filteredTaskIds = getFilteredTasks.map(t => t.id);\n    \n    // Find which tasks are missing from filtered tasks\n    const missingTaskIds = allTaskIds.filter(id => !filteredTaskIds.includes(id));\n    console.log(`Missing task IDs: ${missingTaskIds.join(', ')}`);\n    \n    // Log details about missing tasks to identify patterns\n    missingTaskIds.forEach(id => {\n      const task = tasks.find(t => t.id === id);\n      console.log(`Missing task: ID=${id}, Title=${task?.title}, Priority=${task?.priority}, Completed=${task?.completed}`);\n      \n      // Check for null or undefined properties\n      const taskAny = task as any;\n      if (!task?.id) console.log(`- Missing ID`);\n      if (!task?.title) console.log(`- Missing title`);\n      if (taskAny.tags && taskAny.tags.length === 0) console.log(`- Empty tags array`);\n    });\n    \n    console.log('=== END DEBUG ===');\n  };\n  \n  // Add a button to trigger the debug function\n  useEffect(() => {\n    // Call debug function after a short delay to ensure all state is updated\n    const debugTimer = setTimeout(debugTaskFiltering, 500);\n    return () => clearTimeout(debugTimer);\n  }, [tasks, getFilteredTasks.length]);\n\n  // Add task detail handlers\n  const handleTaskUpdate = (updatedTask: Task) => {\n    updateTask(updatedTask);\n    setSelectedTask(updatedTask);\n  };\n\n  const handleTaskDelete = async (taskId: string) => {\n    await deleteTask(taskId);\n    setShowTaskDetail(false);\n    setSelectedTask(null);\n  };\n\n  const handleToggleTaskCompletion = async (taskId: string) => {\n    await toggleTaskCompletion(taskId);\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, completed: !selectedTask.completed });\n    }\n  };\n\n  const handleToggleSubtask = async (taskId: string, subtaskId: string) => {\n    await toggleSubtask(taskId, subtaskId);\n    if (selectedTask && selectedTask.subtasks) {\n      const updatedSubtasks = selectedTask.subtasks.map(subtask => \n        subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask\n      );\n      setSelectedTask({ ...selectedTask, subtasks: updatedSubtasks });\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.content}>\n        <View style={styles.searchContainer}>\n          <Searchbar\n            placeholder=\"Search tasks...\"\n            onChangeText={setSearchQuery}\n            value={searchQuery}\n            style={styles.searchBar}\n            iconColor={colors.primary}\n            inputStyle={{ color: colors.onSurface }}\n          />\n        </View>\n\n        <View style={styles.controlsContainer}>\n          <ViewToggle\n            mode={viewMode}\n            onToggle={setViewMode}\n          />\n          \n          <View style={styles.filterContainer}>\n            <IconButton\n              icon={sortOrder === 'asc' ? 'sort-ascending' : 'sort-descending'}\n              size={24}\n              onPress={toggleSortOrder}\n            />\n            \n            <Menu\n              visible={showSortMenu}\n              onDismiss={() => setShowSortMenu(false)}\n              anchor={\n                <IconButton\n                  icon=\"sort\"\n                  size={24}\n                  onPress={() => setShowSortMenu(true)}\n                />\n              }\n            >\n              <Menu.Item \n                onPress={() => {\n                  setSortBy('priority');\n                  setShowSortMenu(false);\n                }}\n                title=\"Sort by Priority\"\n                leadingIcon=\"flag\"\n              />\n              <Menu.Item \n                onPress={() => {\n                  setSortBy('dueDate');\n                  setShowSortMenu(false);\n                }}\n                title=\"Sort by Due Date\"\n                leadingIcon=\"calendar\"\n              />\n              <Menu.Item \n                onPress={() => {\n                  setSortBy('createdAt');\n                  setShowSortMenu(false);\n                }}\n                title=\"Sort by Created Date\"\n                leadingIcon=\"clock\"\n              />\n            </Menu>\n            \n            <TouchableOpacity \n              style={styles.filterButton}\n              onPress={() => {\n                console.log('Filter button pressed');\n                setShowFilterMenu(!showFilterMenu);\n              }}\n            >\n              <View style={styles.filterButtonContent}>\n                <MaterialCommunityIcons name=\"filter-variant\" size={24} color={colors.primary} />\n                {getActiveFiltersCount() > 0 && (\n                  <View style={styles.filterBadge}>\n                    <Text style={styles.filterBadgeText}>{getActiveFiltersCount()}</Text>\n                  </View>\n                )}\n              </View>\n            </TouchableOpacity>\n            \n            <IconButton\n              icon=\"refresh\"\n              size={24}\n              onPress={forceDisplayAllTasks}\n            />\n            \n            <IconButton\n              icon=\"bug\"\n              size={24}\n              onPress={async () => {\n                try {\n                  console.log(\"Debug task creation test - Starting\");\n                  const testTask = {\n                    title: \"Debug Test Task \" + new Date().toLocaleTimeString(),\n                    description: \"Created for debugging\",\n                    priority: \"medium\" as const,\n                    completed: false,\n                    createdAt: new Date().toISOString(),\n                    updatedAt: new Date().toISOString()\n                  };\n                  \n                  console.log(\"Creating test task:\", testTask);\n                  await handleCreateTask(testTask);\n                  \n                  console.log(\"Debug task creation test - Completed\");\n                } catch (error) {\n                  console.error(\"Error in debug task creation:\", error);\n                }\n              }}\n            />\n            \n            <View style={{\n              backgroundColor: tasks.length !== getFilteredTasks.length ? 'red' : 'green',\n              padding: 8,\n              borderRadius: 4,\n              marginLeft: 8\n            }}>\n              <Text style={{ color: 'white', fontWeight: 'bold' }}>\n                {getFilteredTasks.length}/{tasks.length}\n              </Text>\n            </View>\n            \n            <Menu\n              visible={showFilterMenu}\n              onDismiss={() => {\n                console.log('Dismissing filter menu');\n                setShowFilterMenu(false);\n              }}\n              anchor={<View style={{ width: 1, height: 1 }} />}\n              style={styles.filterMenu}\n            >\n              <Menu.Item \n                onPress={() => toggleFilter('status', 'pending')}\n                title=\"Pending Tasks\"\n                leadingIcon=\"clock-outline\"\n                trailingIcon={isFilterActive('status', 'pending') ? 'check' : undefined}\n              />\n              <Menu.Item \n                onPress={() => toggleFilter('status', 'completed')}\n                title=\"Completed Tasks\"\n                leadingIcon=\"check-circle\"\n                trailingIcon={isFilterActive('status', 'completed') ? 'check' : undefined}\n              />\n              <Divider />\n              <Menu.Item \n                onPress={() => toggleFilter('priority', 'high')}\n                title=\"High Priority\"\n                leadingIcon=\"arrow-up\"\n                trailingIcon={isFilterActive('priority', 'high') ? 'check' : undefined}\n              />\n              <Menu.Item \n                onPress={() => toggleFilter('priority', 'medium')}\n                title=\"Medium Priority\"\n                leadingIcon=\"minus\"\n                trailingIcon={isFilterActive('priority', 'medium') ? 'check' : undefined}\n              />\n              <Menu.Item \n                onPress={() => toggleFilter('priority', 'low')}\n                title=\"Low Priority\"\n                leadingIcon=\"arrow-down\"\n                trailingIcon={isFilterActive('priority', 'low') ? 'check' : undefined}\n              />\n              <Divider />\n              <Menu.Item \n                onPress={() => {\n                  setShowFilterMenu(false);\n                  setShowDateFilterDialog(true);\n                }}\n                title=\"Date Range\"\n                leadingIcon=\"calendar-range\"\n                trailingIcon={(filter.dueDateRange?.start || filter.dueDateRange?.end) ? 'check' : undefined}\n              />\n              <Divider />\n              <Menu.Item \n                onPress={() => {\n                  resetFilters();\n                  setShowFilterMenu(false);\n                }}\n                title=\"Reset All Filters\"\n                leadingIcon=\"filter-remove\"\n              />\n            </Menu>\n          </View>\n        </View>\n\n        {renderFilterChips()}\n        {renderTaskView()}\n      </View>\n\n      <Portal>\n        <Modal\n          visible={showForm}\n          onDismiss={() => setShowForm(false)}\n          contentContainerStyle={styles.modalContent}\n        >\n          <TaskForm\n            isVisible={showForm}\n            onClose={() => setShowForm(false)}\n            onSave={handleCreateTask}\n          />\n        </Modal>\n\n        <Modal\n          visible={showPomodoro}\n          onDismiss={() => setShowPomodoro(false)}\n          contentContainerStyle={styles.modalContent}\n        >\n          <InlinePomodoroTimer\n            initialTaskId={pomodoroTaskId}\n            onMinimize={() => setShowPomodoro(false)}\n          />\n        </Modal>\n\n        <Dialog visible={showDateFilterDialog} onDismiss={() => setShowDateFilterDialog(false)}>\n          <Dialog.Title>Filter by Date Range</Dialog.Title>\n          <Dialog.Content>\n            <View style={{gap: 16}}>\n              <View style={styles.datePickerRow}>\n                <Text>Start Date: </Text>\n                <Button \n                  mode=\"outlined\" \n                  onPress={() => setShowStartDatePicker(true)}\n                  style={styles.dateButton}\n                >\n                  {formatDate(filter.dueDateRange?.start)}\n                </Button>\n                {showStartDatePicker && (\n                  <DateTimePicker\n                    value={filter.dueDateRange?.start || new Date()}\n                    mode=\"date\"\n                    display={Platform.OS === 'ios' ? 'spinner' : 'default'}\n                    onChange={(event, selectedDate) => {\n                      setShowStartDatePicker(false);\n                      if (selectedDate) {\n                        setFilter(prev => ({\n                          ...prev,\n                          dueDateRange: {\n                            ...prev.dueDateRange,\n                            start: selectedDate\n                          }\n                        }));\n                      }\n                    }}\n                  />\n                )}\n              </View>\n              \n              <View style={styles.datePickerRow}>\n                <Text>End Date: </Text>\n                <Button \n                  mode=\"outlined\" \n                  onPress={() => setShowEndDatePicker(true)}\n                  style={styles.dateButton}\n                >\n                  {formatDate(filter.dueDateRange?.end)}\n                </Button>\n                {showEndDatePicker && (\n                  <DateTimePicker\n                    value={filter.dueDateRange?.end || new Date()}\n                    mode=\"date\"\n                    display={Platform.OS === 'ios' ? 'spinner' : 'default'}\n                    onChange={(event, selectedDate) => {\n                      setShowEndDatePicker(false);\n                      if (selectedDate) {\n                        setFilter(prev => ({\n                          ...prev,\n                          dueDateRange: {\n                            ...prev.dueDateRange,\n                            end: selectedDate\n                          }\n                        }));\n                      }\n                    }}\n                  />\n                )}\n              </View>\n            </View>\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setFilter(prev => ({...prev, dueDateRange: {}}))} style={{marginRight: 8}}>Clear</Button>\n            <Button onPress={() => setShowDateFilterDialog(false)}>Cancel</Button>\n            <Button onPress={() => setShowDateFilterDialog(false)} mode=\"contained\">Apply</Button>\n          </Dialog.Actions>\n        </Dialog>\n\n        <Dialog visible={showDeleteDialog} onDismiss={() => setShowDeleteDialog(false)}>\n          <Dialog.Title>Delete Task</Dialog.Title>\n          <Dialog.Content>\n            <Text>Are you sure you want to delete this task? This action cannot be undone.</Text>\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setShowDeleteDialog(false)}>Cancel</Button>\n            <Button onPress={confirmDeleteTask} mode=\"contained\" buttonColor={colors.error}>\n              Delete\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n\n        {/* Task Detail Modal */}\n        <Modal\n          visible={showTaskDetail && selectedTask !== null}\n          onDismiss={() => setShowTaskDetail(false)}\n          contentContainerStyle={styles.modalContent}\n        >\n          {selectedTask && (\n            <TaskDetail\n              task={selectedTask}\n              onEdit={() => {\n                setShowTaskDetail(false);\n                navigation.navigate('EditTask', { taskId: selectedTask.id });\n              }}\n              onDelete={handleTaskDelete}\n              onToggleCompletion={handleToggleTaskCompletion}\n              onToggleSubtask={handleToggleSubtask}\n              onUpdate={handleTaskUpdate}\n              onBack={() => setShowTaskDetail(false)}\n            />\n          )}\n        </Modal>\n      </Portal>\n      \n      {/* Direct Pomodoro Timer */}\n      {showPomodoro && (\n        <View style={styles.pomodoroContainer}>\n          <PomodoroTimer\n            initialTaskId={pomodoroTaskId}\n            onClose={() => setShowPomodoro(false)}\n            showCloseButton={true}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    padding: 4,\n  },\n  searchContainer: {\n    marginBottom: 12,\n  },\n  searchBar: {\n    elevation: 2,\n    borderRadius: 12,\n  },\n  controlsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  filterButton: {\n    padding: 8,\n    marginLeft: 4,\n  },\n  filterButtonContent: {\n    position: 'relative',\n  },\n  filterBadge: {\n    position: 'absolute',\n    top: -6,\n    right: -6,\n    backgroundColor: 'red',\n    borderRadius: 10,\n    width: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  filterBadgeText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  filterMenu: {\n    marginTop: 50,\n    marginRight: 10,\n  },\n  filterChipsContainer: {\n    marginBottom: 12,\n  },\n  chipScrollContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n  },\n  filterChip: {\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  emptyText: {\n    fontSize: 20,\n    fontWeight: '600',\n    marginTop: 16,\n    marginBottom: 8,\n  },\n  emptySubtext: {\n    fontSize: 16,\n    opacity: 0.7,\n    marginBottom: 24,\n    textAlign: 'center',\n  },\n  createButton: {\n    marginTop: 8,\n  },\n  modalContent: {\n    flex: 1,\n    margin: 0,\n  },\n  datePickerRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  dateButton: {\n    flex: 1,\n    marginLeft: 8,\n  },\n  gridList: {\n    padding: 4,\n  },\n  gridItem: {\n    flex: 1,\n    padding: 4,\n  },\n  gridCard: {\n    margin: 0,\n    height: 160,\n  },\n  gridCardContent: {\n    padding: 12,\n  },\n  gridHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 8,\n  },\n  gridTitleContainer: {\n    flex: 1,\n    marginRight: 8,\n  },\n  gridTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  gridDescription: {\n    fontSize: 12,\n    opacity: 0.7,\n    marginBottom: 8,\n  },\n  gridFooter: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 'auto',\n  },\n  gridDateContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  gridDate: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n  gridTagsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  gridTags: {\n    fontSize: 12,\n    marginLeft: 4,\n  },\n  priorityBadge: {\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4,\n    alignSelf: 'flex-start',\n  },\n  priorityText: {\n    fontSize: 10,\n    color: '#fff',\n    textTransform: 'capitalize',\n  },\n  gridCheckButton: {\n    margin: 0,\n    padding: 0,\n  },\n  pomodoroContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 100,\n  }\n});\n\nexport default TasksScreen;","import React, { useState, useEffect, useMemo } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, FlatList, Dimensions, Animated } from 'react-native';\nimport { Calendar, CalendarUtils } from 'react-native-calendars';\nimport type { DateData } from 'react-native-calendars';\nimport { format, isSameDay, isToday, parseISO, addMonths, subMonths, startOfMonth, endOfMonth, eachDayOfInterval, startOfWeek, endOfWeek, eachDayOfInterval as getDatesBetween, addWeeks, subWeeks } from 'date-fns';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { useTaskStore } from '../stores/taskStore';\nimport { Task } from '../types/Task';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { IconButton, Chip, Menu, Divider, Portal } from 'react-native-paper';\n\n// View type definition\ntype CalendarViewType = 'month' | 'week' | 'today' | 'timeline' | 'year';\n\ninterface MarkedDates {\n  [date: string]: {\n    marked?: boolean;\n    dots?: Array<{key: string; color: string}>;\n    selected?: boolean;\n    selectedColor?: string;\n  };\n}\n\ninterface CalendarViewProps {\n  tasks: Task[];\n  onTaskPress?: (taskId: string) => void;\n  onToggleCompletion?: (taskId: string) => void;\n  onAddTask?: (date: string) => void;\n}\n\nexport default function CalendarView({ \n  tasks,\n  onTaskPress,\n  onToggleCompletion,\n  onAddTask\n}: CalendarViewProps) {\n  const { theme, isDark } = useTheme();\n  const { tasks: taskStoreTasks } = useTaskStore();\n  \n  const [selectedDate, setSelectedDate] = useState(format(new Date(), 'yyyy-MM-dd'));\n  const [markedDates, setMarkedDates] = useState<MarkedDates>({});\n  const [tasksForSelectedDate, setTasksForSelectedDate] = useState<Task[]>([]);\n  const [currentMonth, setCurrentMonth] = useState(format(new Date(), 'yyyy-MM'));\n  const [isCalendarExpanded, setIsCalendarExpanded] = useState(false);\n  const [calendarHeight] = useState(new Animated.Value(350)); // Increased initial height\n  const [weekTasks, setWeekTasks] = useState<{[date: string]: Task[]}>({});\n  const [viewType, setViewType] = useState<CalendarViewType>('month');\n  const [currentWeekStart, setCurrentWeekStart] = useState<Date>(startOfWeek(new Date()));\n  const [viewTransition] = useState(new Animated.Value(1));\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [selectedTaskId, setSelectedTaskId] = useState<string | null>(null);\n  const [menuAnchor, setMenuAnchor] = useState<{ x: number; y: number } | null>(null);\n  \n  // Toggle calendar expanded state\n  const toggleCalendarExpanded = () => {\n    setIsCalendarExpanded(!isCalendarExpanded);\n  };\n  \n  // Navigate to previous month or week\n  const goToPrevious = () => {\n    if (viewType === 'week') {\n      // Previous week\n      const newWeekStart = subWeeks(currentWeekStart, 1);\n      setCurrentWeekStart(newWeekStart);\n      setSelectedDate(format(newWeekStart, 'yyyy-MM-dd'));\n      setCurrentMonth(format(newWeekStart, 'yyyy-MM'));\n    } else if (viewType === 'month' || viewType === 'timeline') {\n      // Previous month - ensure proper update with first day of month\n    const prevMonth = subMonths(new Date(currentMonth + '-01'), 1);\n      const prevMonthStr = format(prevMonth, 'yyyy-MM');\n      setCurrentMonth(prevMonthStr);\n      setSelectedDate(prevMonthStr + '-01'); // Select first day of previous month\n    } else if (viewType === 'year') {\n      // Previous year\n      const currentYear = parseInt(currentMonth.split('-')[0]);\n      const newYear = (currentYear - 1).toString();\n      const newMonth = currentMonth.split('-')[1];\n      setCurrentMonth(`${newYear}-${newMonth}`);\n    }\n  };\n  \n  // Navigate to next month or week\n  const goToNext = () => {\n    if (viewType === 'week') {\n      // Next week\n      const newWeekStart = addWeeks(currentWeekStart, 1);\n      setCurrentWeekStart(newWeekStart);\n      setSelectedDate(format(newWeekStart, 'yyyy-MM-dd'));\n      setCurrentMonth(format(newWeekStart, 'yyyy-MM'));\n    } else if (viewType === 'month' || viewType === 'timeline') {\n      // Next month - ensure proper update with first day of month\n    const nextMonth = addMonths(new Date(currentMonth + '-01'), 1);\n      const nextMonthStr = format(nextMonth, 'yyyy-MM');\n      setCurrentMonth(nextMonthStr);\n      setSelectedDate(nextMonthStr + '-01'); // Select first day of next month\n    } else if (viewType === 'year') {\n      // Next year\n      const currentYear = parseInt(currentMonth.split('-')[0]);\n      const newYear = (currentYear + 1).toString();\n      const newMonth = currentMonth.split('-')[1];\n      setCurrentMonth(`${newYear}-${newMonth}`);\n    }\n  };\n  \n  // Navigate to today\n  const goToToday = () => {\n    const today = new Date();\n    setSelectedDate(format(today, 'yyyy-MM-dd'));\n    setCurrentMonth(format(today, 'yyyy-MM'));\n    setCurrentWeekStart(startOfWeek(today));\n    setViewType('today');\n  };\n  \n  // Update currentWeekStart when viewType changes to 'week'\n  useEffect(() => {\n    if (viewType === 'week') {\n      setCurrentWeekStart(startOfWeek(new Date(selectedDate)));\n    }\n  }, [viewType, selectedDate]);\n  \n  // Enhanced marked dates with multi-dot support\n  useEffect(() => {\n    const newMarkedDates: MarkedDates = {};\n    \n    // Group tasks by date and priority\n    const tasksByDate: Record<string, Record<string, number>> = {};\n    \n    taskStoreTasks.forEach(task => {\n      if (!task.dueDate) return;\n      \n      try {\n        const dateString = format(new Date(task.dueDate), 'yyyy-MM-dd');\n        \n        if (!tasksByDate[dateString]) {\n          tasksByDate[dateString] = { high: 0, medium: 0, low: 0 };\n        }\n        \n        // Count tasks by priority\n        tasksByDate[dateString][task.priority as keyof typeof tasksByDate[string]]++;\n      } catch (error) {\n        console.error('Error processing task date:', error);\n      }\n    });\n    \n    // Create marked dates with dots for each priority that has tasks\n    Object.entries(tasksByDate).forEach(([dateString, priorities]) => {\n      const dots = [];\n      \n      if (priorities.high > 0) {\n        dots.push({ key: 'high', color: theme.colors.error });\n      }\n      \n      if (priorities.medium > 0) {\n        dots.push({ key: 'medium', color: theme.colors.warning });\n      }\n      \n      if (priorities.low > 0) {\n        dots.push({ key: 'low', color: theme.colors.success });\n      }\n      \n      newMarkedDates[dateString] = {\n        marked: true,\n        dots\n      };\n    });\n    \n    // Add selected date indicator\n    newMarkedDates[selectedDate] = {\n      ...newMarkedDates[selectedDate],\n      selected: true,\n      selectedColor: theme.colors.primary + '40',  // Semi-transparent for better dot visibility\n    };\n    \n    setMarkedDates(newMarkedDates);\n  }, [taskStoreTasks, selectedDate, theme]);\n  \n  // Update displayed tasks when selected date changes\n  useEffect(() => {\n    const filteredTasks = taskStoreTasks.filter(task => {\n      if (!task.dueDate) return false;\n      \n      try {\n        // Ensure dueDate is a valid Date object\n        const taskDate = new Date(task.dueDate);\n        \n        // Skip if invalid date\n        if (isNaN(taskDate.getTime())) return false;\n        \n        return format(taskDate, 'yyyy-MM-dd') === selectedDate;\n      } catch (error) {\n        console.error('Error comparing task date:', error);\n        return false;\n      }\n    });\n    \n    // Sort tasks: pending first, then by priority, then by title\n    const sortedTasks = [...filteredTasks].sort((a, b) => {\n      // First sort by completion status\n      if (a.completed && !b.completed) return 1;\n      if (!a.completed && b.completed) return -1;\n      \n      // Then sort by priority\n      const priorityOrder = { high: 0, medium: 1, low: 2 };\n      const priorityDiff = priorityOrder[a.priority as keyof typeof priorityOrder] - priorityOrder[b.priority as keyof typeof priorityOrder];\n      if (priorityDiff !== 0) return priorityDiff;\n      \n      // Then sort by title\n      return a.title.localeCompare(b.title);\n    });\n    \n    setTasksForSelectedDate(sortedTasks);\n  }, [taskStoreTasks, selectedDate]);\n  \n  // Load tasks for the week/month view\n  useEffect(() => {\n    // Get start and end of month\n    const monthStart = startOfMonth(new Date(currentMonth + '-01'));\n    const monthEnd = endOfMonth(monthStart);\n    \n    // Get all days in the month\n    const daysInMonth = eachDayOfInterval({ start: monthStart, end: monthEnd });\n    \n    // Group tasks by date\n    const tasksByDate: {[date: string]: Task[]} = {};\n    \n    // Initialize all days with empty arrays\n    daysInMonth.forEach(day => {\n      const dateStr = format(day, 'yyyy-MM-dd');\n      tasksByDate[dateStr] = [];\n    });\n    \n    // Add tasks to their respective dates\n    taskStoreTasks.forEach(task => {\n      if (!task.dueDate) return;\n      \n      try {\n        const dateString = format(new Date(task.dueDate), 'yyyy-MM-dd');\n        \n        // Only include dates within our month range\n        if (tasksByDate[dateString]) {\n          tasksByDate[dateString].push(task);\n        }\n      } catch (error) {\n        console.error('Error processing task date for week view:', error);\n      }\n    });\n    \n    // Sort tasks for each date\n    Object.keys(tasksByDate).forEach(date => {\n      tasksByDate[date].sort((a, b) => {\n        // First sort by completion status\n        if (a.completed && !b.completed) return 1;\n        if (!a.completed && b.completed) return -1;\n        \n        // Then sort by priority\n        const priorityOrder = { high: 0, medium: 1, low: 2 };\n        const priorityDiff = priorityOrder[a.priority as keyof typeof priorityOrder] - priorityOrder[b.priority as keyof typeof priorityOrder];\n        if (priorityDiff !== 0) return priorityDiff;\n        \n        // Then sort by title\n        return a.title.localeCompare(b.title);\n      });\n    });\n    \n    setWeekTasks(tasksByDate);\n  }, [taskStoreTasks, currentMonth]);\n  \n  // Handle date selection\n  const handleDateSelect = (day: any) => {\n    setSelectedDate(day.dateString);\n  };\n  \n  // Format the date for display\n  const formatDisplayDate = (dateString: string) => {\n    const date = new Date(dateString);\n    \n    if (isToday(date)) {\n      return 'Today, ' + format(date, 'MMMM d, yyyy');\n    }\n    \n    return format(date, 'EEEE, MMMM d, yyyy');\n  };\n  \n  // Handle task completion toggle\n  const handleToggleTask = (taskId: string) => {\n    if (onToggleCompletion) {\n      onToggleCompletion(taskId);\n    }\n  };\n  \n  // Handle add task button press\n  const handleAddTask = () => {\n    if (onAddTask) {\n      onAddTask(selectedDate);\n    }\n  };\n  \n  // Render a task item\n  const renderTaskItem = ({ item }: { item: Task }) => {\n    const priorityColors = {\n      high: theme.colors.error,\n      medium: theme.colors.warning,\n      low: theme.colors.success\n    };\n    \n    return (\n      <TouchableOpacity\n        key={item.id}\n        style={[\n          styles.taskItem,\n          { backgroundColor: theme.colors.surface }\n        ]}\n        onPress={() => {\n          console.log('Task item pressed:', item.id);\n          if (onTaskPress) {\n            onTaskPress(item.id);\n          }\n        }}\n      >\n        <View style={styles.taskContent}>\n          <View style={styles.taskHeader}>\n            <Text \n              style={[\n                styles.taskTitle,\n                { color: theme.colors.text }\n              ]}\n              numberOfLines={1}\n            >\n              {item.title}\n            </Text>\n            <View style={styles.taskActions}>\n              <IconButton\n                icon=\"pencil\"\n                size={20}\n                onPress={() => {\n                  console.log('Edit button pressed for task:', item.id);\n                  if (onTaskPress) {\n                    onTaskPress(item.id);\n                  }\n                }}\n              />\n              <IconButton\n                icon=\"dots-vertical\"\n                size={20}\n                onPress={(e) => {\n                  console.log('Menu button pressed for task:', item.id);\n                  setSelectedTaskId(item.id);\n                  setMenuVisible(true);\n                  // Get the position of the menu button\n                  const { pageX, pageY } = e.nativeEvent;\n                  setMenuAnchor({ x: pageX, y: pageY });\n                }}\n              />\n            </View>\n          </View>\n          \n          {item.description && (\n            <Text \n              style={[\n                styles.taskDescription,\n                { color: theme.colors.text + '80' }\n              ]}\n              numberOfLines={2}\n            >\n              {item.description}\n            </Text>\n          )}\n          \n          <View style={styles.taskFooter}>\n            <Chip \n              icon={item.completed ? \"check\" : \"clock-outline\"}\n              onPress={() => {\n                console.log('Toggle completion for task:', item.id);\n                if (onToggleCompletion) {\n                  onToggleCompletion(item.id);\n                }\n              }}\n              style={[\n                styles.statusChip,\n                { \n                  backgroundColor: item.completed \n                    ? theme.colors.success \n                    : theme.colors.surfaceVariant \n                }\n              ]}\n              textStyle={{ color: item.completed ? '#fff' : theme.colors.text }}\n            >\n              {item.completed ? \"Completed\" : \"Pending\"}\n            </Chip>\n            \n            <View \n              style={[\n                styles.priorityIndicator, \n                { backgroundColor: 'transparent' }\n              ]}\n            >\n              <MaterialIcons \n                name={\n                  item.priority === 'high' ? \"priority-high\" : \n                  item.priority === 'medium' ? \"drag-handle\" : \n                  \"arrow-downward\"\n                } \n                size={20} \n                color={priorityColors[item.priority as keyof typeof priorityColors]} \n              />\n            </View>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n  \n  // Get week dates for week view\n  const getWeekDates = () => {\n    const weekEnd = endOfWeek(currentWeekStart);\n    return getDatesBetween({ start: currentWeekStart, end: weekEnd });\n  };\n\n  // Change view type with animation\n  const changeViewType = (newViewType: CalendarViewType) => {\n    // Don't animate if the same view\n    if (newViewType === viewType) return;\n    \n    // Fade out\n    Animated.timing(viewTransition, {\n      toValue: 0,\n      duration: 150,\n      useNativeDriver: true\n    }).start(() => {\n      setViewType(newViewType);\n      \n      // Fade in\n      Animated.timing(viewTransition, {\n        toValue: 1,\n        duration: 150,\n        useNativeDriver: true\n      }).start();\n    });\n  };\n  \n  // Get hours for timeline view\n  const getTimelineHours = () => {\n    const hours = [];\n    for (let i = 0; i < 24; i++) {\n      hours.push(i);\n    }\n    return hours;\n  };\n  \n  // Get tasks for a specific hour\n  const getTasksForHour = (hour: number) => {\n    return tasksForSelectedDate.filter(task => {\n      if (!task.dueTime) return false;\n      try {\n        const [taskHour] = task.dueTime.split(':').map(Number);\n        return taskHour === hour;\n      } catch (error) {\n        return false;\n      }\n    });\n  };\n  \n  // Render task in timeline\n  const renderTimelineTask = (task: Task) => {\n    const priorityColors = {\n      high: theme.colors.error,\n      medium: theme.colors.warning,\n      low: theme.colors.success\n    };\n    \n    return (\n      <TouchableOpacity\n        key={task?.id || `task-${Math.random().toString(36)}`}\n        style={[\n          styles.timelineTask,\n          {\n            backgroundColor: theme.colors.surface,\n            borderLeftColor: priorityColors[task.priority as keyof typeof priorityColors],\n            opacity: task.completed ? 0.7 : 1\n          }\n        ]}\n        onPress={() => onTaskPress && onTaskPress(task.id)}\n      >\n        <Text \n          style={[\n          styles.timelineTaskTitle, \n            { \n              color: theme.colors.text,\n              textDecorationLine: task.completed ? 'line-through' : 'none' \n            }\n          ]}\n          numberOfLines={1}\n        >\n          {task.title}\n        </Text>\n\n        <View style={styles.timelineTaskActions}>\n          {/* Priority icon */}\n          <MaterialIcons \n            name={\n              task.priority === 'high' ? \"priority-high\" : \n              task.priority === 'medium' ? \"drag-handle\" : \n              \"arrow-downward\"\n            } \n            size={16} \n            color={priorityColors[task.priority as keyof typeof priorityColors]} \n            style={{ marginRight: 8 }}\n          />\n          \n          <TouchableOpacity\n            style={[\n              styles.timelineCheckbox,\n              { borderColor: theme.colors.outline || theme.colors.text + '40' },\n              task.completed && { backgroundColor: theme.colors.success }\n            ]}\n            onPress={() => handleToggleTask(task.id)}\n          >\n            {task.completed && (\n              <MaterialIcons name=\"done\" size={12} color=\"#fff\" />\n            )}\n          </TouchableOpacity>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n  \n  // Render calendar based on selected view type\n  const renderCalendarView = () => {\n    switch(viewType) {\n      case 'year':\n        return (\n          <View style={styles.yearViewContainer}>\n            <ScrollView showsVerticalScrollIndicator={false}>\n              <Text style={[styles.yearTitle, { color: theme.colors.text }]}>\n                {format(new Date(currentMonth + '-01'), 'yyyy')}\n              </Text>\n              \n              <View style={styles.yearMonthsGrid}>\n                {Array.from({ length: 12 }, (_, i) => {\n                  const monthDate = new Date(parseInt(currentMonth.split('-')[0]), i, 1);\n                  const monthStr = format(monthDate, 'MMM');\n                  const formattedMonthDate = format(monthDate, 'yyyy-MM');\n                  \n                  // Check if this is the current month (today)\n                  const isCurrentMonth = i === new Date().getMonth() && \n                                        parseInt(currentMonth.split('-')[0]) === new Date().getFullYear();\n                  \n                  // Check if this is the selected month in the calendar\n                  const isSelectedMonth = formattedMonthDate === currentMonth;\n                  \n                  return (\n                    <TouchableOpacity\n                      key={i}\n                      style={[\n                        styles.yearMonth,\n                        isCurrentMonth && { \n                          backgroundColor: theme.colors.primary + '20',\n                          borderColor: theme.colors.primary \n                        },\n                        isSelectedMonth && !isCurrentMonth && { \n                          backgroundColor: theme.colors.secondary + '20',\n                          borderColor: theme.colors.secondary,\n                          borderWidth: 2\n                        }\n                      ]}\n                      onPress={() => {\n                        setCurrentMonth(format(monthDate, 'yyyy-MM'));\n                        changeViewType('month');\n                      }}\n                    >\n                      <Text \n                        style={[\n                          styles.yearMonthText, \n                          { \n                            color: isCurrentMonth \n                              ? theme.colors.primary \n                              : isSelectedMonth \n                                ? theme.colors.secondary \n                                : theme.colors.text,\n                            fontWeight: (isCurrentMonth || isSelectedMonth) ? 'bold' : 'normal'\n                          }\n                        ]}\n                      >\n                        {monthStr}\n                      </Text>\n                    </TouchableOpacity>\n                  );\n                })}\n              </View>\n            </ScrollView>\n          </View>\n        );\n        \n      case 'week':\n        return (\n          <View style={{flex: 1}}>\n            <View style={styles.weekViewContainer}>\n              <View style={styles.weekHeader}>\n                <Text style={[styles.weekTitle, { color: theme.colors.text }]}>\n                  {format(getWeekDates()[0], 'MMM d')} - {format(getWeekDates()[6], 'MMM d, yyyy')}\n                </Text>\n              </View>\n              \n              <ScrollView \n                horizontal \n                showsHorizontalScrollIndicator={false}\n                contentContainerStyle={styles.weekDaysContainer}\n              >\n                {getWeekDates().map((date) => {\n                  const dateStr = format(date, 'yyyy-MM-dd');\n                  const isSelected = dateStr === selectedDate;\n                  const dayTasks = weekTasks[dateStr] || [];\n                  const hasHighPriority = dayTasks.some(task => task.priority === 'high' && !task.completed);\n                  const hasMediumPriority = dayTasks.some(task => task.priority === 'medium' && !task.completed);\n                  const hasLowPriority = dayTasks.some(task => task.priority === 'low' && !task.completed);\n                  \n                  return (\n                    <TouchableOpacity \n                      key={dateStr || `day-${Math.random().toString(36)}`}\n                      style={[\n                        styles.weekDay,\n                        isSelected && { borderColor: theme.colors.primary }\n                      ]}\n                      onPress={() => {\n                        setSelectedDate(dateStr);\n                      }}\n                    >\n                      <Text style={[\n                        styles.weekDayName, \n                        { \n                          color: isToday(date) ? theme.colors.primary : theme.colors.text,\n                          fontWeight: isToday(date) ? 'bold' : '400'\n                        }\n                      ]}>\n                        {format(date, 'EEE')}\n                      </Text>\n                      \n                      <View style={[\n                        styles.weekDayNumber, \n                        isToday(date) && { \n                          backgroundColor: theme.colors.primary,\n                          borderRadius: 16,\n                          width: 32,\n                          height: 32,\n                          justifyContent: 'center',\n                          alignItems: 'center',\n                        }\n                      ]}>\n                        <Text style={[\n                          styles.weekDayNumberText,\n                          { \n                            color: isToday(date) ? 'white' : theme.colors.text,\n                            fontWeight: isSelected ? 'bold' : 'normal'\n                          }\n                        ]}>\n                          {format(date, 'd')}\n                        </Text>\n                      </View>\n                      \n                      <View style={styles.weekDayDotsContainer}>\n                        {hasHighPriority && (\n                          <View style={[styles.weekDayDot, { backgroundColor: theme.colors.error }]} />\n                        )}\n                        {hasMediumPriority && (\n                          <View style={[styles.weekDayDot, { backgroundColor: theme.colors.warning }]} />\n                        )}\n                        {hasLowPriority && (\n                          <View style={[styles.weekDayDot, { backgroundColor: theme.colors.success }]} />\n                        )}\n                      </View>\n                      \n                      <Text style={[styles.weekDayTaskCount, { color: theme.colors.text }]}>\n                        {dayTasks.length > 0 ? `${dayTasks.length} task${dayTasks.length > 1 ? 's' : ''}` : 'No tasks'}\n                      </Text>\n                    </TouchableOpacity>\n                  );\n                })}\n              </ScrollView>\n            </View>\n            \n            <View style={[styles.taskListContainer, {marginTop: 0, flex: 1}]}>\n              <View style={styles.dateHeaderContainer}>\n                <Text style={[styles.dateHeader, { color: theme.colors.text }]}>\n                  {formatDisplayDate(selectedDate)}\n                </Text>\n                \n                <TouchableOpacity \n                  style={[styles.addButton, { backgroundColor: theme.colors.primary }]}\n                  onPress={handleAddTask}\n                >\n                  <MaterialIcons name=\"add\" size={18} color=\"#fff\" />\n                  <Text style={styles.addButtonText}>Add Task</Text>\n                </TouchableOpacity>\n              </View>\n              \n              {tasksForSelectedDate.length > 0 ? (\n                <FlatList\n                  data={tasksForSelectedDate}\n                  renderItem={renderTaskItem}\n                  keyExtractor={(item) => item?.id || `cal-task-${Math.random().toString(36)}`}\n                  style={styles.taskList}\n                  contentContainerStyle={{ paddingBottom: 80 }}\n                  showsVerticalScrollIndicator={false}\n                />\n              ) : (\n                <View style={styles.emptyState}>\n                  <Text style={[styles.emptyText, { color: theme.colors.secondary || theme.colors.text + '80' }]}>\n                    No tasks scheduled for this day\n                  </Text>\n                  <TouchableOpacity \n                    style={[styles.addTaskButton, { backgroundColor: theme.colors.primary }]}\n                    onPress={handleAddTask}\n                  >\n                    <Text style={styles.addTaskButtonText}>Add Task for This Day</Text>\n                  </TouchableOpacity>\n                </View>\n              )}\n            </View>\n          </View>\n        );\n      \n      case 'today': {\n        const today = new Date();\n        const todayStr = format(today, 'yyyy-MM-dd');\n        \n        // Filter tasks directly instead of using weekTasks\n        const todayTasks = taskStoreTasks.filter(task => {\n          if (!task.dueDate) return false;\n          \n          try {\n            const taskDate = new Date(task.dueDate);\n            return format(taskDate, 'yyyy-MM-dd') === todayStr;\n          } catch (error) {\n            console.error('Error comparing task date:', error);\n            return false;\n          }\n        }).sort((a, b) => {\n          // First sort by completion status\n          if (a.completed && !b.completed) return 1;\n          if (!a.completed && b.completed) return -1;\n          \n          // Then sort by priority\n          const priorityOrder = { high: 0, medium: 1, low: 2 };\n          const priorityDiff = priorityOrder[a.priority as keyof typeof priorityOrder] - priorityOrder[b.priority as keyof typeof priorityOrder];\n          if (priorityDiff !== 0) return priorityDiff;\n          \n          // Then sort by title\n          return a.title.localeCompare(b.title);\n        });\n\n        // Debug - log tasks count\n        console.log('Today tasks count:', todayTasks.length);\n        if (todayTasks.length > 0) {\n          console.log('First task:', todayTasks[0].title);\n        }\n\n        return (\n          <View style={[styles.todayViewContainer, { flex: 1 }]}>\n            <View style={styles.todayHeader}>\n              <MaterialIcons name=\"today\" size={24} color={theme.colors.primary} />\n              <Text style={[styles.todayHeaderText, { color: theme.colors.text }]}>\n                Today's Schedule\n              </Text>\n            </View>\n            \n            {todayTasks.length > 0 ? (\n              <FlatList\n                data={todayTasks}\n                renderItem={renderTaskItem}\n                keyExtractor={(item) => item?.id || `cal-task-${Math.random().toString(36)}`}\n                style={[styles.todayTaskList, { flex: 1 }]}\n                contentContainerStyle={{ paddingBottom: 100 }}\n                showsVerticalScrollIndicator={false}\n                ListHeaderComponent={() => (\n                  <View style={styles.todayInfoContainer}>\n                    <Text style={[styles.todayDateText, { color: theme.colors.text }]}>\n                      {format(today, 'EEEE, MMMM d, yyyy')}\n                    </Text>\n                    <View style={styles.todayTaskStats}>\n                      <View style={styles.todayStatItem}>\n                        <Text style={[styles.todayStatNumber, { color: theme.colors.primary }]}>\n                          {todayTasks.length}\n                        </Text>\n                        <Text style={[styles.todayStatLabel, { color: theme.colors.text }]}>\n                          Tasks\n                        </Text>\n                      </View>\n                      <View style={styles.todayStatItem}>\n                        <Text style={[styles.todayStatNumber, { color: theme.colors.success }]}>\n                          {todayTasks.filter(t => t.completed).length}\n                        </Text>\n                        <Text style={[styles.todayStatLabel, { color: theme.colors.text }]}>\n                          Completed\n                        </Text>\n                      </View>\n                      <View style={styles.todayStatItem}>\n                        <Text style={[styles.todayStatNumber, { color: theme.colors.error }]}>\n                          {todayTasks.filter(t => !t.completed).length}\n                        </Text>\n                        <Text style={[styles.todayStatLabel, { color: theme.colors.text }]}>\n                          Pending\n                        </Text>\n                      </View>\n                    </View>\n                  </View>\n                )}\n              />\n            ) : (\n              <View style={[styles.emptyState, { flex: 1 }]}>\n                <Text style={[styles.emptyText, { color: theme.colors.secondary || theme.colors.text + '80' }]}>\n                  No tasks scheduled for today\n                </Text>\n                <TouchableOpacity \n                  style={[styles.addTaskButton, { backgroundColor: theme.colors.primary }]}\n                  onPress={() => onAddTask && onAddTask(todayStr)}\n                >\n                  <Text style={styles.addTaskButtonText}>Add Task for Today</Text>\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        );\n      }\n      \n      case 'timeline':\n        // Get start and end of month for timeline\n        const monthStart = startOfMonth(new Date(currentMonth + '-01'));\n        const monthEnd = endOfMonth(monthStart);\n        \n        // Get all days in the month that have tasks\n        const daysWithTasks = Object.keys(weekTasks)\n          .filter(dateStr => weekTasks[dateStr] && weekTasks[dateStr].length > 0)\n          .sort((a, b) => new Date(a).getTime() - new Date(b).getTime());\n        \n        return (\n          <View style={[styles.timelineViewContainer, { flex: 1 }]}>\n            <Text style={[styles.viewTitle, { color: theme.colors.text }]}>\n              {format(new Date(currentMonth + '-01'), 'MMMM yyyy')} Timeline\n            </Text>\n            \n            <ScrollView \n              style={[styles.timelineScroll, { flex: 1 }]} \n              showsVerticalScrollIndicator={false} \n              contentContainerStyle={{ paddingBottom: 80 }}\n            >\n              {daysWithTasks.length > 0 ? (\n                daysWithTasks.map((dateStr, index) => {\n                  const date = new Date(dateStr);\n                  const dayTasks = weekTasks[dateStr] || [];\n                  \n                  // Skip days with no tasks\n                  if (!dayTasks.length) return null;\n                  \n                  return (\n                    <View key={`day-${dateStr}-${index}`} style={{ marginBottom: 16 }}>\n                      <TouchableOpacity \n                        style={[\n                          styles.timelineDateHeader, \n                          { \n                            backgroundColor: theme.colors.surface, \n                            borderLeftColor: isToday(date) ? theme.colors.primary : 'transparent',\n                            borderLeftWidth: isToday(date) ? 4 : 0,\n                            paddingLeft: isToday(date) ? 12 : 16\n                          }\n                        ]}\n                        onPress={() => {\n                          setSelectedDate(dateStr);\n                          changeViewType('month');\n                        }}\n                      >\n                        <Text style={[styles.timelineDateText, { \n                          color: theme.colors.text,\n                          fontWeight: isToday(date) ? 'bold' : 'normal'\n                        }]}>\n                          {format(date, 'EEEE, MMMM d')}\n                          {isToday(date) && ' (Today)'}\n                        </Text>\n                        <Text style={{ color: theme.colors.text, opacity: 0.7, fontSize: 14 }}>\n                          {dayTasks.length} task{dayTasks.length !== 1 ? 's' : ''}\n                        </Text>\n                      </TouchableOpacity>\n                      \n                      {/* Group tasks by hour */}\n                      {dayTasks\n                        .sort((a, b) => {\n                          // Sort by time if available\n                          if (a.dueTime && b.dueTime) {\n                            return a.dueTime.localeCompare(b.dueTime);\n                          }\n                          // Then by priority\n                          const priorityOrder = { high: 0, medium: 1, low: 2 };\n                          return (\n                            priorityOrder[a.priority as keyof typeof priorityOrder] - \n                            priorityOrder[b.priority as keyof typeof priorityOrder]\n                          );\n                        })\n                        .map(task => {\n                          const timeDisplay = task.dueTime \n                            ? format(new Date(`2000-01-01T${task.dueTime}`), 'h:mm a') \n                            : 'All day';\n                          \n                          return (\n                            <View key={`task-${task.id || Math.random().toString(36)}`} style={{ marginLeft: 70 }}>\n                              <View style={{ \n                                flexDirection: 'row', \n                                alignItems: 'center',\n                                marginBottom: 4 \n                              }}>\n                                <Text style={{ \n                                  color: theme.colors.text, \n                                  fontSize: 12, \n                                  width: 70, \n                                  opacity: 0.7,\n                                  marginLeft: -70\n                                }}>\n                                  {timeDisplay}\n                                </Text>\n                                {renderTimelineTask(task)}\n                              </View>\n                            </View>\n                          );\n                        })\n                      }\n                    </View>\n                  );\n                })\n              ) : (\n                <View style={styles.emptyState}>\n                  <Text style={[styles.emptyText, { color: theme.colors.secondary || theme.colors.text + '80' }]}>\n                    No tasks scheduled for {format(new Date(currentMonth + '-01'), 'MMMM yyyy')}\n                  </Text>\n                  <TouchableOpacity \n                    style={[styles.addTaskButton, { backgroundColor: theme.colors.primary }]}\n                    onPress={() => onAddTask && onAddTask(format(new Date(), 'yyyy-MM-dd'))}\n                  >\n                    <Text style={styles.addTaskButtonText}>Add New Task</Text>\n                  </TouchableOpacity>\n                </View>\n              )}\n            </ScrollView>\n          </View>\n        );\n      \n      case 'month':\n      default:\n        return (\n          <View style={styles.calendarContainer}>\n            <View style={styles.calendarWrapper}>\n              <Calendar\n                key={currentMonth}\n                style={styles.calendar}\n                theme={{\n                  calendarBackground: theme.colors.surface,\n                  textSectionTitleColor: theme.colors.text,\n                  selectedDayBackgroundColor: theme.colors.primary,\n                  selectedDayTextColor: '#fff',\n                  todayTextColor: theme.colors.primary,\n                  dayTextColor: theme.colors.text,\n                  textDisabledColor: theme.colors.text + '40',\n                  dotColor: theme.colors.primary,\n                  selectedDotColor: '#fff',\n                  arrowColor: theme.colors.primary,\n                  monthTextColor: theme.colors.text,\n                  indicatorColor: theme.colors.primary,\n                  textDayFontWeight: '300',\n                  textMonthFontWeight: 'bold',\n                  textDayHeaderFontWeight: '300',\n                  textDayFontSize: 14,\n                  textMonthFontSize: 16,\n                  textDayHeaderFontSize: 14,\n                  'stylesheet.calendar.header': {\n                    header: {\n                      height: 0,\n                      opacity: 0,\n                      paddingTop: 0,\n                      paddingBottom: 0\n                    }\n                  } as any,\n                  'stylesheet.calendar.main': {\n                    week: {\n                      marginTop: 2,\n                      marginBottom: 2,\n                      flexDirection: 'row',\n                      justifyContent: 'space-around'\n                    }\n                  } as any\n                }}\n                hideArrows={true}\n                renderHeader={() => null}\n                markingType={'multi-dot'}\n                markedDates={markedDates}\n                onDayPress={handleDateSelect}\n                enableSwipeMonths={true}\n                current={currentMonth + '-01'}\n                onMonthChange={(month: DateData) => {\n                  setCurrentMonth(month.dateString.substring(0, 7));\n                }}\n              />\n            </View>\n            \n            {/* Legend/Color Guide */}\n            <View style={styles.legendRow}>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendDot, { backgroundColor: theme.colors.error }]} />\n                <Text style={[styles.legendText, { color: theme.colors.text }]}>High</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendDot, { backgroundColor: theme.colors.warning }]} />\n                <Text style={[styles.legendText, { color: theme.colors.text }]}>Medium</Text>\n              </View>\n              <View style={styles.legendItem}>\n                <View style={[styles.legendDot, { backgroundColor: theme.colors.success }]} />\n                <Text style={[styles.legendText, { color: theme.colors.text }]}>Low</Text>\n              </View>\n            </View>\n          </View>\n        );\n    }\n  };\n  \n  return (\n    <View style={styles.container}>\n      {viewType !== 'today' && viewType !== 'timeline' && (\n        <View style={styles.calendarHeader}>\n          <TouchableOpacity onPress={goToPrevious}>\n            <MaterialIcons name=\"chevron-left\" size={24} color={theme.colors.text} />\n          </TouchableOpacity>\n          \n          {/* Press on header text shows year view */}\n          <TouchableOpacity onPress={() => {\n            if (viewType !== 'year') {\n              changeViewType('year');\n            } else {\n              changeViewType('month');\n            }\n          }}>\n            <Text style={[styles.currentMonthText, { color: theme.colors.text }]}>\n              {viewType === 'week' \n                ? `${format(currentWeekStart, 'MMM d')} - ${format(endOfWeek(currentWeekStart), 'MMM d, yyyy')}`\n                : format(new Date(currentMonth + '-01'), 'MMMM yyyy')\n              }\n              {viewType === 'month' && (\n                <MaterialIcons \n                  name={isCalendarExpanded ? \"expand-less\" : \"expand-more\"} \n                  size={18} \n                  color={theme.colors.text}\n                  style={{ marginLeft: 4 }}\n                />\n              )}\n            </Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity onPress={goToNext}>\n            <MaterialIcons name=\"chevron-right\" size={24} color={theme.colors.text} />\n          </TouchableOpacity>\n        </View>\n      )}\n      \n      <Animated.View style={{ \n        flex: 1, \n        opacity: viewTransition,\n        marginBottom: 0,\n      }}>\n        {renderCalendarView()}\n      </Animated.View>\n      \n      {viewType !== 'today' && viewType !== 'year' && viewType !== 'week' && viewType !== 'timeline' && (\n        <View style={styles.taskListContainer}>\n          <View style={styles.dateHeaderContainer}>\n            <Text style={[styles.dateHeader, { color: theme.colors.text }]}>\n              {formatDisplayDate(selectedDate)}\n            </Text>\n            \n            {/* Add task button */}\n            <TouchableOpacity \n              style={[styles.addButton, { backgroundColor: theme.colors.primary }]}\n              onPress={handleAddTask}\n            >\n              <MaterialIcons name=\"add\" size={18} color=\"#fff\" />\n              <Text style={styles.addButtonText}>Add Task</Text>\n            </TouchableOpacity>\n          </View>\n          \n          {tasksForSelectedDate.length > 0 ? (\n            <FlatList\n              data={tasksForSelectedDate}\n              renderItem={renderTaskItem}\n              keyExtractor={(item) => item?.id || `cal-task-${Math.random().toString(36)}`}\n              style={styles.taskList}\n              contentContainerStyle={{ paddingBottom: 80 }}\n              showsVerticalScrollIndicator={false}\n            />\n          ) : (\n            <View style={styles.emptyState}>\n              <Text style={[styles.emptyText, { color: theme.colors.secondary || theme.colors.text + '80' }]}>\n                No tasks scheduled for this day\n              </Text>\n              <TouchableOpacity \n                style={[styles.addTaskButton, { backgroundColor: theme.colors.primary }]}\n                onPress={handleAddTask}\n              >\n                <Text style={styles.addTaskButtonText}>Add Task for This Day</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n        </View>\n      )}\n      \n      <View style={styles.viewSelectorContainer}>\n        <TouchableOpacity \n          style={[\n            styles.viewButton, \n            viewType === 'month' && { backgroundColor: theme.colors.primary + '30' }\n          ]}\n          onPress={() => changeViewType('month')}\n        >\n          <MaterialIcons name=\"calendar-view-month\" size={20} color={viewType === 'month' ? theme.colors.primary : theme.colors.text} />\n          <Text style={[\n            styles.viewButtonText, \n            { color: viewType === 'month' ? theme.colors.primary : theme.colors.text }\n          ]}>\n            Month\n          </Text>\n        </TouchableOpacity>\n      \n        <TouchableOpacity \n          style={[\n            styles.viewButton, \n            viewType === 'week' && { backgroundColor: theme.colors.primary + '30' }\n          ]}\n          onPress={() => changeViewType('week')}\n        >\n          <MaterialIcons name=\"view-week\" size={20} color={viewType === 'week' ? theme.colors.primary : theme.colors.text} />\n          <Text style={[\n            styles.viewButtonText, \n            { color: viewType === 'week' ? theme.colors.primary : theme.colors.text }\n          ]}>\n            Week\n          </Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity \n          style={[\n            styles.viewButton, \n            viewType === 'today' && { backgroundColor: theme.colors.primary + '30' }\n          ]}\n          onPress={() => changeViewType('today')}\n        >\n          <MaterialIcons name=\"today\" size={20} color={viewType === 'today' ? theme.colors.primary : theme.colors.text} />\n          <Text style={[\n            styles.viewButtonText, \n            { color: viewType === 'today' ? theme.colors.primary : theme.colors.text }\n          ]}>\n            Today\n          </Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity \n          style={[\n            styles.viewButton, \n            viewType === 'timeline' && { backgroundColor: theme.colors.primary + '30' }\n          ]}\n          onPress={() => changeViewType('timeline')}\n        >\n          <MaterialIcons name=\"timeline\" size={20} color={viewType === 'timeline' ? theme.colors.primary : theme.colors.text} />\n          <Text style={[\n            styles.viewButtonText, \n            { color: viewType === 'timeline' ? theme.colors.primary : theme.colors.text }\n          ]}>\n            Timeline\n          </Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity \n          style={[\n            styles.viewButton, \n            viewType === 'year' && { backgroundColor: theme.colors.primary + '30' }\n          ]}\n          onPress={() => changeViewType('year')}\n        >\n          <MaterialIcons name=\"calendar-today\" size={20} color={viewType === 'year' ? theme.colors.primary : theme.colors.text} />\n          <Text style={[\n            styles.viewButtonText, \n            { color: viewType === 'year' ? theme.colors.primary : theme.colors.text }\n          ]}>\n            Year\n          </Text>\n        </TouchableOpacity>\n      </View>\n      \n      <Portal>\n        <Menu\n          visible={menuVisible}\n          onDismiss={() => {\n            setMenuVisible(false);\n            setSelectedTaskId(null);\n            setMenuAnchor(null);\n          }}\n          anchor={menuAnchor ? { x: menuAnchor.x, y: menuAnchor.y } : { x: 0, y: 0 }}\n        >\n          {selectedTaskId && (\n            <>\n              <Menu.Item \n                onPress={() => {\n                  setMenuVisible(false);\n                  if (onTaskPress) {\n                    onTaskPress(selectedTaskId);\n                  }\n                }}\n                title=\"View Details\"\n                leadingIcon=\"eye\"\n              />\n              <Menu.Item \n                onPress={() => {\n                  setMenuVisible(false);\n                  if (onToggleCompletion) {\n                    onToggleCompletion(selectedTaskId);\n                  }\n                }}\n                title={tasks.find(t => t.id === selectedTaskId)?.completed ? \"Mark as Pending\" : \"Mark as Completed\"}\n                leadingIcon={tasks.find(t => t.id === selectedTaskId)?.completed ? \"clock-outline\" : \"check\"}\n              />\n              <Divider />\n              <Menu.Item \n                onPress={() => {\n                  setMenuVisible(false);\n                  if (onTaskPress) {\n                    onTaskPress(selectedTaskId);\n                  }\n                }}\n                title=\"Delete Task\"\n                leadingIcon=\"delete\"\n                titleStyle={{ color: theme.colors.error }}\n              />\n            </>\n          )}\n        </Menu>\n      </Portal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingBottom: 70,\n  },\n  calendarHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  currentMonthText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  calendarContainer: {\n    overflow: 'hidden',\n    marginBottom: 10,\n  },\n  calendarWrapper: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 4,\n  },\n  calendar: {\n    borderRadius: 10,\n    padding: 10,\n  },\n  legendRow: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    backgroundColor: 'white',\n    marginTop: 8,\n    borderRadius: 10,\n    paddingHorizontal: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    elevation: 2,\n  },\n  legendItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginHorizontal: 10,\n  },\n  legendDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginRight: 4,\n  },\n  legendText: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  viewSelectorContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(255, 255, 255, 0.95)',\n    paddingVertical: 12,\n    paddingBottom: 20,\n    borderTopWidth: 1,\n    borderTopColor: 'rgba(0,0,0,0.1)',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 10,\n    zIndex: 999,\n  },\n  viewButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 6,\n    paddingHorizontal: 8,\n    borderRadius: 20,\n  },\n  viewButtonText: {\n    fontSize: 14,\n    marginLeft: 4,\n    fontWeight: '500',\n  },\n  todayViewContainer: {\n    padding: 16,\n  },\n  weekViewContainer: {\n    padding: 0,\n    marginVertical: 0,\n    marginBottom: 0,\n  },\n  weekHeader: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginBottom: 0,\n  },\n  weekTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  weekDaysContainer: {\n    paddingHorizontal: 4,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  weekDay: {\n    width: 70,\n    height: 90,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginHorizontal: 1,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: 'rgba(0,0,0,0.1)',\n    padding: 5,\n  },\n  weekDayName: {\n    fontSize: 14,\n    marginBottom: 2,\n  },\n  weekDayNumber: {\n    marginBottom: 0,\n  },\n  weekDayNumberText: {\n    fontSize: 18,\n    fontWeight: '500',\n  },\n  weekDayDotsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 0,\n    marginTop: 2,\n  },\n  weekDayDot: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    marginHorizontal: 2,\n  },\n  weekDayTaskCount: {\n    fontSize: 10,\n    textAlign: 'center',\n    marginTop: 2,\n  },\n  timelineViewContainer: {\n    padding: 16,\n  },\n  viewTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  taskListContainer: {\n    flex: 1,\n  },\n  dateHeaderContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n    marginTop: 0,\n    paddingHorizontal: 16,\n  },\n  dateHeader: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  addButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    marginTop: 8,\n  },\n  addButtonText: {\n    color: 'white',\n    marginLeft: 4,\n    fontWeight: '500',\n  },\n  taskList: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingBottom: 80,\n    marginTop: 0,\n  },\n  taskItem: {\n    flexDirection: 'row',\n    borderRadius: 8,\n    marginBottom: 8,\n    padding: 12,\n    borderLeftWidth: 4,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n  },\n  taskContent: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  taskHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  taskTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 2,\n  },\n  taskActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  taskDescription: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  taskFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  statusChip: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 16,\n  },\n  priorityIndicator: {\n    width: 28,\n    height: 28,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    marginLeft: 8,\n  },\n  emptyState: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  emptyText: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  addTaskButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 20,\n    marginTop: 16,\n  },\n  addTaskButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  yearViewContainer: {\n    padding: 16,\n    flex: 1,\n  },\n  yearTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  yearMonthsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  yearMonth: {\n    width: '30%',\n    aspectRatio: 1.5,\n    margin: '1.5%',\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderWidth: 1,\n    borderColor: 'rgba(0,0,0,0.1)',\n  },\n  yearMonthText: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  todayHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  todayHeaderText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginLeft: 8,\n  },\n  todayDateText: {\n    fontSize: 16,\n    marginBottom: 12,\n  },\n  todayInfoContainer: {\n    marginBottom: 16,\n    padding: 16,\n    borderRadius: 12,\n    backgroundColor: 'rgba(0,0,0,0.03)',\n  },\n  todayTaskStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 8,\n  },\n  todayStatItem: {\n    alignItems: 'center',\n  },\n  todayStatNumber: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  todayStatLabel: {\n    fontSize: 14,\n    opacity: 0.7,\n  },\n  todayTaskList: {\n    flex: 1,\n  },\n  timelineScroll: {\n    flex: 1,\n  },\n  timelineDateHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 8,\n    borderRadius: 8,\n    marginBottom: 8,\n    borderLeftWidth: 4,\n    borderLeftColor: 'transparent',\n    paddingLeft: 16,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n  },\n  timelineDateText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  timelineTask: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 8,\n    borderRadius: 6,\n    marginBottom: 4,\n    borderLeftWidth: 3,\n    elevation: 1,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.05,\n    shadowRadius: 1,\n  },\n  timelineTaskTitle: {\n    fontSize: 14,\n    flex: 1,\n  },\n  timelineCheckbox: {\n    width: 18,\n    height: 18,\n    borderRadius: 3,\n    borderWidth: 1.5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 8,\n  },\n  timelineTaskActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n}); ","import React, { useState } from 'react';\nimport { View, StyleSheet, Modal } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../navigation/types';\nimport CalendarView from '../components/CalendarView';\nimport TaskDetail from '../components/TaskDetail';\nimport { Task } from '../types/Task';\nimport { useTaskStore } from '../stores/taskStore';\nimport TaskForm from '../components/TaskForm';\n\ntype CalendarScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nexport default function CalendarScreen() {\n  const theme = useTheme();\n  const navigation = useNavigation<CalendarScreenNavigationProp>();\n  const { tasks, updateTask, deleteTask } = useTaskStore();\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\n  const [showTaskForm, setShowTaskForm] = useState(false);\n  const [showTaskDetail, setShowTaskDetail] = useState(false);\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(undefined);\n\n  const handleTaskPress = (taskId: string) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      setSelectedTask(task);\n      setShowTaskDetail(true);\n    }\n  };\n\n  const handleTaskDelete = () => {\n    if (selectedTask) {\n      deleteTask(selectedTask.id);\n      setShowTaskDetail(false);\n      setSelectedTask(null);\n    }\n  };\n\n  const handleTaskUpdate = (updatedTask: Task) => {\n    updateTask(updatedTask);\n    setSelectedTask(updatedTask);\n  };\n\n  const handleToggleTaskCompletion = (taskId: string) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      const updatedTask = { ...task, completed: !task.completed };\n      updateTask(updatedTask);\n      if (selectedTask?.id === taskId) {\n        setSelectedTask(updatedTask);\n      }\n    }\n  };\n\n  const handleToggleSubtask = (taskId: string, subtaskId: string) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task && task.subtasks) {\n      const updatedSubtasks = task.subtasks.map(subtask => \n        subtask.id === subtaskId \n          ? { ...subtask, completed: !subtask.completed }\n          : subtask\n      );\n      const updatedTask = { ...task, subtasks: updatedSubtasks };\n      updateTask(updatedTask);\n      if (selectedTask?.id === taskId) {\n        setSelectedTask(updatedTask);\n      }\n    }\n  };\n\n  const handlePomodoro = () => {\n    if (selectedTask) {\n      setShowTaskDetail(false);\n      navigation.navigate('Pomodoro', { taskId: selectedTask.id });\n    }\n  };\n\n  const handleAddComment = () => {\n    if (selectedTask) {\n      setShowTaskDetail(false);\n      navigation.navigate('AddComment', { taskId: selectedTask.id });\n    }\n  };\n\n  const handleShare = () => {\n    if (selectedTask) {\n      setShowTaskDetail(false);\n      navigation.navigate('ShareTask', { taskId: selectedTask.id });\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <CalendarView\n        tasks={tasks}\n        onTaskPress={handleTaskPress}\n        onToggleCompletion={handleToggleTaskCompletion}\n        onAddTask={(date: string) => {\n          navigation.navigate('CreateTask', { date });\n        }}\n      />\n      \n      <Modal\n        visible={showTaskDetail}\n        animationType=\"slide\"\n        presentationStyle=\"pageSheet\"\n        onRequestClose={() => setShowTaskDetail(false)}\n      >\n        {selectedTask && (\n          <TaskDetail\n            task={selectedTask}\n            onBack={() => setShowTaskDetail(false)}\n            onEdit={() => {\n              setShowTaskDetail(false);\n              navigation.navigate('EditTask', { taskId: selectedTask.id });\n            }}\n            onDelete={handleTaskDelete}\n            onUpdate={handleTaskUpdate}\n            onToggleCompletion={handleToggleTaskCompletion}\n            onToggleSubtask={handleToggleSubtask}\n            onPomodoro={handlePomodoro}\n            onAddComment={handleAddComment}\n            onShare={handleShare}\n          />\n        )}\n      </Modal>\n\n      <Modal\n        visible={showTaskForm}\n        animationType=\"slide\"\n        presentationStyle=\"pageSheet\"\n        onRequestClose={() => {\n          setShowTaskForm(false);\n          setSelectedDate(undefined);\n        }}\n      >\n        <View style={[styles.modalContainer, { backgroundColor: theme.colors.surface }]}>\n          <TaskForm\n            task={selectedTask || undefined}\n            isVisible={showTaskForm}\n            onClose={() => {\n              setShowTaskForm(false);\n              setSelectedDate(undefined);\n            }}\n            onSave={async (taskData) => {\n              if (selectedTask) {\n                await handleTaskUpdate({ ...selectedTask, ...taskData });\n              } else if (selectedDate) {\n                // Create new task with selected date\n                const newTask: Task = {\n                  id: Date.now().toString(),\n                  title: taskData.title || '',\n                  description: taskData.description,\n                  dueDate: selectedDate.toISOString(),\n                  completed: false,\n                  createdAt: new Date().toISOString(),\n                  updatedAt: new Date().toISOString(),\n                  priority: taskData.priority,\n                  categoryId: taskData.categoryId,\n                  subtasks: taskData.subtasks || []\n                };\n                await handleTaskUpdate(newTask);\n              }\n            }}\n          />\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  modalContainer: {\n    flex: 1,\n  },\n});","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView } from 'react-native';\nimport { Text, Surface, useTheme } from 'react-native-paper';\nimport { format, startOfWeek, endOfWeek, eachDayOfInterval } from 'date-fns';\nimport databaseService from '../database/DatabaseService';\n\ntype TaskStats = {\n  total: number;\n  completed: number;\n  pending: number;\n  overdue: number;\n  highPriority: number;\n  mediumPriority: number;\n  lowPriority: number;\n  meetings: number;\n  completionRate: number;\n  averageCompletionTime: number;\n};\n\ntype DailyStats = {\n  date: string;\n  completed: number;\n  added: number;\n};\n\nexport default function StatsScreen() {\n  const [stats, setStats] = useState<TaskStats | null>(null);\n  const [weeklyStats, setWeeklyStats] = useState<DailyStats[]>([]);\n  const [loading, setLoading] = useState(true);\n  const theme = useTheme();\n\n  useEffect(() => {\n    loadStats();\n  }, []);\n\n  const loadStats = async () => {\n    try {\n      setLoading(true);\n\n      // Get overall task statistics\n      const overallStats = await databaseService.executeSql(`\n        SELECT \n          COUNT(*) as total,\n          SUM(CASE WHEN completed = 1 THEN 1 ELSE 0 END) as completed,\n          SUM(CASE WHEN completed = 0 THEN 1 ELSE 0 END) as pending,\n          SUM(CASE WHEN completed = 0 AND dueDate < datetime('now') THEN 1 ELSE 0 END) as overdue,\n          SUM(CASE WHEN priority = 'high' THEN 1 ELSE 0 END) as highPriority,\n          SUM(CASE WHEN priority = 'medium' THEN 1 ELSE 0 END) as mediumPriority,\n          SUM(CASE WHEN priority = 'low' THEN 1 ELSE 0 END) as lowPriority,\n          SUM(CASE WHEN isMeeting = 1 THEN 1 ELSE 0 END) as meetings,\n          AVG(CASE \n            WHEN completed = 1 \n            THEN julianday(updatedAt) - julianday(createdAt)\n            ELSE NULL \n          END) as avgCompletionDays\n        FROM tasks\n      `);\n\n      const row = overallStats.rows.item(0);\n      const completionRate = row.total > 0 ? (row.completed / row.total) * 100 : 0;\n\n      setStats({\n        total: row.total,\n        completed: row.completed,\n        pending: row.pending,\n        overdue: row.overdue,\n        highPriority: row.highPriority,\n        mediumPriority: row.mediumPriority,\n        lowPriority: row.lowPriority,\n        meetings: row.meetings,\n        completionRate,\n        averageCompletionTime: row.avgCompletionDays || 0,\n      });\n\n      // Get weekly statistics\n      const startDate = startOfWeek(new Date());\n      const endDate = endOfWeek(new Date());\n      const days = eachDayOfInterval({ start: startDate, end: endDate });\n\n      const weeklyData = await Promise.all(days.map(async (date) => {\n        const dateStr = format(date, 'yyyy-MM-dd');\n        const result = await databaseService.executeSql(`\n          SELECT\n            (SELECT COUNT(*) FROM tasks \n             WHERE date(createdAt) = date(?) AND completed = 1) as completed,\n            (SELECT COUNT(*) FROM tasks \n             WHERE date(createdAt) = date(?)) as added\n        `, [dateStr, dateStr]);\n\n        return {\n          date: dateStr,\n          completed: result.rows.item(0).completed,\n          added: result.rows.item(0).added,\n        };\n      }));\n\n      setWeeklyStats(weeklyData);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading stats:', error);\n      setLoading(false);\n    }\n  };\n\n  if (loading || !stats) {\n    return (\n      <View style={styles.centered}>\n        <Text>Loading statistics...</Text>\n      </View>\n    );\n  }\n\n  const renderStatCard = (title: string, value: number | string, subtitle?: string) => (\n    <Surface style={styles.statCard}>\n      <Text variant=\"titleLarge\" style={styles.statValue}>\n        {typeof value === 'number' && !isNaN(value) ? \n          value.toFixed(value % 1 === 0 ? 0 : 1) : \n          value}\n      </Text>\n      <Text variant=\"labelMedium\" style={styles.statTitle}>{title}</Text>\n      {subtitle && (\n        <Text variant=\"labelSmall\" style={styles.statSubtitle}>{subtitle}</Text>\n      )}\n    </Surface>\n  );\n\n  return (\n    <ScrollView style={styles.container}>\n      <Text variant=\"headlineSmall\" style={styles.sectionTitle}>Overview</Text>\n      <View style={styles.statsGrid}>\n        {renderStatCard('Total Tasks', stats.total)}\n        {renderStatCard('Completed', stats.completed)}\n        {renderStatCard('Pending', stats.pending)}\n        {renderStatCard('Overdue', stats.overdue)}\n      </View>\n\n      <Text variant=\"headlineSmall\" style={styles.sectionTitle}>Task Breakdown</Text>\n      <View style={styles.statsGrid}>\n        {renderStatCard('High Priority', stats.highPriority)}\n        {renderStatCard('Medium Priority', stats.mediumPriority)}\n        {renderStatCard('Low Priority', stats.lowPriority)}\n        {renderStatCard('Meetings', stats.meetings)}\n      </View>\n\n      <Text variant=\"headlineSmall\" style={styles.sectionTitle}>Performance</Text>\n      <View style={styles.statsGrid}>\n        {renderStatCard('Completion Rate', `${stats.completionRate.toFixed(1)}%`)}\n        {renderStatCard(\n          'Avg. Completion Time', \n          stats.averageCompletionTime.toFixed(1),\n          'days'\n        )}\n      </View>\n\n      <Text variant=\"headlineSmall\" style={styles.sectionTitle}>This Week</Text>\n      <Surface style={styles.weeklyChart}>\n        {weeklyStats.map((day, index) => (\n          <View key={day.date} style={styles.weekDay}>\n            <View style={styles.barContainer}>\n              <View style={[\n                styles.bar,\n                { \n                  height: `${(day.completed / Math.max(...weeklyStats.map(d => d.added))) * 100}%`,\n                  backgroundColor: theme.colors.primary\n                }\n              ]} />\n              <View style={[\n                styles.bar,\n                { \n                  height: `${(day.added / Math.max(...weeklyStats.map(d => d.added))) * 100}%`,\n                  backgroundColor: theme.colors.secondary,\n                  opacity: 0.5\n                }\n              ]} />\n            </View>\n            <Text variant=\"labelSmall\">\n              {format(new Date(day.date), 'EEE')}\n            </Text>\n          </View>\n        ))}\n      </Surface>\n      <View style={styles.chartLegend}>\n        <View style={styles.legendItem}>\n          <View style={[styles.legendDot, { backgroundColor: theme.colors.primary }]} />\n          <Text variant=\"labelSmall\">Completed</Text>\n        </View>\n        <View style={styles.legendItem}>\n          <View style={[styles.legendDot, { backgroundColor: theme.colors.secondary, opacity: 0.5 }]} />\n          <Text variant=\"labelSmall\">Added</Text>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  sectionTitle: {\n    marginBottom: 16,\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    marginBottom: 24,\n  },\n  statCard: {\n    flex: 1,\n    minWidth: '45%',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    elevation: 2,\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  statTitle: {\n    textAlign: 'center',\n    opacity: 0.7,\n  },\n  statSubtitle: {\n    marginTop: 4,\n    opacity: 0.5,\n  },\n  weeklyChart: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    height: 200,\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  weekDay: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  barContainer: {\n    height: 150,\n    width: 20,\n    justifyContent: 'flex-end',\n    marginBottom: 8,\n  },\n  bar: {\n    width: '100%',\n    borderRadius: 4,\n    position: 'absolute',\n    bottom: 0,\n  },\n  chartLegend: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    gap: 16,\n    marginBottom: 16,\n  },\n  legendItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  legendDot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, StyleSheet, ScrollView, Alert, Switch } from 'react-native';\nimport { Text, List, Divider, Button, Dialog, Portal, RadioButton, Card } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { SettingsScreenNavigationProp } from '../navigation/types';\nimport { useTaskStore } from '../stores/taskStore';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { ThemeMode } from '../theme/ThemeTypes';\n\nexport default function SettingsScreen() {\n  const navigation = useNavigation<SettingsScreenNavigationProp>();\n  const { tasks } = useTaskStore();\n  const { isDark, toggleTheme, setThemeMode, theme } = useTheme();\n  \n  const [notificationsEnabled, setNotificationsEnabled] = useState(true);\n  const [confirmDeleteEnabled, setConfirmDeleteEnabled] = useState(true);\n  const [defaultPriority, setDefaultPriority] = useState('medium');\n  const [showPriorityDialog, setShowPriorityDialog] = useState(false);\n  const [showConfirmResetDialog, setShowConfirmResetDialog] = useState(false);\n  const [showThemeModeDialog, setShowThemeModeDialog] = useState(false);\n\n  const handleToggleNotifications = () => {\n    setNotificationsEnabled(!notificationsEnabled);\n    // In a real app, you would store this preference\n  };\n\n  const handleToggleConfirmDelete = () => {\n    setConfirmDeleteEnabled(!confirmDeleteEnabled);\n    // In a real app, you would store this preference\n  };\n\n  const handleResetApp = () => {\n    // In a real app, you would implement actual data reset logic\n    Alert.alert('App Reset', 'All data has been reset successfully.');\n    setShowConfirmResetDialog(false);\n  };\n\n  const handleAbout = () => {\n    Alert.alert(\n      'About Task Manager',\n      'Version 1.0.0\\n\\nA simple and efficient task management app built with React Native and Expo.'\n    );\n  };\n\n  const renderStatCard = (title: string, value: string) => (\n    <Card style={[styles.statCard, { backgroundColor: theme.colors.card }]}>\n      <Card.Content>\n        <Text style={[styles.statTitle, { color: theme.colors.text }]}>{title}</Text>\n        <Text style={[styles.statValue, { color: theme.colors.primary }]}>{value}</Text>\n      </Card.Content>\n    </Card>\n  );\n\n  return (\n    <ScrollView style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <View style={styles.section}>\n        <List.Section>\n          <List.Subheader style={{ color: theme.colors.text }}>Appearance</List.Subheader>\n          <List.Item\n            title=\"Dark Mode\"\n            description={isDark ? \"On\" : \"Off\"}\n            left={props => <List.Icon {...props} icon=\"theme-light-dark\" />}\n            right={() => (\n              <Switch\n                value={isDark}\n                onValueChange={toggleTheme}\n                trackColor={{ false: \"#767577\", true: theme.colors.primary }}\n                thumbColor={isDark ? theme.colors.card : \"#f4f3f4\"}\n              />\n            )}\n            onPress={() => setShowThemeModeDialog(true)}\n          />\n        </List.Section>\n\n        <List.Section>\n          <List.Subheader style={{ color: theme.colors.text }}>Notifications</List.Subheader>\n          <List.Item\n            title=\"Enable Notifications\"\n            left={props => <List.Icon {...props} icon=\"bell\" />}\n            right={() => (\n              <Switch\n                value={notificationsEnabled}\n                onValueChange={handleToggleNotifications}\n                trackColor={{ false: \"#767577\", true: theme.colors.primary }}\n                thumbColor={notificationsEnabled ? theme.colors.card : \"#f4f3f4\"}\n              />\n            )}\n          />\n        </List.Section>\n\n        <List.Section>\n          <List.Subheader style={{ color: theme.colors.text }}>Task Settings</List.Subheader>\n          <List.Item\n            title=\"Confirm Before Delete\"\n            left={props => <List.Icon {...props} icon=\"trash-can\" />}\n            right={() => (\n              <Switch\n                value={confirmDeleteEnabled}\n                onValueChange={handleToggleConfirmDelete}\n                trackColor={{ false: \"#767577\", true: theme.colors.primary }}\n                thumbColor={confirmDeleteEnabled ? theme.colors.card : \"#f4f3f4\"}\n              />\n            )}\n          />\n          <List.Item\n            title=\"Default Priority\"\n            description={defaultPriority.charAt(0).toUpperCase() + defaultPriority.slice(1)}\n            left={props => <List.Icon {...props} icon=\"flag\" />}\n            onPress={() => setShowPriorityDialog(true)}\n          />\n        </List.Section>\n\n        <List.Section>\n          <List.Subheader style={{ color: theme.colors.text }}>Statistics</List.Subheader>\n          <View style={styles.statsContainer}>\n            {renderStatCard('Total Tasks', tasks.length.toString())}\n            {renderStatCard('Completed', tasks.filter(t => t.completed).length.toString())}\n            {renderStatCard('Active', tasks.filter(t => !t.completed).length.toString())}\n          </View>\n        </List.Section>\n\n        <List.Section>\n          <List.Subheader style={{ color: theme.colors.text }}>About</List.Subheader>\n          <List.Item\n            title=\"Version\"\n            description=\"1.0.0\"\n            left={props => <List.Icon {...props} icon=\"information\" />}\n            onPress={handleAbout}\n          />\n        </List.Section>\n\n        <View style={styles.dangerZone}>\n          <Text style={styles.dangerTitle}>Danger Zone</Text>\n          <Button\n            mode=\"contained\"\n            buttonColor=\"#dc3545\"\n            onPress={() => setShowConfirmResetDialog(true)}\n          >\n            Reset App Data\n          </Button>\n        </View>\n      </View>\n\n      <Portal>\n        <Dialog visible={showPriorityDialog} onDismiss={() => setShowPriorityDialog(false)}>\n          <Dialog.Title>Default Priority</Dialog.Title>\n          <Dialog.Content>\n            <RadioButton.Group onValueChange={value => {\n              setDefaultPriority(value);\n              setShowPriorityDialog(false);\n            }} value={defaultPriority}>\n              <RadioButton.Item label=\"High\" value=\"high\" />\n              <RadioButton.Item label=\"Medium\" value=\"medium\" />\n              <RadioButton.Item label=\"Low\" value=\"low\" />\n            </RadioButton.Group>\n          </Dialog.Content>\n        </Dialog>\n\n        <Dialog visible={showThemeModeDialog} onDismiss={() => setShowThemeModeDialog(false)}>\n          <Dialog.Title>Select Theme Mode</Dialog.Title>\n          <Dialog.Content>\n            <RadioButton.Group onValueChange={value => {\n              setThemeMode(value as ThemeMode);\n              setShowThemeModeDialog(false);\n            }} value={theme.mode}>\n              <View style={styles.radioItem}>\n                <RadioButton value=\"light\" />\n                <Text>Light</Text>\n              </View>\n              <View style={styles.radioItem}>\n                <RadioButton value=\"dark\" />\n                <Text>Dark</Text>\n              </View>\n              <View style={styles.radioItem}>\n                <RadioButton value=\"system\" />\n                <Text>System</Text>\n              </View>\n            </RadioButton.Group>\n          </Dialog.Content>\n        </Dialog>\n\n        <Dialog visible={showConfirmResetDialog} onDismiss={() => setShowConfirmResetDialog(false)}>\n          <Dialog.Title>Reset App Data</Dialog.Title>\n          <Dialog.Content>\n            <Text>Are you sure you want to reset all app data? This action cannot be undone.</Text>\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setShowConfirmResetDialog(false)}>Cancel</Button>\n            <Button onPress={handleResetApp}>Reset</Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  section: {\n    marginBottom: 16,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    padding: 16,\n  },\n  statCard: {\n    width: '30%',\n    marginBottom: 8,\n    elevation: 2,\n  },\n  statTitle: {\n    fontSize: 12,\n    opacity: 0.7,\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  dangerZone: {\n    padding: 16,\n    marginTop: 16,\n  },\n  dangerTitle: {\n    color: '#dc3545',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  radioItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 4,\n  },\n}); ","import React from 'react';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../navigation/types';\nimport TaskDetail from '../components/TaskDetail';\nimport { useNavigation } from '@react-navigation/native';\n\ntype Props = NativeStackScreenProps<RootStackParamList, 'TaskDetail'>;\n\nexport default function TaskDetailScreen({ route }: Props) {\n  const navigation = useNavigation();\n  const { taskId } = route.params;\n\n  const handleEdit = () => {\n    // Navigate to edit mode or show edit modal\n    console.log('Edit task:', taskId);\n  };\n\n  const handleDelete = () => {\n    // Show delete confirmation and handle deletion\n    console.log('Delete task:', taskId);\n    navigation.goBack();\n  };\n\n  return (\n    <TaskDetail\n      taskId={taskId}\n      onEdit={handleEdit}\n      onDelete={handleDelete}\n      onBack={() => navigation.goBack()}\n    />\n  );\n} ","/**\n * Storage utility that provides a unified API for both secure storage and fallback storage\n */\n\n// In-memory storage fallback when SecureStore is not available\nconst memoryStorage = new Map<string, string>();\n\n// Check if SecureStore is available without throwing\nlet SecureStore: any = null;\ntry {\n  SecureStore = require('expo-secure-store');\n  // Test if the module actually works\n  SecureStore.getItemAsync('test').catch(() => {\n    console.log('SecureStore is not fully functional, using memory fallback');\n    SecureStore = null;\n  });\n} catch (error) {\n  console.warn('SecureStore module not available, using memory fallback');\n}\n\n/**\n * Storage adapter with fallback to memory storage\n */\nexport const Storage = {\n  /**\n   * Get an item from storage\n   */\n  async getItem(key: string): Promise<string | null> {\n    try {\n      if (SecureStore) {\n        return await SecureStore.getItemAsync(key);\n      }\n      return memoryStorage.get(key) || null;\n    } catch (error) {\n      console.warn('Error accessing storage, using memory fallback', error);\n      return memoryStorage.get(key) || null;\n    }\n  },\n\n  /**\n   * Store an item\n   */\n  async setItem(key: string, value: string): Promise<void> {\n    try {\n      if (SecureStore) {\n        await SecureStore.setItemAsync(key, value);\n      } else {\n        memoryStorage.set(key, value);\n      }\n    } catch (error) {\n      console.warn('Error storing data, using memory fallback', error);\n      memoryStorage.set(key, value);\n    }\n  },\n\n  /**\n   * Remove an item\n   */\n  async removeItem(key: string): Promise<void> {\n    try {\n      if (SecureStore) {\n        await SecureStore.deleteItemAsync(key);\n      } else {\n        memoryStorage.delete(key);\n      }\n    } catch (error) {\n      console.warn('Error removing data, using memory fallback', error);\n      memoryStorage.delete(key);\n    }\n  },\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport { \n  View, \n  ScrollView, \n  StyleSheet, \n  TouchableOpacity, \n  RefreshControl,\n  FlatList,\n  Dimensions,\n  Animated\n} from 'react-native';\nimport { \n  Text, \n  Card, \n  Title, \n  Paragraph, \n  Button, \n  Surface,\n  Divider,\n  Avatar,\n  IconButton,\n  FAB,\n  useTheme,\n  ProgressBar,\n  Portal,\n  Modal\n} from 'react-native-paper';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { Ionicons, MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport TaskItem from '../components/TaskItem';\nimport InlinePomodoroTimer from '../components/InlinePomodoroTimer';\nimport PomodoroTimer from '../components/PomodoroTimer';\nimport { format } from 'date-fns';\nimport { RootStackParamList } from '../navigation/types';\nimport { useDatabase } from '../hooks/useDatabase';\nimport { Task } from '../types/Task';\nimport { TaskCard } from '../components/TaskCard';\nimport { Storage } from '../utils/storage';\nimport { useTaskStore } from '../stores/taskStore';\nimport TaskDetail from '../components/TaskDetail';\n\n// Define components for the HomeScreen\ntype HomeScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Home'>;\n\n// Priority Icon Component\nfunction PriorityIcon({ priority }: { priority: Task['priority'] }) {\n  const colors = {\n    high: '#D32F2F',\n    medium: '#FFC107',\n    low: '#4CAF50',\n  };\n  \n  return (\n    <View style={[styles.priorityIcon, { backgroundColor: colors[priority as keyof typeof colors] }]}>\n      <Ionicons \n        name={\n          priority === 'high' ? 'alert-circle' : \n          priority === 'medium' ? 'warning-outline' : 'information-circle-outline'\n        } \n        color=\"white\" \n        size={16} \n      />\n    </View>\n  );\n}\n\n// Quick Action Button Component\nfunction QuickActionButton({ icon, label, onPress, color }: { icon: string, label: string, onPress: () => void, color: string }) {\n  const { colors: themeColors } = useTheme();\n  \n  return (\n    <TouchableOpacity \n      style={[styles.quickActionButton, { backgroundColor: themeColors.surface }]} \n      onPress={onPress}\n    >\n      <MaterialIcons name={icon as any} size={24} color={color} />\n      <Text style={[styles.quickActionLabel, { color: themeColors.onSurface }]}>{label}</Text>\n    </TouchableOpacity>\n  );\n}\n\n// Stats Card Component\nfunction StatCard({ icon, title, value, color, onPress }: { icon: string, title: string, value: string, color: string, onPress: () => void }) {\n  const { colors: themeColors } = useTheme();\n  \n  return (\n    <TouchableOpacity \n      style={[styles.statCard, { backgroundColor: themeColors.surface }]}\n      onPress={onPress}\n    >\n      <View style={[styles.statIconContainer, { backgroundColor: color }]}>\n        <MaterialIcons name={icon as any} size={24} color={themeColors.surface} />\n      </View>\n      <View style={styles.statContent}>\n        <Text style={[styles.statTitle, { color: themeColors.onSurface }]}>{title}</Text>\n        <Text style={[styles.statValue, { color: themeColors.onSurface }]}>{value}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n\n// Task Section Component\nfunction TaskSection({ title, tasks, onTaskPress, onSeeAll, color }: { \n  title: string, \n  tasks: Task[], \n  onTaskPress: (taskId: string) => void, \n  onSeeAll: () => void,\n  color: string \n}) {\n  // Show only first 3 tasks\n  const displayedTasks = tasks.slice(0, 3);\n\n  return (\n    <View style={styles.taskSection}>\n      <View style={styles.sectionHeader}>\n        <View style={styles.sectionTitleContainer}>\n          <View style={[styles.sectionTitleIndicator, { backgroundColor: color }]} />\n          <Text style={[styles.sectionTitle, { color: color }]}>{title}</Text>\n        </View>\n        {tasks.length > 3 && (\n          <Button \n            mode=\"text\" \n            onPress={onSeeAll}\n            textColor={color}\n          >\n            See All ({tasks.length})\n          </Button>\n        )}\n      </View>\n      {displayedTasks.length === 0 ? (\n        <Card style={[styles.emptyCard, { borderColor: color + '40' }]}>\n          <Card.Content style={styles.emptyCardContent}>\n            <MaterialIcons name=\"assignment\" size={32} color={color + '80'} />\n            <Paragraph style={{ color: color + '90' }}>No tasks in this category</Paragraph>\n          </Card.Content>\n        </Card>\n      ) : (\n        <FlatList\n          data={displayedTasks}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => (\n            <TaskItem \n              key={item.id} \n              task={item} \n              onPress={() => onTaskPress(item.id.toString())} \n            />\n          )}\n          scrollEnabled={false}\n        />\n      )}\n    </View>\n  );\n}\n\n// Empty State Component\nfunction EmptyState() {\n  const { colors } = useTheme();\n  const scale = React.useRef(new Animated.Value(0.8)).current;\n  const opacity = React.useRef(new Animated.Value(0)).current;\n\n  React.useEffect(() => {\n    Animated.parallel([\n      Animated.spring(scale, {\n        toValue: 1,\n        useNativeDriver: true,\n      }),\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true,\n      })\n    ]).start();\n  }, []);\n\n  return (\n    <Animated.View style={[styles.emptyState, { opacity, transform: [{ scale }] }]}>\n      <MaterialCommunityIcons \n        name=\"checkbox-blank-outline\" \n        size={64} \n        color={colors.primary} \n      />\n      <Text style={[styles.emptyStateText, { color: colors.primary }]}>No tasks yet!</Text>\n      <Text style={[styles.emptyStateSubtext, { color: colors.onSurface }]}>Create your first task to get started</Text>\n    </Animated.View>\n  );\n}\n\nexport const HomeScreen = () => {\n  const navigation = useNavigation<HomeScreenNavigationProp>();\n  const { colors, dark: isDark } = useTheme();\n  const { tasks, isLoading, fetchTasks, toggleTaskCompletion, deleteTask, updateTask, toggleSubtask } = useTaskStore();\n  const [activeTask, setActiveTask] = useState<string | undefined>(undefined);\n  const [showPomodoro, setShowPomodoro] = useState(false);\n  const [isReturningUser, setIsReturningUser] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [userName, setUserName] = useState<string | null>(null);\n  const [showWelcome, setShowWelcome] = useState(true);\n  const welcomeOpacity = React.useRef(new Animated.Value(1)).current;\n  const headerHeight = React.useRef(new Animated.Value(160)).current;\n  const taskScale = React.useRef(new Animated.Value(1)).current;\n  const progressAnimation = React.useRef(new Animated.Value(0)).current;\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\n  const [showTaskDetail, setShowTaskDetail] = useState(false);\n\n  // Fetch tasks when component mounts\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  // Use useFocusEffect to refresh tasks when screen comes into focus\n  useFocusEffect(\n    useCallback(() => {\n      console.log('HomeScreen focused - refreshing tasks');\n      loadTasks();\n      return () => {}; // Cleanup function\n    }, [])\n  );\n\n  // Function to load tasks\n  const loadTasks = async () => {\n    try {\n      console.log('Loading tasks in HomeScreen');\n      await fetchTasks();\n    } catch (error) {\n      console.error('Error loading tasks:', error);\n    }\n  };\n\n  // Handle pull to refresh\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    try {\n      await loadTasks();\n    } catch (error) {\n      console.error('Error refreshing tasks:', error);\n    } finally {\n      setRefreshing(false);\n    }\n  }, []);\n  \n  // Check if user is returning and get user info\n  useEffect(() => {\n    const checkUserInfo = async () => {\n      const hasLoggedInBefore = await Storage.getItem('has_logged_in_before');\n      const storedName = await Storage.getItem('user_name');\n      setIsReturningUser(!!hasLoggedInBefore);\n      setUserName(storedName);\n      \n      if (!hasLoggedInBefore) {\n        await Storage.setItem('has_logged_in_before', 'true');\n      }\n    };\n    \n    checkUserInfo();\n  }, []);\n\n  // Get today's tasks\n  const todayTasks = tasks.filter(task => {\n    if (!task.dueDate) return false;\n    const taskDate = new Date(task.dueDate);\n    const today = new Date();\n    return taskDate.toDateString() === today.toDateString();\n  });\n\n  // Get overdue tasks\n  const overdueTasks = tasks.filter(task => {\n    if (!task.dueDate || task.completed) return false;\n    const taskDate = new Date(task.dueDate);\n    const today = new Date();\n    return taskDate < today;\n  });\n\n  // Get upcoming tasks\n  const upcomingTasks = tasks.filter(task => {\n    if (!task.dueDate || task.completed) return false;\n    const taskDate = new Date(task.dueDate);\n    const today = new Date();\n    return taskDate > today;\n  });\n  \n  // Get all completed tasks\n  const allCompletedTasks = tasks.filter(task => task.completed);\n  \n  // Get today's completed tasks (for progress bar)\n  const todayCompletedCount = todayTasks.filter(task => task.completed).length;\n  \n  // Calculate progress with a default value of 0\n  const progress = todayTasks.length > 0 ? todayCompletedCount / todayTasks.length : 0;\n  \n  // Auto-hide welcome section after 2 seconds\n  useEffect(() => {\n    if (showWelcome) {\n      const timer = setTimeout(() => {\n        hideWelcome();\n      }, 2000);\n      return () => clearTimeout(timer);\n    }\n  }, [showWelcome]);\n\n  const hideWelcome = () => {\n    Animated.parallel([\n      Animated.timing(welcomeOpacity, {\n        toValue: 0,\n        duration: 500,\n        useNativeDriver: true,\n      }),\n      Animated.timing(headerHeight, {\n        toValue: 0,\n        duration: 500,\n        useNativeDriver: false,\n      })\n    ]).start(() => {\n      setShowWelcome(false);\n    });\n  };\n  \n  // Update progress animation when tasks change\n  useEffect(() => {\n    const validProgress = isNaN(progress) ? 0 : progress;\n    Animated.spring(progressAnimation, {\n      toValue: validProgress,\n      useNativeDriver: false,\n    }).start();\n  }, [progress]);\n  \n  // Navigate to task screen\n  const navigateToTask = (taskId: string) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      setSelectedTask(task);\n      setShowTaskDetail(true);\n    }\n  };\n  \n  // Handle start pomodoro\n  const handleStartPomodoro = (taskId: string) => {\n    setActiveTask(taskId);\n    setShowPomodoro(true);\n  };\n  \n  // Get priority color\n  const getPriorityColor = (priority: Task['priority']) => {\n    switch (priority) {\n      case 'high':\n        return colors.error;\n      case 'medium':\n        return colors.errorContainer;\n      case 'low':\n        return colors.primary;\n      default:\n        return colors.surface;\n    }\n  };\n  \n  const handleTaskComplete = (taskId: string) => {\n    Animated.sequence([\n      Animated.timing(taskScale, {\n        toValue: 0.95,\n        duration: 100,\n        useNativeDriver: true,\n      }),\n      Animated.timing(taskScale, {\n        toValue: 1,\n        duration: 100,\n        useNativeDriver: true,\n      })\n    ]).start();\n  };\n  \n  // Filter tasks with null checks\n  const pendingTasks = tasks?.filter(task => !task.completed) || [];\n  const highPriorityTasks = tasks?.filter(task => task.priority === 'high' && !task.completed) || [];\n  const dueTodayTasks = tasks?.filter(task => {\n    if (!task.dueDate || task.completed) return false;\n    const today = new Date();\n    const taskDate = new Date(task.dueDate);\n    return taskDate.getDate() === today.getDate() && \n           taskDate.getMonth() === today.getMonth() && \n           taskDate.getFullYear() === today.getFullYear();\n  }) || [];\n\n  // Fix navigation to Tasks\n  const navigateToTasks = () => {\n    // @ts-ignore - Ignore the type error for now as this navigation pattern works at runtime\n    navigation.navigate('MainTabs', { screen: 'Tasks' });\n  };\n  \n  // Add task detail handlers\n  const handleTaskUpdate = (updatedTask: Task) => {\n    updateTask(updatedTask);\n    setSelectedTask(updatedTask);\n  };\n\n  const handleTaskDelete = async (taskId: string) => {\n    await deleteTask(taskId);\n    setShowTaskDetail(false);\n    setSelectedTask(null);\n  };\n\n  const handleToggleTaskCompletion = async (taskId: string) => {\n    await toggleTaskCompletion(taskId);\n    if (selectedTask) {\n      setSelectedTask({ ...selectedTask, completed: !selectedTask.completed });\n    }\n  };\n\n  const handleToggleSubtask = async (taskId: string, subtaskId: string) => {\n    await toggleSubtask(taskId, subtaskId);\n    if (selectedTask) {\n      const updatedSubtasks = selectedTask.subtasks.map(subtask => \n        subtask.id === subtaskId ? { ...subtask, completed: !subtask.completed } : subtask\n      );\n      setSelectedTask({ ...selectedTask, subtasks: updatedSubtasks });\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView \n        style={styles.scrollView}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        {/* Header Section */}\n        <Surface style={styles.header}>\n          <View style={styles.headerContent}>\n            <View style={styles.headerTop}>\n              <View>\n                <Text style={styles.greeting}>\n                  {userName ? `Hello, ${userName}!` : 'Welcome back!'}\n                </Text>\n                <Text style={styles.date}>\n                  {format(new Date(), 'EEEE, MMMM d')}\n                </Text>\n              </View>\n              <TouchableOpacity \n                style={styles.profileButton}\n                onPress={() => navigation.navigate('Settings')}\n              >\n                <Avatar.Text \n                  size={40} \n                  label={userName ? userName.substring(0, 2).toUpperCase() : 'U'} \n                />\n              </TouchableOpacity>\n            </View>\n\n            {/* Quick Stats */}\n            <View style={styles.statsRow}>\n              <Surface style={[styles.statsCard, { backgroundColor: colors.primaryContainer }]}>\n                <View style={styles.statsContent}>\n                  <Text \n                    style={[\n                      styles.statsLabel, \n                      { \n                        color: colors.onPrimaryContainer,\n                        whiteSpace: 'nowrap',  // Keep text in one line\n                      }\n                    ]}\n                    numberOfLines={1}  // Force single line\n                  >\n                    Total Tasks\n                  </Text>\n                  <Text style={[styles.statsValue, { color: colors.onPrimaryContainer }]}>\n                    {(tasks?.length || 0).toString()}\n                  </Text>\n                </View>\n              </Surface>\n\n              <Surface style={[styles.statsCard, { backgroundColor: colors.primaryContainer }]}>\n                <View style={styles.statsContent}>\n                  <Text \n                    style={[\n                      styles.statsLabel, \n                      { \n                        color: colors.onPrimaryContainer,\n                        whiteSpace: 'nowrap',  // Keep text in one line\n                      }\n                    ]}\n                    numberOfLines={1}  // Force single line\n                  >\n                    Completed\n                  </Text>\n                  <Text style={[styles.statsValue, { color: colors.onPrimaryContainer }]}>\n                    {(allCompletedTasks.length || 0).toString()}\n                  </Text>\n                </View>\n              </Surface>\n\n              <Surface style={[styles.statsCard, { backgroundColor: colors.primaryContainer }]}>\n                <View style={styles.statsContent}>\n                  <Text \n                    style={[\n                      styles.statsLabel, \n                      { \n                        color: colors.onPrimaryContainer,\n                        whiteSpace: 'nowrap',  // Keep text in one line\n                      }\n                    ]}\n                    numberOfLines={1}  // Force single line\n                  >\n                    Due Today\n                  </Text>\n                  <Text style={[styles.statsValue, { color: colors.onPrimaryContainer }]}>\n                    {(dueTodayTasks?.length || 0).toString()}\n                  </Text>\n                </View>\n              </Surface>\n            </View>\n\n            {/* Quick Actions */}\n            <View style={styles.quickActions}>\n              <QuickActionButton\n                icon=\"add-task\"\n                label=\"New Task\"\n                color={colors.primary}\n                onPress={() => navigation.navigate('CreateTask')}\n              />\n              <QuickActionButton\n                icon=\"timer\"\n                label=\"Pomodoro\"\n                color={colors.primary}\n                onPress={() => setShowPomodoro(true)}\n              />\n              <QuickActionButton\n                icon=\"calendar-today\"\n                label=\"Calendar\"\n                color={colors.primary}\n                onPress={() => navigation.navigate('Calendar')}\n              />\n            </View>\n          </View>\n        </Surface>\n\n        {/* Task Sections */}\n        <View style={styles.content}>\n          {highPriorityTasks.length > 0 && (\n            <TaskSection\n              title=\"High Priority\"\n              tasks={highPriorityTasks}\n              onTaskPress={navigateToTask}\n              onSeeAll={navigateToTasks}\n              color={colors.error}\n            />\n          )}\n\n          {dueTodayTasks.length > 0 && (\n            <TaskSection\n              title=\"Due Today\"\n              tasks={dueTodayTasks}\n              onTaskPress={navigateToTask}\n              onSeeAll={navigateToTasks}\n              color={colors.primary}\n            />\n          )}\n\n          {pendingTasks.length > 0 && (\n            <TaskSection\n              title=\"Pending Tasks\"\n              tasks={pendingTasks}\n              onTaskPress={navigateToTask}\n              onSeeAll={navigateToTasks}\n              color={colors.primary}\n            />\n          )}\n\n          {allCompletedTasks.length > 0 && (\n            <TaskSection\n              title=\"Completed\"\n              tasks={allCompletedTasks}\n              onTaskPress={navigateToTask}\n              onSeeAll={navigateToTasks}\n              color={colors.success}\n            />\n          )}\n        </View>\n      </ScrollView>\n      \n      {/* Pomodoro Timer */}\n      {showPomodoro && (\n        <View style={styles.pomodoroOverlay}>\n          <PomodoroTimer\n            initialTaskId={activeTask}\n            onClose={() => setShowPomodoro(false)}\n            showCloseButton={true}\n          />\n        </View>\n      )}\n\n      {/* Task Detail Modal */}\n      <Portal>\n        <Modal\n          visible={showTaskDetail && selectedTask !== null}\n          onDismiss={() => setShowTaskDetail(false)}\n          contentContainerStyle={styles.modalContent}\n        >\n          {selectedTask && (\n            <TaskDetail\n              task={selectedTask}\n              onEdit={() => {\n                setShowTaskDetail(false);\n                navigation.navigate('EditTask', { taskId: selectedTask.id });\n              }}\n              onDelete={handleTaskDelete}\n              onToggleCompletion={handleToggleTaskCompletion}\n              onToggleSubtask={handleToggleSubtask}\n              onUpdate={handleTaskUpdate}\n              onBack={() => setShowTaskDetail(false)}\n            />\n          )}\n        </Modal>\n      </Portal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  header: {\n    padding: 16,\n    elevation: 4,\n  },\n  headerContent: {\n    gap: 16,\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n  },\n  greeting: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  date: {\n    fontSize: 16,\n    opacity: 0.7,\n  },\n  profileButton: {\n    padding: 4,\n  },\n  statsRow: {\n    flexDirection: 'row',\n    gap: 12,\n    marginBottom: 16,\n  },\n  statsCard: {\n    borderRadius: 12,\n    padding: 16,\n    flex: 1,\n    minWidth: 100, // Ensure minimum width\n  },\n  statsContent: {\n    alignItems: 'flex-start',\n  },\n  statsLabel: {\n    fontSize: 14, // Slightly reduced font size if needed\n    fontWeight: '500',\n    marginBottom: 8,\n    width: '100%', // Ensure text takes full width\n  },\n  statsValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  quickActions: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  quickActionButton: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 12,\n    alignItems: 'center',\n    gap: 8,\n  },\n  quickActionLabel: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  content: {\n    padding: 16,\n    gap: 24,\n  },\n  taskSection: {\n    gap: 12,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  sectionTitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  sectionTitleIndicator: {\n    width: 4,\n    height: 20,\n    borderRadius: 2,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  emptyCard: {\n    borderWidth: 1,\n    borderRadius: 12,\n  },\n  emptyCardContent: {\n    alignItems: 'center',\n    padding: 24,\n    gap: 8,\n  },\n  modalContent: {\n    flex: 1,\n    margin: 0,\n  },\n  pomodoroOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    zIndex: 999,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  emptyState: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  emptyStateText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 16,\n  },\n  emptyStateSubtext: {\n    fontSize: 16,\n    opacity: 0.7,\n    marginTop: 8,\n  },\n});\n\nexport default HomeScreen; ","import React, { useRef, useEffect, useState } from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet, \n  Animated, \n  Easing, \n  TouchableOpacity,\n  Pressable,\n  Dimensions\n} from 'react-native';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { LinearGradient } from 'expo-linear-gradient';\n\ninterface AnimatedWelcomeProps {\n  userName?: string;\n  onFinish: () => void;\n}\n\nexport default function AnimatedWelcome({ userName = 'there', onFinish }: AnimatedWelcomeProps) {\n  const { theme } = useTheme();\n  const [isDismissing, setIsDismissing] = useState(false);\n  const [pressedIcon, setPressedIcon] = useState<string | null>(null);\n  \n  // Animation values\n  const titleOpacity = useRef(new Animated.Value(0)).current;\n  const subtitleOpacity = useRef(new Animated.Value(0)).current;\n  const iconOpacity = useRef(new Animated.Value(0)).current;\n  const bounceAnim = useRef(new Animated.Value(0)).current;\n  const fadeOutAnim = useRef(new Animated.Value(1)).current;\n  const buttonScale = useRef(new Animated.Value(1)).current;\n  const buttonOpacity = useRef(new Animated.Value(0)).current;\n  const slideUpAnim = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    // Make sure animations start from a consistent position\n    slideUpAnim.setValue(0); // Start from center, not below\n    titleOpacity.setValue(0);\n    subtitleOpacity.setValue(0);\n    iconOpacity.setValue(0);\n    bounceAnim.setValue(0);\n    fadeOutAnim.setValue(1);\n    buttonScale.setValue(1);\n    buttonOpacity.setValue(0);\n\n    // Sequential animations\n    Animated.sequence([\n      // Slide up from bottom (now it's already centered)\n      Animated.spring(slideUpAnim, {\n        toValue: 0,\n        friction: 8,\n        tension: 40,\n        useNativeDriver: true,\n      }),\n      \n      // Title fade in\n      Animated.timing(titleOpacity, {\n        toValue: 1,\n        duration: 800,\n        useNativeDriver: true,\n      }),\n      \n      // Subtitle fade in\n      Animated.timing(subtitleOpacity, {\n        toValue: 1,\n        duration: 800,\n        useNativeDriver: true,\n      }),\n      \n      // Icons fade in\n      Animated.timing(iconOpacity, {\n        toValue: 1,\n        duration: 800,\n        useNativeDriver: true,\n      }),\n\n      // Button fade in\n      Animated.timing(buttonOpacity, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true,\n      })\n    ]).start();\n    \n    // Continuous bounce animation\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(bounceAnim, {\n          toValue: 1,\n          duration: 1500,\n          easing: Easing.out(Easing.sin),\n          useNativeDriver: true,\n        }),\n        Animated.timing(bounceAnim, {\n          toValue: 0,\n          duration: 1500,\n          easing: Easing.in(Easing.sin),\n          useNativeDriver: true,\n        })\n      ])\n    ).start();\n  }, []);\n  \n  // Interpolate bounce animation\n  const translateY = bounceAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, -5],\n  });\n\n  // Handle dismiss animation\n  const handleDismiss = () => {\n    setIsDismissing(true);\n    Animated.sequence([\n      Animated.timing(fadeOutAnim, {\n        toValue: 0,\n        duration: 500,\n        useNativeDriver: true,\n      })\n    ]).start(() => {\n      onFinish();\n    });\n  };\n\n  // Handle icon press animation\n  const handleIconPress = (icon: string) => {\n    setPressedIcon(icon);\n    setTimeout(() => setPressedIcon(null), 200);\n  };\n\n  return (\n    <Animated.View \n      style={[\n        styles.container, \n        { \n          opacity: fadeOutAnim,\n          transform: [{ translateY: slideUpAnim }]\n        }\n      ]}\n    >\n      <LinearGradient\n        colors={[theme.colors.primary + '20', theme.colors.background]}\n        style={styles.gradient}\n      />\n      \n      <Animated.Text \n        style={[\n          styles.welcomeText, \n          { color: theme.colors.text, opacity: titleOpacity }\n        ]}\n      >\n        Hi {userName}!\n      </Animated.Text>\n      \n      <Animated.Text \n        style={[\n          styles.subtitle, \n          { color: theme.colors.text, opacity: subtitleOpacity }\n        ]}\n      >\n        Welcome to your Task Manager\n      </Animated.Text>\n      \n      <View style={styles.iconContainer}>\n        <Pressable\n          onPress={() => handleIconPress('sparkle')}\n          style={({ pressed }) => [\n            styles.iconPressable,\n            pressed && styles.iconPressed\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.iconWrapper,\n              { \n                backgroundColor: theme.colors.primary + '20',\n                borderColor: theme.colors.primary + '50',\n                opacity: iconOpacity,\n                transform: [\n                  { translateY },\n                  { scale: pressedIcon === 'sparkle' ? 1.2 : 1 }\n                ]\n              }\n            ]}\n          >\n            <Text style={styles.icon}>✨</Text>\n          </Animated.View>\n        </Pressable>\n        \n        <Pressable\n          onPress={() => handleIconPress('list')}\n          style={({ pressed }) => [\n            styles.iconPressable,\n            pressed && styles.iconPressed\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.iconWrapper,\n              { \n                backgroundColor: theme.colors.success + '20',\n                borderColor: theme.colors.success + '50',\n                opacity: iconOpacity,\n                transform: [\n                  { translateY: Animated.add(translateY, new Animated.Value(8)) },\n                  { scale: pressedIcon === 'list' ? 1.2 : 1 }\n                ]\n              }\n            ]}\n          >\n            <Text style={styles.icon}>📋</Text>\n          </Animated.View>\n        </Pressable>\n        \n        <Pressable\n          onPress={() => handleIconPress('timer')}\n          style={({ pressed }) => [\n            styles.iconPressable,\n            pressed && styles.iconPressed\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.iconWrapper,\n              { \n                backgroundColor: theme.colors.warning + '20',\n                borderColor: theme.colors.warning + '50',\n                opacity: iconOpacity,\n                transform: [\n                  { translateY: Animated.multiply(translateY, new Animated.Value(-1)) },\n                  { scale: pressedIcon === 'timer' ? 1.2 : 1 }\n                ]\n              }\n            ]}\n          >\n            <Text style={styles.icon}>⏰</Text>\n          </Animated.View>\n        </Pressable>\n      </View>\n\n      <Animated.View style={{ opacity: buttonOpacity }}>\n        <TouchableOpacity\n          onPress={handleDismiss}\n          activeOpacity={0.8}\n          style={styles.buttonContainer}\n        >\n          <Animated.View\n            style={[\n              styles.button,\n              { backgroundColor: theme.colors.primary },\n              { transform: [{ scale: buttonScale }] }\n            ]}\n          >\n            <Text style={styles.buttonText}>Get Started</Text>\n          </Animated.View>\n        </TouchableOpacity>\n      </Animated.View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    width: '100%',\n    height: '100%',\n    zIndex: 1000, // Increased to ensure it appears above all other elements\n  },\n  gradient: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    zIndex: -1,\n  },\n  welcomeText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 20,\n    marginBottom: 24,\n    opacity: 0.8,\n    textAlign: 'center',\n  },\n  iconContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n    marginBottom: 32,\n  },\n  iconPressable: {\n    marginHorizontal: 12,\n  },\n  iconPressed: {\n    opacity: 0.7,\n  },\n  iconWrapper: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n  },\n  icon: {\n    fontSize: 28,\n  },\n  buttonContainer: {\n    marginTop: 16,\n  },\n  button: {\n    paddingHorizontal: 40,\n    paddingVertical: 16,\n    borderRadius: 30,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  }\n}); ","import { doc, setDoc, getDoc, updateDoc, serverTimestamp, getFirestore } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport { UserProfile } from '../types/user';\nimport { User } from 'firebase/auth';\nimport NetInfo from '@react-native-community/netinfo';\n\nconst MAX_RETRIES = 1;\nconst RETRY_DELAY = 500; // 500ms\nconst CACHE_DURATION = 30 * 60 * 1000; // 30 minutes (increased from 5 minutes)\n\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// In-memory cache for user profiles\nconst memoryCache = new Map<string, UserProfile>();\nconst cacheExpiry = new Map<string, number>();\n\nconst isCacheValid = (uid: string): boolean => {\n  const expiry = cacheExpiry.get(uid);\n  return expiry ? Date.now() < expiry : false;\n};\n\nconst isOnline = async (): Promise<boolean> => {\n  const netInfo = await NetInfo.fetch();\n  return netInfo.isConnected ?? false;\n};\n\nconst ensureFirestoreInitialized = async () => {\n  try {\n    // Check if Firestore is initialized\n    if (!getFirestore()) {\n      await delay(100); // Small delay to ensure initialization\n    }\n  } catch (error) {\n    console.error('Error checking Firestore initialization:', error);\n    await delay(100); // Delay on error\n  }\n};\n\nexport const userService = {\n  async createUserProfile(user: User): Promise<void> {\n    await ensureFirestoreInitialized();\n    const userRef = doc(db, 'users', user.uid);\n    const userProfile: UserProfile = {\n      uid: user.uid,\n      email: user.isAnonymous ? 'guest@example.com' : (user.email || ''),\n      displayName: user.isAnonymous ? 'Guest User' : user.displayName,\n      photoURL: user.photoURL,\n      createdAt: new Date(),\n      lastLogin: new Date(),\n      isAnonymous: user.isAnonymous,\n      settings: {\n        theme: 'system',\n        notifications: true,\n        language: 'en'\n      }\n    };\n\n    try {\n      await setDoc(userRef, userProfile, { merge: true });\n      memoryCache.set(user.uid, userProfile);\n      cacheExpiry.set(user.uid, Date.now() + CACHE_DURATION);\n    } catch (error: any) {\n      console.error('Error creating user profile:', error);\n      if (error.code === 'unavailable' || error.code === 'failed-precondition') {\n        console.log('Device is offline, data will be synced when online');\n        memoryCache.set(user.uid, userProfile);\n        cacheExpiry.set(user.uid, Date.now() + CACHE_DURATION);\n      }\n    }\n  },\n\n  async getUserProfile(uid: string): Promise<UserProfile | null> {\n    if (!uid) {\n      console.error('getUserProfile called with invalid uid');\n      return null;\n    }\n    \n    // Check memory cache first before initializing Firestore\n    const cachedProfile = memoryCache.get(uid);\n    if (cachedProfile && isCacheValid(uid)) {\n      console.log('Using cached profile for user:', uid);\n      return cachedProfile;\n    }\n    \n    try {\n      await ensureFirestoreInitialized();\n      const userRef = doc(db, 'users', uid);\n      \n      // Try to get from Firestore with timeout\n      const userDoc = await Promise.race([\n        getDoc(userRef),\n        new Promise<null>((resolve) => setTimeout(() => resolve(null), 5000)) // 5 second timeout\n      ]);\n      \n      if (userDoc && 'exists' in userDoc && userDoc.exists()) {\n        const profile = userDoc.data() as UserProfile;\n        // Update cache with longer expiry\n        memoryCache.set(uid, profile);\n        cacheExpiry.set(uid, Date.now() + CACHE_DURATION);\n        return profile;\n      }\n      \n      // If not in Firestore but in cache, use cache\n      if (cachedProfile) {\n        return cachedProfile;\n      }\n      \n      // No profile found, return null\n      return null;\n    } catch (error: any) {\n      console.error('Error getting user profile:', error);\n      \n      // Return cached profile if available, even if expired\n      if (cachedProfile) {\n        return cachedProfile;\n      }\n      \n      // Return null on error\n      return null;\n    }\n  },\n\n  async updateUserProfile(uid: string, data: Partial<UserProfile>): Promise<void> {\n    await ensureFirestoreInitialized();\n    const userRef = doc(db, 'users', uid);\n    let retries = 0;\n\n    while (retries < MAX_RETRIES) {\n      try {\n        const updateData = {\n          ...data,\n          lastLogin: serverTimestamp()\n        };\n        await updateDoc(userRef, updateData);\n        \n        // Update memory cache\n        const currentProfile = memoryCache.get(uid);\n        if (currentProfile) {\n          memoryCache.set(uid, { ...currentProfile, ...updateData });\n        }\n        \n        return;\n      } catch (error: any) {\n        console.error(`Error updating user profile (attempt ${retries + 1}):`, error);\n        if (error.code === 'unavailable' || error.code === 'failed-precondition') {\n          // If offline, update memory cache\n          console.log('Device is offline, changes will be synced when online');\n          const currentProfile = memoryCache.get(uid);\n          if (currentProfile) {\n            memoryCache.set(uid, { ...currentProfile, ...data });\n          }\n          return;\n        }\n        retries++;\n        if (retries < MAX_RETRIES) {\n          await delay(RETRY_DELAY);\n        }\n      }\n    }\n  },\n\n  async updateUserSettings(uid: string, settings: Partial<UserProfile['settings']>): Promise<void> {\n    await ensureFirestoreInitialized();\n    const userRef = doc(db, 'users', uid);\n    let retries = 0;\n\n    while (retries < MAX_RETRIES) {\n      try {\n        await updateDoc(userRef, {\n          'settings': settings\n        });\n        \n        // Update memory cache\n        const currentProfile = memoryCache.get(uid);\n        if (currentProfile) {\n          memoryCache.set(uid, {\n            ...currentProfile,\n            settings: { ...currentProfile.settings, ...settings }\n          });\n        }\n        \n        return;\n      } catch (error: any) {\n        console.error(`Error updating user settings (attempt ${retries + 1}):`, error);\n        if (error.code === 'unavailable' || error.code === 'failed-precondition') {\n          // If offline, update memory cache\n          console.log('Device is offline, settings will be synced when online');\n          const currentProfile = memoryCache.get(uid);\n          if (currentProfile) {\n            memoryCache.set(uid, {\n              ...currentProfile,\n              settings: { ...currentProfile.settings, ...settings }\n            });\n          }\n          return;\n        }\n        retries++;\n        if (retries < MAX_RETRIES) {\n          await delay(RETRY_DELAY);\n        }\n      }\n    }\n  },\n\n  async isAnonymousUser(uid: string): Promise<boolean> {\n    await ensureFirestoreInitialized();\n    try {\n      const userProfile = await this.getUserProfile(uid);\n      return userProfile?.isAnonymous || false;\n    } catch (error: any) {\n      console.error('Error checking anonymous status:', error);\n      if (error.code === 'unavailable' || error.code === 'failed-precondition') {\n        // If offline, use cached data\n        console.log('Device is offline, using cached data');\n        const cachedProfile = memoryCache.get(uid);\n        return cachedProfile?.isAnonymous || false;\n      }\n      return true; // Default to true if error\n    }\n  }\n};\n\n// Add a function to preload user profile in background\nexport const preloadUserProfile = async (uid: string): Promise<void> => {\n  try {\n    if (memoryCache.has(uid) && isCacheValid(uid)) {\n      return; // Already in cache\n    }\n    const userProfile = await userService.getUserProfile(uid);\n    console.log('Profile preloaded successfully for user:', uid);\n  } catch (error) {\n    console.error('Error preloading profile:', error);\n    // Silently fail on preload\n  }\n}; ","import React, { useState, useEffect } from 'react';\nimport { \n  View, \n  StyleSheet, \n  Image, \n  TouchableOpacity, \n  KeyboardAvoidingView, \n  Platform,\n  ScrollView,\n  Alert\n} from 'react-native';\nimport { \n  Text, \n  TextInput, \n  Button, \n  Checkbox,\n  Surface,\n  ActivityIndicator,\n  useTheme,\n  Divider\n} from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { Ionicons } from '@expo/vector-icons';\nimport AnimatedWelcome from '../components/AnimatedWelcome';\nimport { Storage } from '../utils/storage';\nimport { auth } from '../config/firebase';\nimport { GoogleAuthProvider, signInWithCredential, signInWithEmailAndPassword, onAuthStateChanged, signInAnonymously } from 'firebase/auth';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\nimport { ResponseType } from 'expo-auth-session';\nimport { userService } from '../services/userService';\nimport { createUserWithEmailAndPassword, sendPasswordResetEmail, sendEmailVerification } from 'firebase/auth';\n\nWebBrowser.maybeCompleteAuthSession();\n\ntype LoginScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Login'>;\n\nexport default function LoginScreen() {\n  const navigation = useNavigation<LoginScreenNavigationProp>();\n  const theme = useTheme();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const [request, response, promptAsync] = Google.useAuthRequest({\n    clientId: '865106052518-26mpbiv13vgjn77ck7dtroo8e57b6jql.apps.googleusercontent.com',\n    responseType: ResponseType.Token,\n    scopes: ['profile', 'email'],\n    redirectUri: 'https://auth.expo.io/@piyushbhatti32/fresh-task-manager',\n  });\n\n  useEffect(() => {\n    checkStoredCredentials();\n    \n    // Hide welcome animation after 6 seconds\n    const timer = setTimeout(() => {\n      setShowWelcome(false);\n    }, 6000);\n    \n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    if (response?.type === 'success') {\n      handleGoogleSignInSuccess(response.authentication?.accessToken);\n    }\n  }, [response]);\n\n  useEffect(() => {\n    // Check for existing auth state\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      // No need to navigate manually - AppNavigator will handle this\n      // based on auth.currentUser\n    });\n\n    // Cleanup subscription\n    return () => unsubscribe();\n  }, []);\n\n  const checkStoredCredentials = async () => {\n    try {\n      const storedEmail = await Storage.getItem('user_email');\n      const storedPassword = await Storage.getItem('user_password');\n      \n      if (storedEmail && storedPassword) {\n        setEmail(storedEmail);\n        setPassword(storedPassword);\n        setRememberMe(true);\n        // Auto login if credentials exist\n        handleLogin();\n      }\n    } catch (error) {\n      console.error('Error retrieving stored credentials:', error);\n    }\n  };\n\n  const handleLogin = async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Sign in with Firebase Auth\n      await signInWithEmailAndPassword(auth, email, password);\n      // Navigation will be handled automatically by AppNavigator\n    } catch (error: any) {\n      console.error('Login Error:', error);\n      let errorMessage = 'Login failed. Please check your credentials and try again.';\n      \n      switch (error.code) {\n        case 'auth/invalid-email':\n          errorMessage = 'Please enter a valid email address.';\n          break;\n        case 'auth/user-disabled':\n          errorMessage = 'This account has been disabled. Please contact support.';\n          break;\n        case 'auth/user-not-found':\n          errorMessage = 'No account found with this email. Please sign up first.';\n          break;\n        case 'auth/wrong-password':\n          errorMessage = 'Incorrect password. Please try again.';\n          break;\n        case 'auth/too-many-requests':\n          errorMessage = 'Too many failed attempts. Please try again later.';\n          break;\n        case 'auth/network-request-failed':\n          errorMessage = 'Network error. Please check your internet connection.';\n          break;\n        default:\n          errorMessage = 'Login failed. Please try again.';\n      }\n      \n      setError(errorMessage);\n      Alert.alert(\n        'Login Failed',\n        errorMessage,\n        [\n          {\n            text: 'Try Again',\n            onPress: () => setPassword('')\n          },\n          {\n            text: 'Forgot Password',\n            onPress: () => {\n              // TODO: Implement forgot password\n              Alert.alert('Coming Soon', 'Password reset functionality will be available soon.');\n            }\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel'\n          }\n        ]\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleSignInSuccess = async (accessToken: string | undefined) => {\n    if (!accessToken) {\n      setError('Failed to get access token');\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Create a Google credential with the token\n      const googleCredential = GoogleAuthProvider.credential(null, accessToken);\n      \n      // Sign-in the user with the credential\n      await signInWithCredential(auth, googleCredential);\n      // Navigation will be handled automatically by AppNavigator\n    } catch (error) {\n      console.error('Google Sign In Error:', error);\n      setError('Google sign in failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGoogleSignIn = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const result = await promptAsync();\n      \n      if (result?.type !== 'success') {\n        setError('Google sign in was cancelled or failed');\n      }\n    } catch (error) {\n      console.error('Google Sign In Error:', error);\n      setError('Google sign in failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleGuestLogin = async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Sign in anonymously with Firebase Auth\n      const userCredential = await signInAnonymously(auth);\n      \n      // Create a guest user profile\n      await userService.createUserProfile(userCredential.user);\n      \n      // Navigation will be handled automatically by AppNavigator\n    } catch (error: any) {\n      console.error('Guest Login Error:', error);\n      let errorMessage = 'Guest login failed. Please try again.';\n      \n      switch (error.code) {\n        case 'auth/admin-restricted-operation':\n          errorMessage = 'Guest login is currently disabled. Please sign in with email or Google.';\n          break;\n        case 'auth/network-request-failed':\n          errorMessage = 'Network error. Please check your internet connection.';\n          break;\n        case 'auth/too-many-requests':\n          errorMessage = 'Too many attempts. Please try again later.';\n          break;\n        default:\n          errorMessage = 'Unable to continue as guest. Please try another sign-in method.';\n      }\n      \n      setError(errorMessage);\n      // Show error in a more user-friendly way\n      Alert.alert(\n        'Guest Login Failed',\n        errorMessage,\n        [\n          {\n            text: 'Try Email Login',\n            onPress: () => setIsSignUp(false)\n          },\n          {\n            text: 'Try Google Login',\n            onPress: handleGoogleSignIn\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel'\n          }\n        ]\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSignUp = async () => {\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      Alert.alert(\n        'Password Mismatch',\n        'The passwords you entered do not match. Please try again.',\n        [{ text: 'OK' }]\n      );\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      \n      // Create user profile\n      await userService.createUserProfile(userCredential.user);\n      \n      // Send verification email\n      await sendEmailVerification(userCredential.user);\n      \n      // Show success message\n      Alert.alert(\n        'Account Created',\n        'A verification email has been sent to your email address. Please verify your email to continue.',\n        [\n          {\n            text: 'OK',\n            onPress: () => setIsSignUp(false)\n          }\n        ]\n      );\n    } catch (error: any) {\n      console.error('Sign Up Error:', error);\n      let errorMessage = 'Sign up failed. Please try again.';\n      \n      switch (error.code) {\n        case 'auth/email-already-in-use':\n          errorMessage = 'An account with this email already exists. Please log in instead.';\n          break;\n        case 'auth/invalid-email':\n          errorMessage = 'Please enter a valid email address.';\n          break;\n        case 'auth/operation-not-allowed':\n          errorMessage = 'Email/password accounts are not enabled. Please contact support.';\n          break;\n        case 'auth/weak-password':\n          errorMessage = 'Please choose a stronger password (at least 6 characters).';\n          break;\n        case 'auth/network-request-failed':\n          errorMessage = 'Network error. Please check your internet connection.';\n          break;\n        default:\n          errorMessage = 'Sign up failed. Please try again.';\n      }\n      \n      setError(errorMessage);\n      Alert.alert(\n        'Sign Up Failed',\n        errorMessage,\n        [\n          {\n            text: 'Try Again',\n            onPress: () => {\n              setPassword('');\n              setConfirmPassword('');\n            }\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel'\n          }\n        ]\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const validateForm = () => {\n    return email.includes('@') && password.length >= 6;\n  };\n\n  if (showWelcome) {\n    return <AnimatedWelcome onFinish={() => setShowWelcome(false)} />;\n  }\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.headerContainer}>\n          <View style={styles.logoContainer}>\n            <Surface style={styles.logoSurface}>\n              <Image \n                source={require('../../assets/icon.png')}\n                style={styles.logoImage}\n              />\n            </Surface>\n            <Text style={styles.appName}>Task Manager</Text>\n          </View>\n          <Text style={styles.tagline}>Organize your day, boost your productivity</Text>\n        </View>\n\n        <View style={styles.formContainer}>\n          <TextInput\n            label=\"Email\"\n            value={email}\n            onChangeText={setEmail}\n            mode=\"outlined\"\n            autoCapitalize=\"none\"\n            keyboardType=\"email-address\"\n            left={<TextInput.Icon icon=\"email\" />}\n            style={styles.input}\n          />\n          \n          <TextInput\n            label=\"Password\"\n            value={password}\n            onChangeText={setPassword}\n            mode=\"outlined\"\n            secureTextEntry={!showPassword}\n            right={\n              <TextInput.Icon \n                icon={showPassword ? \"eye-off\" : \"eye\"} \n                onPress={() => setShowPassword(!showPassword)} \n              />\n            }\n            left={<TextInput.Icon icon=\"lock\" />}\n            style={styles.input}\n          />\n          \n          {isSignUp && (\n            <TextInput\n              label=\"Confirm Password\"\n              value={confirmPassword}\n              onChangeText={setConfirmPassword}\n              mode=\"outlined\"\n              secureTextEntry={!showPassword}\n              right={\n                <TextInput.Icon \n                  icon={showPassword ? \"eye-off\" : \"eye\"} \n                  onPress={() => setShowPassword(!showPassword)} \n                />\n              }\n              left={<TextInput.Icon icon=\"lock\" />}\n              style={styles.input}\n            />\n          )}\n          \n          <View style={styles.checkboxContainer}>\n            <Checkbox\n              status={rememberMe ? 'checked' : 'unchecked'}\n              onPress={() => setRememberMe(!rememberMe)}\n            />\n            <Text style={styles.checkboxLabel}>Remember me</Text>\n            <TouchableOpacity style={styles.forgotPassword}>\n              <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n            </TouchableOpacity>\n          </View>\n          \n          {error && (\n            <Text style={styles.errorText}>{error}</Text>\n          )}\n          \n          <Button \n            mode=\"contained\" \n            onPress={isSignUp ? handleSignUp : handleLogin}\n            disabled={!validateForm() || isLoading}\n            loading={isLoading}\n            style={styles.loginButton}\n          >\n            {isSignUp ? 'Sign Up' : 'Log In'}\n          </Button>\n\n          <View style={styles.dividerContainer}>\n            <Divider style={styles.divider} />\n            <Text style={styles.dividerText}>OR</Text>\n            <Divider style={styles.divider} />\n          </View>\n\n          <Button \n            mode=\"outlined\" \n            onPress={handleGoogleSignIn}\n            disabled={isLoading}\n            icon=\"google\"\n            style={styles.googleButton}\n          >\n            Continue with Google\n          </Button>\n          \n          <Button \n            mode=\"outlined\" \n            onPress={handleGuestLogin}\n            style={styles.guestButton}\n          >\n            Continue as Guest\n          </Button>\n        </View>\n        \n        <View style={styles.footer}>\n          <Text style={styles.footerText}>\n            {isSignUp ? 'Already have an account?' : \"Don't have an account?\"}\n          </Text>\n          <TouchableOpacity onPress={() => setIsSignUp(!isSignUp)}>\n            <Text style={styles.signupText}>{isSignUp ? 'Log In' : 'Sign Up'}</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  scrollContent: {\n    flexGrow: 1,\n    paddingBottom: 24,\n    justifyContent: 'center',\n  },\n  headerContainer: {\n    alignItems: 'center',\n    padding: 32,\n    marginTop: 30,\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  logoSurface: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 4,\n    marginBottom: 16,\n    overflow: 'hidden',\n  },\n  logoImage: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n  },\n  appName: {\n    fontSize: 28,\n    fontWeight: 'bold',\n  },\n  tagline: {\n    fontSize: 16,\n    textAlign: 'center',\n    opacity: 0.7,\n  },\n  formContainer: {\n    padding: 24,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  checkboxLabel: {\n    marginLeft: 8,\n  },\n  forgotPassword: {\n    marginLeft: 'auto',\n  },\n  forgotPasswordText: {\n    color: '#007BFF',\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 16,\n  },\n  loginButton: {\n    marginBottom: 16,\n    paddingVertical: 8,\n  },\n  guestButton: {\n    marginBottom: 16,\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  footerText: {\n    marginRight: 8,\n  },\n  signupText: {\n    color: '#007BFF',\n    fontWeight: 'bold',\n  },\n  dividerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 20,\n  },\n  divider: {\n    flex: 1,\n    height: 1,\n  },\n  dividerText: {\n    marginHorizontal: 10,\n    color: '#666',\n  },\n  googleButton: {\n    marginBottom: 12,\n    borderColor: '#4285F4',\n  },\n}); ","import { MD3LightTheme } from 'react-native-paper';\nimport type { MD3Theme } from 'react-native-paper';\n\nconst baseFont = {\n  fontFamily: 'System',\n  fontSize: 16,\n  fontWeight: '400',\n  letterSpacing: 0,\n  lineHeight: 24,\n};\n\nexport const appTheme: MD3Theme = {\n  ...MD3LightTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    primary: '#6200EE',\n    primaryContainer: '#E8DEF8',\n    secondary: '#03DAC6',\n    secondaryContainer: '#CEFAF1',\n    tertiary: '#FB8C00',\n    tertiaryContainer: '#FFE0B2',\n    error: '#B00020',\n    errorContainer: '#FFDAD6',\n    background: '#F6F6F6',\n    surface: '#FFFFFF',\n    surfaceVariant: '#E7E0EC',\n    onPrimary: '#FFFFFF',\n    onPrimaryContainer: '#21005E',\n    onSecondary: '#000000',\n    onSecondaryContainer: '#00332D',\n    onTertiary: '#FFFFFF',\n    onTertiaryContainer: '#000000',\n    onError: '#FFFFFF',\n    onErrorContainer: '#410002',\n    onBackground: '#1C1B1F',\n    onSurface: '#1C1B1F',\n    onSurfaceVariant: '#49454F',\n    onSurfaceDisabled: '#1C1B1F61',\n    elevation: {\n      level0: 'transparent',\n      level1: '#F5F5F5',\n      level2: '#EEEEEE',\n      level3: '#E0E0E0',\n      level4: '#BDBDBD',\n      level5: '#9E9E9E',\n    },\n  },\n}; ","import React from 'react';\nimport { View, StyleSheet, FlatList, TouchableOpacity, Image } from 'react-native';\nimport { Text, Searchbar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { appTheme } from '../theme/AppTheme';\nimport { useTaskStore } from '../stores/taskStore';\nimport { Search } from 'lucide-react-native';\n\ntype TeamScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Main'>;\n\n// Sample team data\nconst teamMembers = [\n  {\n    id: '1',\n    name: 'John Doe',\n    role: 'Project Manager',\n    email: 'john.doe@example.com',\n    phone: '+1 (555) 123-4567',\n    avatar: 'https://ui-avatars.com/api/?name=John+Doe&background=0066FF&color=fff&size=128',\n  },\n  {\n    id: '2',\n    name: 'Sarah Johnson',\n    role: 'UI/UX Designer',\n    email: 'sarah.johnson@example.com',\n    phone: '+1 (555) 987-6543',\n    avatar: 'https://ui-avatars.com/api/?name=Sarah+Johnson&background=0066FF&color=fff&size=128',\n  },\n  {\n    id: '3',\n    name: 'Mike Chen',\n    role: 'Frontend Developer',\n    email: 'mike.chen@example.com',\n    phone: '+1 (555) 456-7890',\n    avatar: 'https://ui-avatars.com/api/?name=Mike+Chen&background=0066FF&color=fff&size=128',\n  },\n  {\n    id: '4',\n    name: 'Emily Rodriguez',\n    role: 'Backend Developer',\n    email: 'emily.rodriguez@example.com',\n    phone: '+1 (555) 234-5678',\n    avatar: 'https://ui-avatars.com/api/?name=Emily+Rodriguez&background=0066FF&color=fff&size=128',\n  },\n  {\n    id: '5',\n    name: 'David Kim',\n    role: 'QA Engineer',\n    email: 'david.kim@example.com',\n    phone: '+1 (555) 876-5432',\n    avatar: 'https://ui-avatars.com/api/?name=David+Kim&background=0066FF&color=fff&size=128',\n  },\n];\n\nexport default function TeamScreen() {\n  const navigation = useNavigation<TeamScreenNavigationProp>();\n  const { tasks } = useTaskStore();\n  const [searchQuery, setSearchQuery] = React.useState('');\n\n  // Get tasks assigned to each team member\n  const getAssignedTasks = (name: string) => {\n    // In a production app, you would use the proper property from the Task type\n    return tasks.filter(task => {\n      // Using type assertion to access a property that might not exist in the Task type\n      const taskAny = task as any;\n      return taskAny.assignee === name;\n    });\n  };\n\n  const filteredTeamMembers = teamMembers.filter(member => \n    member.name.toLowerCase().includes(searchQuery.toLowerCase()) || \n    member.role.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const renderTeamMember = ({ item }: { item: typeof teamMembers[0] }) => {\n    const assignedTasks = getAssignedTasks(item.name);\n    const pendingTasks = assignedTasks.filter(task => !task.completed).length;\n    const completedTasks = assignedTasks.filter(task => task.completed).length;\n\n    return (\n      <TouchableOpacity \n        style={styles.memberCard}\n        onPress={() => {\n          // In a real app, this would navigate to a team member detail screen\n          // For now, we'll just console log the team member details\n          console.log(`Team member selected: ${item.name}`);\n        }}\n      >\n        <Image \n          source={{ uri: item.avatar }} \n          style={styles.avatar} \n        />\n        <View style={styles.memberInfo}>\n          <Text style={styles.memberName}>{item.name}</Text>\n          <Text style={styles.memberRole}>{item.role}</Text>\n          <View style={styles.taskStats}>\n            <View style={styles.taskStat}>\n              <Text style={styles.taskStatNumber}>{pendingTasks}</Text>\n              <Text style={styles.taskStatLabel}>Pending</Text>\n            </View>\n            <View style={styles.taskStat}>\n              <Text style={styles.taskStatNumber}>{completedTasks}</Text>\n              <Text style={styles.taskStatLabel}>Completed</Text>\n            </View>\n            <View style={styles.taskStat}>\n              <Text style={styles.taskStatNumber}>{assignedTasks.length}</Text>\n              <Text style={styles.taskStatLabel}>Total</Text>\n            </View>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Team</Text>\n      </View>\n\n      <View style={styles.searchContainer}>\n        <Searchbar\n          placeholder=\"Search team members...\"\n          onChangeText={setSearchQuery}\n          value={searchQuery}\n          style={styles.searchBar}\n          inputStyle={styles.searchInput}\n          iconColor={appTheme.colors.onSurfaceVariant}\n          placeholderTextColor={appTheme.colors.onSurfaceVariant}\n          theme={{ colors: { text: appTheme.colors.onSurface } }}\n        />\n      </View>\n\n      <FlatList\n        data={filteredTeamMembers}\n        renderItem={renderTeamMember}\n        keyExtractor={item => item.id}\n        contentContainerStyle={styles.membersList}\n        showsVerticalScrollIndicator={false}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: appTheme.colors.background,\n  },\n  header: {\n    paddingHorizontal: 16,\n    paddingVertical: 16,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: appTheme.colors.onBackground,\n  },\n  searchContainer: {\n    paddingHorizontal: 16,\n    marginBottom: 16,\n  },\n  searchBar: {\n    backgroundColor: appTheme.colors.surface,\n    elevation: 0,\n    borderRadius: 8,\n  },\n  searchInput: {\n    color: appTheme.colors.onSurface,\n  },\n  membersList: {\n    padding: 16,\n  },\n  memberCard: {\n    backgroundColor: appTheme.colors.surface,\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    flexDirection: 'row',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.15,\n    shadowRadius: 3,\n    elevation: 2,\n  },\n  avatar: {\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n    marginRight: 16,\n    backgroundColor: appTheme.colors.primary,\n  },\n  memberInfo: {\n    flex: 1,\n  },\n  memberName: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: appTheme.colors.onSurface,\n    marginBottom: 4,\n  },\n  memberRole: {\n    fontSize: 14,\n    color: appTheme.colors.onSurfaceVariant,\n    marginBottom: 12,\n  },\n  taskStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  taskStat: {\n    alignItems: 'center',\n  },\n  taskStatNumber: {\n    fontSize: 16,\n    fontWeight: '700',\n    color: appTheme.colors.onSurface,\n  },\n  taskStatLabel: {\n    fontSize: 12,\n    color: appTheme.colors.onSurfaceVariant,\n  },\n}); ","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nexport type GroupMember = {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'member';\n};\n\nexport type GroupTask = {\n  id: string;\n  title: string;\n  completed: boolean;\n};\n\nexport type Group = {\n  id: string;\n  name: string;\n  description: string;\n  members: GroupMember[];\n  tasks: GroupTask[];\n  createdAt: number;\n};\n\nexport type GroupInvitation = {\n  id: string;\n  groupId: string;\n  groupName: string;\n  invitedBy: string;\n  invitedEmail: string;\n  status: 'pending' | 'accepted' | 'declined';\n  createdAt: number;\n};\n\ninterface GroupState {\n  groups: Group[];\n  invitations: GroupInvitation[];\n  createGroup: (name: string, description: string, userId: string, userName: string, userEmail: string) => Group;\n  updateGroup: (groupId: string, data: Partial<Group>) => void;\n  deleteGroup: (groupId: string) => void;\n  addMember: (groupId: string, member: GroupMember) => void;\n  removeMember: (groupId: string, memberId: string) => void;\n  addTask: (groupId: string, task: GroupTask) => void;\n  updateTask: (groupId: string, taskId: string, data: Partial<GroupTask>) => void;\n  deleteTask: (groupId: string, taskId: string) => void;\n  createInvitation: (groupId: string, groupName: string, invitedBy: string, invitedEmail: string) => GroupInvitation;\n  updateInvitationStatus: (invitationId: string, status: 'accepted' | 'declined') => void;\n}\n\nexport const useGroupStore = create<GroupState>()(\n  persist(\n    (set, get) => ({\n      groups: [],\n      invitations: [],\n      \n      createGroup: (name, description, userId, userName, userEmail) => {\n        const newGroup: Group = {\n          id: Date.now().toString(),\n          name,\n          description,\n          members: [\n            {\n              id: userId,\n              name: userName,\n              email: userEmail,\n              role: 'admin'\n            }\n          ],\n          tasks: [],\n          createdAt: Date.now()\n        };\n        \n        set(state => ({\n          groups: [...state.groups, newGroup]\n        }));\n        \n        return newGroup;\n      },\n      \n      updateGroup: (groupId, data) => {\n        set(state => ({\n          groups: state.groups.map(group => \n            group.id === groupId ? { ...group, ...data } : group\n          )\n        }));\n      },\n      \n      deleteGroup: (groupId) => {\n        set(state => ({\n          groups: state.groups.filter(group => group.id !== groupId)\n        }));\n      },\n      \n      addMember: (groupId, member) => {\n        set(state => ({\n          groups: state.groups.map(group => \n            group.id === groupId \n              ? { ...group, members: [...group.members, member] } \n              : group\n          )\n        }));\n      },\n      \n      removeMember: (groupId, memberId) => {\n        set(state => ({\n          groups: state.groups.map(group => \n            group.id === groupId \n              ? { ...group, members: group.members.filter(m => m.id !== memberId) } \n              : group\n          )\n        }));\n      },\n      \n      addTask: (groupId, task) => {\n        set(state => ({\n          groups: state.groups.map(group => \n            group.id === groupId \n              ? { ...group, tasks: [...group.tasks, task] } \n              : group\n          )\n        }));\n      },\n      \n      updateTask: (groupId, taskId, data) => {\n        set(state => ({\n          groups: state.groups.map(group => \n            group.id === groupId \n              ? { \n                  ...group, \n                  tasks: group.tasks.map(task => \n                    task.id === taskId ? { ...task, ...data } : task\n                  ) \n                } \n              : group\n          )\n        }));\n      },\n      \n      deleteTask: (groupId, taskId) => {\n        set(state => ({\n          groups: state.groups.map(group => \n            group.id === groupId \n              ? { ...group, tasks: group.tasks.filter(t => t.id !== taskId) } \n              : group\n          )\n        }));\n      },\n      \n      createInvitation: (groupId, groupName, invitedBy, invitedEmail) => {\n        const newInvitation: GroupInvitation = {\n          id: Date.now().toString(),\n          groupId,\n          groupName,\n          invitedBy,\n          invitedEmail,\n          status: 'pending',\n          createdAt: Date.now()\n        };\n        \n        set(state => ({\n          invitations: [...state.invitations, newInvitation]\n        }));\n        \n        return newInvitation;\n      },\n      \n      updateInvitationStatus: (invitationId, status) => {\n        set(state => ({\n          invitations: state.invitations.map(inv => \n            inv.id === invitationId ? { ...inv, status } : inv\n          )\n        }));\n        \n        // If accepted, add the user to the group\n        if (status === 'accepted') {\n          const invitation = get().invitations.find(inv => inv.id === invitationId);\n          if (invitation) {\n            // This would typically involve more logic to get user details\n            // and add them to the group\n          }\n        }\n      },\n    }),\n    {\n      name: 'group-storage',\n    }\n  )\n); ","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { Storage } from '../utils/storage';\n\n// Define the user type\nexport type User = {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n};\n\n// Define auth context type\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => Promise<void>;\n  signup: (name: string, email: string, password: string) => Promise<boolean>;\n  updateUserProfile: (data: Partial<User>) => Promise<void>;\n}\n\n// Create the auth context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Auth provider props\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\n// Auth provider component\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check for existing auth on mount\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const userData = await Storage.getItem('user');\n        if (userData) {\n          setUser(JSON.parse(userData));\n        }\n      } catch (error) {\n        console.error('Error loading user data', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (email: string, password: string): Promise<boolean> => {\n    setIsLoading(true);\n    try {\n      // In a real app, you would validate credentials with an API\n      // This is a mock implementation\n      if (email && password) {\n        const mockUser: User = {\n          id: '1',\n          name: 'Test User',\n          email: email,\n        };\n        \n        await Storage.setItem('user', JSON.stringify(mockUser));\n        setUser(mockUser);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login error', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = async (): Promise<void> => {\n    try {\n      await Storage.removeItem('user');\n      setUser(null);\n    } catch (error) {\n      console.error('Logout error', error);\n    }\n  };\n\n  // Signup function\n  const signup = async (name: string, email: string, password: string): Promise<boolean> => {\n    setIsLoading(true);\n    try {\n      // In a real app, you would create a user with an API\n      // This is a mock implementation\n      if (name && email && password) {\n        const newUser: User = {\n          id: Date.now().toString(),\n          name,\n          email,\n        };\n        \n        await Storage.setItem('user', JSON.stringify(newUser));\n        setUser(newUser);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Signup error', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Update user profile\n  const updateUserProfile = async (data: Partial<User>): Promise<void> => {\n    try {\n      if (user) {\n        const updatedUser = { ...user, ...data };\n        await Storage.setItem('user', JSON.stringify(updatedUser));\n        setUser(updatedUser);\n      }\n    } catch (error) {\n      console.error('Update profile error', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated: !!user,\n        isLoading,\n        login,\n        logout,\n        signup,\n        updateUserProfile,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext; ","import React, { useState } from 'react';\nimport { \n  View, \n  StyleSheet, \n  FlatList, \n  TouchableOpacity, \n  ScrollView \n} from 'react-native';\nimport { \n  Text, \n  Searchbar, \n  Button, \n  FAB, \n  Divider, \n  Card, \n  Avatar, \n  Badge, \n  Chip, \n  IconButton, \n  Menu \n} from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { useGroupStore, Group, GroupInvitation } from '../stores/groupStore';\nimport { RootStackParamList } from '../navigation/types';\nimport { useAuth } from '../contexts/AuthContext';\n\ntype GroupsScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Main'>;\n\nexport const GroupsScreen = () => {\n  const navigation = useNavigation<GroupsScreenNavigationProp>();\n  const { groups, invitations } = useGroupStore();\n  const { user } = useAuth();\n  \n  // State\n  const [searchQuery, setSearchQuery] = useState('');\n  const [menuVisible, setMenuVisible] = useState<string | null>(null);\n  \n  // Filter groups by search query\n  const filteredGroups = groups.filter(group => \n    group.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    group.description.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n  \n  // Filter pending invitations\n  const pendingInvitations = invitations.filter(\n    inv => inv.status === 'pending' && inv.invitedEmail === user?.email\n  );\n  \n  // Handle group selection\n  const handleSelectGroup = (groupId: string) => {\n    navigation.navigate('GroupDetail', { groupId });\n  };\n  \n  // Create new group\n  const handleCreateGroup = () => {\n    navigation.navigate('CreateGroup');\n  };\n\n  // Handle invitation response\n  const handleInvitationResponse = (invitationId: string, accept: boolean) => {\n    const { updateInvitationStatus } = useGroupStore.getState();\n    updateInvitationStatus(invitationId, accept ? 'accepted' : 'declined');\n  };\n  \n  // Toggle menu\n  const openMenu = (groupId: string) => setMenuVisible(groupId);\n  const closeMenu = () => setMenuVisible(null);\n  \n  // Render group item\n  const renderGroupItem = ({ item }: { item: Group }) => {\n    const isAdmin = item.members.some(\n      member => member.id === user?.id && member.role === 'admin'\n    );\n    \n    return (\n      <Card style={styles.groupCard} onPress={() => handleSelectGroup(item.id)}>\n        <Card.Content>\n          <View style={styles.groupHeader}>\n            <View style={styles.groupTitleContainer}>\n              <Text style={styles.groupName}>{item.name}</Text>\n              {isAdmin && <Chip compact style={styles.adminChip}>Admin</Chip>}\n            </View>\n            \n            <Menu\n              visible={menuVisible === item.id}\n              onDismiss={closeMenu}\n              anchor={\n                <IconButton\n                  icon=\"dots-vertical\"\n                  onPress={() => openMenu(item.id)}\n                />\n              }\n            >\n              <Menu.Item title=\"View Details\" onPress={() => {\n                closeMenu();\n                handleSelectGroup(item.id);\n              }} />\n              {isAdmin && (\n                <Menu.Item title=\"Invite Members\" onPress={() => {\n                  closeMenu();\n                  navigation.navigate('InviteMembers', { groupId: item.id });\n                }} />\n              )}\n              {isAdmin && (\n                <Menu.Item title=\"Delete Group\" onPress={() => {\n                  closeMenu();\n                  useGroupStore.getState().deleteGroup(item.id);\n                }} />\n              )}\n            </Menu>\n          </View>\n          \n          <Text style={styles.groupDescription}>{item.description}</Text>\n          \n          <View style={styles.statsContainer}>\n            <View style={styles.stat}>\n              <Text style={styles.statNumber}>{item.members.length}</Text>\n              <Text style={styles.statLabel}>Members</Text>\n            </View>\n            <View style={styles.stat}>\n              <Text style={styles.statNumber}>{item.tasks.length}</Text>\n              <Text style={styles.statLabel}>Tasks</Text>\n            </View>\n          </View>\n          \n          <View style={styles.memberAvatars}>\n            {item.members.slice(0, 3).map((member, index) => (\n              <Avatar.Text\n                key={member.id}\n                size={36}\n                label={member.name.substring(0, 2).toUpperCase()}\n                style={[styles.memberAvatar, { zIndex: 5 - index }]}\n              />\n            ))}\n            {item.members.length > 3 && (\n              <Avatar.Text\n                size={36}\n                label={`+${item.members.length - 3}`}\n                style={[styles.memberAvatar, { zIndex: 1 }]}\n              />\n            )}\n          </View>\n        </Card.Content>\n      </Card>\n    );\n  };\n  \n  // Render invitation item\n  const renderInvitationItem = ({ item }: { item: GroupInvitation }) => (\n    <Card style={styles.invitationCard}>\n      <Card.Content>\n        <Text style={styles.invitationTitle}>\n          You've been invited to join \"{item.groupName}\"\n        </Text>\n        <View style={styles.invitationActions}>\n          <Button \n            mode=\"contained\" \n            onPress={() => handleInvitationResponse(item.id, true)}\n            style={styles.acceptButton}\n          >\n            Accept\n          </Button>\n          <Button \n            mode=\"outlined\" \n            onPress={() => handleInvitationResponse(item.id, false)}\n            style={styles.declineButton}\n          >\n            Decline\n          </Button>\n        </View>\n      </Card.Content>\n    </Card>\n  );\n  \n  // Empty state\n  const renderEmptyState = () => (\n    <View style={styles.emptyContainer}>\n      <Text style={styles.emptyTitle}>No Groups Yet</Text>\n      <Text style={styles.emptySubtitle}>\n        Create a group to collaborate with your team\n      </Text>\n      <Button \n        mode=\"contained\" \n        onPress={handleCreateGroup}\n        style={styles.createButton}\n        icon=\"plus\"\n      >\n        Create a Group\n      </Button>\n    </View>\n  );\n  \n  return (\n    <View style={styles.container}>\n      <Searchbar\n        placeholder=\"Search groups...\"\n        onChangeText={setSearchQuery}\n        value={searchQuery}\n        style={styles.searchBar}\n        iconColor=\"#3498db\"\n      />\n      \n      {pendingInvitations.length > 0 && (\n        <View style={styles.invitationsContainer}>\n          <Text style={styles.sectionTitle}>Invitations</Text>\n          <FlatList\n            data={pendingInvitations}\n            keyExtractor={(item) => item.id}\n            renderItem={renderInvitationItem}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={styles.invitationsList}\n          />\n        </View>\n      )}\n      \n      <Text style={styles.sectionTitle}>My Groups</Text>\n      \n      {filteredGroups.length > 0 ? (\n        <FlatList\n          data={filteredGroups}\n          keyExtractor={(item) => item.id}\n          renderItem={renderGroupItem}\n          showsVerticalScrollIndicator={false}\n          contentContainerStyle={styles.groupsList}\n        />\n      ) : (\n        renderEmptyState()\n      )}\n      \n      <FAB\n        icon=\"plus\"\n        style={styles.fab}\n        onPress={handleCreateGroup}\n        color=\"#fff\"\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    padding: 16,\n  },\n  searchBar: {\n    marginBottom: 16,\n    backgroundColor: '#111',\n    borderRadius: 8,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 12,\n    marginTop: 8,\n  },\n  groupsList: {\n    paddingBottom: 80,\n  },\n  groupCard: {\n    marginBottom: 16,\n    backgroundColor: '#111',\n    borderRadius: 8,\n  },\n  groupHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 8,\n  },\n  groupTitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  groupName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginRight: 8,\n  },\n  adminChip: {\n    backgroundColor: '#3498db',\n    height: 24,\n  },\n  groupDescription: {\n    color: '#ccc',\n    marginBottom: 16,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  stat: {\n    marginRight: 24,\n  },\n  statNumber: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#3498db',\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#999',\n  },\n  memberAvatars: {\n    flexDirection: 'row',\n  },\n  memberAvatar: {\n    marginLeft: -8,\n    backgroundColor: '#3498db',\n  },\n  invitationsContainer: {\n    marginBottom: 16,\n  },\n  invitationsList: {\n    paddingRight: 16,\n  },\n  invitationCard: {\n    width: 280,\n    marginRight: 12,\n    backgroundColor: '#111',\n    borderRadius: 8,\n    borderLeftWidth: 4,\n    borderLeftColor: '#3498db',\n  },\n  invitationTitle: {\n    fontSize: 16,\n    color: '#fff',\n    marginBottom: 12,\n  },\n  invitationActions: {\n    flexDirection: 'row',\n  },\n  acceptButton: {\n    marginRight: 8,\n    backgroundColor: '#3498db',\n  },\n  declineButton: {\n    borderColor: '#666',\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  emptyTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 8,\n  },\n  emptySubtitle: {\n    fontSize: 16,\n    color: '#ccc',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  createButton: {\n    backgroundColor: '#3498db',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#3498db',\n  },\n});\n\nexport default GroupsScreen; ","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, Alert, TouchableOpacity, Text, ScrollView, Modal, ActivityIndicator } from 'react-native';\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList, MainTabsParamList } from '../navigation/types';\nimport { appTheme } from '../theme/AppTheme';\nimport { useTaskStore } from '../stores/taskStore';\nimport TaskForm from '../components/TaskForm';\nimport { Task, TaskTemplate, Priority } from '../types/Task';\nimport { Button, Chip, Divider } from 'react-native-paper';\nimport { MaterialCommunityIcons, FontAwesome5 } from '@expo/vector-icons';\n\ntype CreateTaskScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\ntype CreateTaskRouteProp = RouteProp<RootStackParamList, 'CreateTask'>;\n\ntype CreateTaskParams = {\n  templateId?: string;\n};\n\n// Quick actions for common task types\nconst QUICK_ACTIONS = [\n  { id: 'meeting', name: 'Meeting', icon: 'calendar-account', color: '#4285F4' },\n  { id: 'email', name: 'Email', icon: 'email-outline', color: '#EA4335' },\n  { id: 'call', name: 'Call', icon: 'phone', color: '#34A853' },\n  { id: 'deadline', name: 'Deadline', icon: 'clock-time-four-outline', color: '#FBBC05' },\n  { id: 'reminder', name: 'Reminder', icon: 'bell-outline', color: '#805AD5' },\n];\n\nexport default function CreateTaskScreen() {\n  const navigation = useNavigation<CreateTaskScreenNavigationProp>();\n  const route = useRoute<CreateTaskRouteProp>();\n  const params = route.params as CreateTaskParams;\n  const { addTask, fetchTasks, templates = [], createTaskFromTemplate } = useTaskStore();\n  const [isFormVisible, setIsFormVisible] = useState(true);\n  const [showTemplateSelector, setShowTemplateSelector] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [recentTemplates, setRecentTemplates] = useState<TaskTemplate[]>([]);\n\n  // Check if a template ID was passed as a param\n  useEffect(() => {\n    if (params?.templateId) {\n      const template = templates.find(t => t.id === params.templateId);\n      if (template) {\n        handleUseTemplate(template);\n      }\n    }\n    \n    // Get most recently used templates (up to 3)\n    if (templates.length > 0) {\n      setRecentTemplates(templates.slice(0, 3));\n    }\n  }, [params?.templateId, templates]);\n\n  const handleSave = async (taskData: Omit<Task, 'id' | 'createdAt' | 'updatedAt'>) => {\n    try {\n      setIsLoading(true);\n      \n      // Ensure all required fields are present\n      const validatedTaskData = {\n        ...taskData,\n        title: taskData.title || '',\n        description: taskData.description || '',\n        priority: taskData.priority || 'low',\n        completed: taskData.completed || false,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n\n      await addTask(validatedTaskData);\n      // Don't fetch tasks again as it causes duplication\n      // await fetchTasks();\n      \n      // Add a small delay to ensure the store is updated\n      await new Promise(resolve => setTimeout(resolve, 100));\n      \n      // Use navigation.pop() instead of goBack()\n      if (navigation.canGoBack()) {\n        navigation.goBack();\n      } else {\n        navigation.navigate('MainTabs', { screen: 'Home' });\n      }\n    } catch (error) {\n      console.error('Error creating task:', error);\n      Alert.alert('Error', 'Failed to create task. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleUseTemplate = async (template: TaskTemplate) => {\n    try {\n      setIsLoading(true);\n      await createTaskFromTemplate(template);\n      // No need to fetch tasks again since the task will be automatically added to the state\n      Alert.alert(\n        'Task Created',\n        'A new task has been created from the template.',\n        [\n          {\n            text: 'OK',\n            onPress: () => {\n              if (navigation.canGoBack()) {\n                navigation.goBack();\n              } else {\n                navigation.navigate('MainTabs', { screen: 'Home' });\n              }\n            }\n          }\n        ]\n      );\n    } catch (error) {\n      console.error('Error using template:', error);\n      Alert.alert('Error', 'Failed to create task from template');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQuickAction = async (actionId: string) => {\n    try {\n      setIsLoading(true);\n      const action = QUICK_ACTIONS.find(a => a.id === actionId);\n      \n      if (!action) return;\n      \n      // Create a task with predefined properties based on the quick action\n      const now = new Date();\n      const dueDate = new Date();\n      dueDate.setHours(now.getHours() + 2); // Default due date is 2 hours from now\n      \n      const taskData = {\n        title: `New ${action.name}`,\n        description: '',\n        priority: actionId === 'deadline' ? 'high' as Priority : 'medium' as Priority,\n        dueDate: dueDate.toISOString(),\n        completed: false,\n      };\n      \n      await addTask(taskData);\n      // Don't fetch tasks again as it causes duplication\n      // await fetchTasks();\n      \n      Alert.alert(\n        'Quick Task Created',\n        `A new ${action.name.toLowerCase()} task has been created.`,\n        [\n          {\n            text: 'OK',\n            onPress: () => {\n              if (navigation.canGoBack()) {\n                navigation.goBack();\n              } else {\n                navigation.navigate('MainTabs', { screen: 'Home' });\n              }\n            }\n          }\n        ]\n      );\n    } catch (error) {\n      console.error('Error creating quick task:', error);\n      Alert.alert('Error', 'Failed to create quick task. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getPriorityColor = (priority: string = 'medium') => {\n    switch (priority.toLowerCase()) {\n      case 'high':\n        return '#FF5252';\n      case 'medium':\n        return '#FFB300';\n      case 'low':\n        return '#69F0AE';\n      default:\n        return '#BDBDBD';\n    }\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: appTheme.colors.background }]}>\n      {isLoading && (\n        <View style={styles.loadingOverlay}>\n          <ActivityIndicator size=\"large\" color={appTheme.colors.primary} />\n        </View>\n      )}\n      \n      <TaskForm\n        isVisible={isFormVisible}\n        onClose={() => navigation.goBack()}\n        onSave={handleSave}\n      />\n\n      {/* Float action buttons for template and voice input */}\n      <View style={styles.floatingActions}>\n        <TouchableOpacity \n          style={[styles.floatingButton, { backgroundColor: appTheme.colors.surface }]}\n          onPress={() => setShowTemplateSelector(true)}\n        >\n          <MaterialCommunityIcons name=\"lightning-bolt\" size={24} color={appTheme.colors.primary} />\n        </TouchableOpacity>\n      </View>\n\n      {/* Enhanced template selector modal */}\n      <Modal\n        visible={showTemplateSelector}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setShowTemplateSelector(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.templateSelector}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Create Task From Template</Text>\n              <TouchableOpacity onPress={() => setShowTemplateSelector(false)}>\n                <MaterialCommunityIcons name=\"close\" size={24} color=\"#000\" />\n              </TouchableOpacity>\n            </View>\n            \n            {/* Quick action chips */}\n            <Text style={styles.sectionTitle}>Quick Create</Text>\n            <View style={styles.quickActions}>\n              {QUICK_ACTIONS.map(action => (\n                <TouchableOpacity\n                  key={action.id}\n                  style={[styles.quickAction, { backgroundColor: action.color + '20' }]}\n                  onPress={() => {\n                    handleQuickAction(action.id);\n                    setShowTemplateSelector(false);\n                  }}\n                >\n                  <MaterialCommunityIcons name={action.icon} size={24} color={action.color} />\n                  <Text style={[styles.quickActionText, { color: action.color }]}>\n                    {action.name}\n                  </Text>\n                </TouchableOpacity>\n              ))}\n            </View>\n            \n            <Divider style={styles.divider} />\n            \n            {/* Recent templates section */}\n            {recentTemplates.length > 0 && (\n              <>\n                <Text style={styles.sectionTitle}>Recent Templates</Text>\n                <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.recentTemplates}>\n                  {recentTemplates.map(template => (\n                    <TouchableOpacity\n                      key={template.id}\n                      style={[\n                        styles.recentTemplate,\n                        { borderLeftColor: getPriorityColor(template.priority) }\n                      ]}\n                      onPress={() => {\n                        handleUseTemplate(template);\n                        setShowTemplateSelector(false);\n                      }}\n                    >\n                      <MaterialCommunityIcons \n                        name=\"file-document-outline\" \n                        size={20} \n                        color={getPriorityColor(template.priority)} \n                      />\n                      <Text style={styles.recentTemplateName} numberOfLines={1}>\n                        {template.name}\n                      </Text>\n                    </TouchableOpacity>\n                  ))}\n                </ScrollView>\n                \n                <Divider style={styles.divider} />\n              </>\n            )}\n            \n            {/* All templates section */}\n            <Text style={styles.sectionTitle}>All Templates</Text>\n            <ScrollView style={styles.templateList}>\n              {templates.length === 0 ? (\n                <View style={styles.emptyState}>\n                  <MaterialCommunityIcons name=\"file-document-outline\" size={48} color=\"#888\" />\n                  <Text style={styles.emptyText}>No templates found</Text>\n                  <Text style={styles.emptySubtext}>Create templates in the Templates tab</Text>\n                </View>\n              ) : (\n                templates.map(template => (\n                  <TouchableOpacity \n                    key={template.id}\n                    style={[\n                      styles.templateItem,\n                      {\n                        borderLeftColor: getPriorityColor(template.priority),\n                        borderLeftWidth: 4\n                      }\n                    ]}\n                    onPress={() => {\n                      handleUseTemplate(template);\n                      setShowTemplateSelector(false);\n                    }}\n                  >\n                    <View>\n                      <Text style={styles.templateName}>{template.name}</Text>\n                      <Text style={styles.templateDesc} numberOfLines={2}>\n                        {template.description || template.title}\n                      </Text>\n                      {template.subtasks && template.subtasks.length > 0 && (\n                        <Text style={styles.templateMeta}>\n                          {template.subtasks.length} subtasks\n                        </Text>\n                      )}\n                    </View>\n                    <MaterialCommunityIcons name=\"arrow-right\" size={24} color=\"#888\" />\n                  </TouchableOpacity>\n                ))\n              )}\n            </ScrollView>\n\n            <Button \n              mode=\"outlined\" \n              onPress={() => {\n                navigation.navigate('MainTabs', { screen: 'Templates' });\n                setShowTemplateSelector(false);\n              }}\n              style={styles.browseButton}\n            >\n              Manage Templates\n            </Button>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  loadingOverlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n  },\n  floatingActions: {\n    position: 'absolute',\n    right: 16,\n    bottom: 80,\n    flexDirection: 'row',\n  },\n  floatingButton: {\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    marginLeft: 16,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'flex-end',\n  },\n  templateSelector: {\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    padding: 16,\n    maxHeight: '85%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n    paddingBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    color: '#333',\n  },\n  quickActions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 16,\n  },\n  quickAction: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 16,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  quickActionText: {\n    marginLeft: 8,\n    fontWeight: '500',\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  recentTemplates: {\n    flexDirection: 'row',\n    marginBottom: 8,\n  },\n  recentTemplate: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 16,\n    marginRight: 8,\n    borderLeftWidth: 3,\n  },\n  recentTemplateName: {\n    marginLeft: 8,\n    fontWeight: '500',\n    maxWidth: 120,\n  },\n  templateList: {\n    marginBottom: 16,\n    maxHeight: 350,\n  },\n  templateItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#f8f8f8',\n    borderRadius: 8,\n    marginBottom: 12,\n    elevation: 1,\n  },\n  templateName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  templateDesc: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n  },\n  templateMeta: {\n    fontSize: 12,\n    color: '#888',\n  },\n  emptyState: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  emptyText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 16,\n    marginBottom: 8,\n  },\n  emptySubtext: {\n    fontSize: 14,\n    color: '#666',\n    textAlign: 'center',\n  },\n  browseButton: {\n    marginTop: 8,\n    marginBottom: 8,\n  }\n}); ","import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { useTaskStore } from '../stores/taskStore';\nimport TaskForm from '../components/TaskForm';\nimport { Task } from '../types/Task';\nimport { Portal, ActivityIndicator, Snackbar } from 'react-native-paper';\n\ntype EditTaskScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\ntype EditTaskScreenRouteProp = RouteProp<RootStackParamList, 'EditTask'>;\n\nexport default function EditTaskScreen() {\n  const navigation = useNavigation<EditTaskScreenNavigationProp>();\n  const route = useRoute<EditTaskScreenRouteProp>();\n  const { taskId } = route.params;\n  const { tasks, updateTask } = useTaskStore();\n  const [task, setTask] = useState<Task | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showSnackbar, setShowSnackbar] = useState(false);\n\n  useEffect(() => {\n    const loadTask = async () => {\n      try {\n        if (!taskId || typeof taskId !== 'string') {\n          console.error('Invalid task ID:', taskId);\n          setError('Invalid task ID');\n          setShowSnackbar(true);\n          return;\n        }\n\n        const currentTask = tasks.find(t => t.id === taskId);\n        if (currentTask) {\n          console.log('EditTaskScreen - Loading task:', currentTask);\n          setTask(currentTask);\n        } else {\n          console.error('Task not found with ID:', taskId);\n          setError('Task not found');\n          setShowSnackbar(true);\n        }\n      } catch (err) {\n        console.error('Error loading task:', err);\n        setError('Failed to load task');\n        setShowSnackbar(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadTask();\n  }, [taskId, tasks]);\n\n  const handleSave = async (updatedTask: Task) => {\n    try {\n      if (!updatedTask.id || typeof updatedTask.id !== 'string') {\n        throw new Error('Invalid task ID');\n      }\n\n      setLoading(true);\n      console.log('EditTaskScreen - Saving task:', updatedTask);\n      await updateTask({\n        ...updatedTask,\n        id: taskId, // Ensure we use the original taskId\n      });\n      navigation.goBack();\n    } catch (error) {\n      console.error('Error updating task:', error);\n      setError(error instanceof Error ? error.message : 'Failed to update task');\n      setShowSnackbar(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={[styles.container, styles.centered]}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n\n  if (!task) {\n    return null;\n  }\n\n  return (\n    <View style={styles.container}>\n      <Portal>\n        <TaskForm\n          task={task}\n          isVisible={true}\n          onClose={() => navigation.goBack()}\n          onSave={handleSave}\n        />\n      </Portal>\n      <Snackbar\n        visible={showSnackbar}\n        onDismiss={() => setShowSnackbar(false)}\n        duration={3000}\n        action={{\n          label: 'Close',\n          onPress: () => setShowSnackbar(false),\n        }}>\n        {error}\n      </Snackbar>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  centered: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n});","import React, { useState, useEffect, useCallback, useMemo, Suspense } from 'react';\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  Platform,\n  KeyboardAvoidingView,\n  Alert,\n  Animated,\n} from 'react-native';\nimport { \n  TextInput,\n  Button,\n  Switch,\n  Text, \n  Avatar, \n  Divider, \n  List,\n  SegmentedButtons,\n  Portal,\n  Dialog,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport { auth } from '../config/firebase';\nimport { userService, preloadUserProfile } from '../services/userService';\nimport { UserProfile } from '../types/user';\nimport { sendEmailVerification } from 'firebase/auth';\nimport defaultAvatar from '../assets/default-avatar.png';\n\n// Skeleton component to show while loading user profile data\nconst ProfileSkeleton = () => {\n  // Create a simple opacity animation for the shimmer effect\n  const [opacity] = useState(new Animated.Value(0.3));\n  \n  useEffect(() => {\n    // Create a repeating animation\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(opacity, {\n          toValue: 0.8,\n          duration: 800,\n          useNativeDriver: true,\n        }),\n        Animated.timing(opacity, {\n          toValue: 0.3,\n          duration: 800,\n          useNativeDriver: true,\n        })\n      ])\n    ).start();\n  }, []);\n\n  const AnimatedView = ({ style }) => (\n    <Animated.View style={[style, { opacity }]} />\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <AnimatedView style={styles.avatarSkeleton} />\n        <AnimatedView style={styles.buttonSkeleton} />\n      </View>\n      \n      <View style={styles.form}>\n        <AnimatedView style={styles.inputSkeleton} />\n        <AnimatedView style={styles.textSkeleton} />\n        \n        <Divider style={styles.divider} />\n        \n        <AnimatedView style={styles.subheaderSkeleton} />\n        <AnimatedView style={styles.listItemSkeleton} />\n        <AnimatedView style={styles.listItemSkeleton} />\n        <AnimatedView style={styles.listItemSkeleton} />\n      </View>\n    </View>\n  );\n};\n\n// Helper function to create a default profile with safe values\nconst createDefaultProfile = (user: any): UserProfile => {\n  return {\n    uid: user.uid,\n    email: user.email || '',\n    displayName: user.displayName || 'New User',\n    photoURL: null,\n    createdAt: new Date(),\n    lastLogin: new Date(),\n    isEmailVerified: !!user.emailVerified,\n    isAnonymous: !!user.isAnonymous,\n    settings: {\n      theme: 'system',\n      notifications: true,\n      language: 'en',\n      taskView: 'list'\n    }\n  };\n};\n\nexport default function ProfileScreen({ navigation }: any) {\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [displayName, setDisplayName] = useState('');\n  const [showSettingsDialog, setShowSettingsDialog] = useState(false);\n  const [selectedSetting, setSelectedSetting] = useState<string>('');\n  const [tempSettings, setTempSettings] = useState<any>(null);\n\n  const loadProfile = useCallback(async () => {\n    const user = auth.currentUser;\n    if (!user) {\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const userProfile = await userService.getUserProfile(user.uid);\n      if (userProfile) {\n        setProfile(userProfile);\n        setDisplayName(userProfile.displayName || '');\n      } else {\n        // Create a default profile if none exists\n        const defaultProfile = createDefaultProfile(user);\n        setProfile(defaultProfile);\n        setDisplayName(defaultProfile.displayName);\n      }\n    } catch (error) {\n      console.error('Error loading profile:', error);\n      // Create a default profile on error\n      if (user) {\n        const defaultProfile = createDefaultProfile(user);\n        setProfile(defaultProfile);\n        setDisplayName(defaultProfile.displayName);\n      }\n      // Show a toast or some non-blocking notification instead of an alert\n      console.log('Profile loading failed, using default profile');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Preload profile on app start\n  useEffect(() => {\n    const user = auth.currentUser;\n    if (user) {\n      // Preload profile in background for next time\n      preloadUserProfile(user.uid).catch(error => \n        console.error('Error preloading profile:', error)\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    // Set a timeout to hide the loading state after a maximum of 2 seconds\n    // even if the profile is still loading, to improve perceived performance\n    const timer = setTimeout(() => {\n      if (isLoading) {\n        setIsLoading(false);\n        // If still loading after timeout, create a default profile\n        if (!profile && auth.currentUser) {\n          const user = auth.currentUser;\n          const defaultProfile = createDefaultProfile(user);\n          setProfile(defaultProfile);\n          setDisplayName(defaultProfile.displayName);\n          \n          // Continue trying to load the real profile in the background\n          setTimeout(() => {\n            loadProfile();\n          }, 1000);\n        }\n      }\n    }, 2000);\n    \n    loadProfile();\n    \n    return () => clearTimeout(timer);\n  }, [loadProfile]);\n\n  const handleUpdateProfile = useCallback(async () => {\n    const user = auth.currentUser;\n    if (!user || !profile) return;\n\n    setIsLoading(true);\n    try {\n      await userService.updateUserProfile(user.uid, {\n        displayName,\n      });\n      await loadProfile();\n      Alert.alert('Success', 'Profile updated successfully');\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      Alert.alert('Error', 'Failed to update profile');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [displayName, profile, loadProfile]);\n\n  const handleVerifyEmail = useCallback(async () => {\n    const user = auth.currentUser;\n    if (!user) return;\n\n    setIsLoading(true);\n    try {\n      await sendEmailVerification(user);\n      Alert.alert(\n        'Verification Email Sent',\n        'Please check your email to verify your account'\n      );\n    } catch (error) {\n      console.error('Error sending verification email:', error);\n      Alert.alert('Error', 'Failed to send verification email');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handlePickImage = useCallback(async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== 'granted') {\n      Alert.alert('Permission needed', 'Please grant permission to access photos');\n      return;\n    }\n\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 0.8, // Reduced quality for faster upload\n    });\n\n    if (!result.canceled && result.assets[0].uri) {\n      setIsLoading(true);\n      try {\n        const photoURL = result.assets[0].uri;\n        await userService.updateUserProfile(auth.currentUser!.uid, { photoURL });\n        await loadProfile();\n      } catch (error) {\n        console.error('Error updating profile picture:', error);\n        Alert.alert('Error', 'Failed to update profile picture');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [loadProfile]);\n\n  const openSettingsDialog = useCallback((setting: string) => {\n    setSelectedSetting(setting);\n    setTempSettings({ ...profile?.settings });\n    setShowSettingsDialog(true);\n  }, [profile?.settings]);\n\n  const handleSaveSettings = useCallback(async () => {\n    if (!profile || !auth.currentUser) return;\n\n    setIsLoading(true);\n    try {\n      await userService.updateUserProfile(auth.currentUser.uid, {\n        settings: tempSettings,\n      });\n      await loadProfile();\n      setShowSettingsDialog(false);\n    } catch (error) {\n      console.error('Error updating settings:', error);\n      Alert.alert('Error', 'Failed to update settings');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [profile, tempSettings, loadProfile]);\n\n  const handleNotificationToggle = useCallback(async (value: boolean) => {\n    if (!profile || !auth.currentUser) return;\n    \n    try {\n      await userService.updateUserProfile(auth.currentUser.uid, {\n        settings: { ...profile.settings, notifications: value }\n      });\n      await loadProfile();\n    } catch (error) {\n      console.error('Error updating notifications:', error);\n      Alert.alert('Error', 'Failed to update notification settings');\n    }\n  }, [profile, loadProfile]);\n\n  const avatarSource = useMemo(() => \n    profile?.photoURL ? { uri: profile.photoURL } : defaultAvatar,\n    [profile?.photoURL]\n  );\n\n  if (isLoading) {\n    return <ProfileSkeleton />;\n  }\n\n  if (!profile) {\n    return <ProfileSkeleton />;\n  }\n  \n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n      <View style={styles.header}>\n          <Avatar.Image \n            size={100}\n            source={avatarSource}\n          />\n          <Button\n            mode=\"outlined\"\n            onPress={handlePickImage}\n            style={styles.changePhotoButton}\n          >\n            Change Photo\n          </Button>\n      </View>\n      \n        <View style={styles.form}>\n          <TextInput\n            label=\"Display Name\"\n            value={displayName}\n            onChangeText={setDisplayName}\n            mode=\"outlined\"\n            style={styles.input}\n          />\n\n          <Text style={styles.emailText}>{profile.email}</Text>\n          {!profile.isEmailVerified && (\n            <Button\n              mode=\"contained\"\n              onPress={handleVerifyEmail}\n              loading={isLoading}\n              style={styles.verifyButton}\n            >\n              Verify Email\n            </Button>\n          )}\n          \n          <Divider style={styles.divider} />\n\n          <List.Section>\n            <List.Subheader>Settings</List.Subheader>\n          \n          <List.Item\n              title=\"Theme\"\n              description={profile.settings.theme}\n              onPress={() => openSettingsDialog('theme')}\n              right={props => <List.Icon {...props} icon=\"chevron-right\" />}\n            />\n            \n            <List.Item\n              title=\"Task View\"\n              description={profile.settings.taskView}\n              onPress={() => openSettingsDialog('taskView')}\n              right={props => <List.Icon {...props} icon=\"chevron-right\" />}\n            />\n          \n          <List.Item\n              title=\"Notifications\"\n              right={() => (\n                <Switch\n                  value={profile.settings.notifications}\n                  onValueChange={handleNotificationToggle}\n                />\n              )}\n            />\n          \n          <List.Item\n              title=\"Accessibility\"\n              onPress={() => openSettingsDialog('accessibility')}\n              right={props => <List.Icon {...props} icon=\"chevron-right\" />}\n            />\n\n            <List.Item\n              title=\"Privacy\"\n              onPress={() => openSettingsDialog('privacy')}\n              right={props => <List.Icon {...props} icon=\"chevron-right\" />}\n            />\n          \n          <List.Item\n              title=\"Work Hours\"\n              onPress={() => openSettingsDialog('workHours')}\n              right={props => <List.Icon {...props} icon=\"chevron-right\" />}\n            />\n          </List.Section>\n      \n      <Button \n        mode=\"contained\" \n            onPress={handleUpdateProfile}\n            loading={isLoading}\n            style={styles.saveButton}\n          >\n            Save Changes\n      </Button>\n        </View>\n\n        <Portal>\n          <Dialog\n            visible={showSettingsDialog}\n            onDismiss={() => setShowSettingsDialog(false)}\n          >\n            <Dialog.Title>\n              {selectedSetting.charAt(0).toUpperCase() + selectedSetting.slice(1)}\n            </Dialog.Title>\n            <Dialog.Content>\n              {selectedSetting === 'theme' && (\n                <SegmentedButtons\n                  value={tempSettings?.theme || 'system'}\n                  onValueChange={value =>\n                    setTempSettings({ ...tempSettings, theme: value })\n                  }\n                  buttons={[\n                    { value: 'light', label: 'Light' },\n                    { value: 'dark', label: 'Dark' },\n                    { value: 'system', label: 'System' },\n                  ]}\n                />\n              )}\n              {/* Add more setting-specific UI components here */}\n            </Dialog.Content>\n            <Dialog.Actions>\n              <Button onPress={() => setShowSettingsDialog(false)}>Cancel</Button>\n              <Button onPress={handleSaveSettings}>Save</Button>\n            </Dialog.Actions>\n          </Dialog>\n        </Portal>\n    </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  scrollContent: {\n    flexGrow: 1,\n    padding: 16,\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  changePhotoButton: {\n    marginTop: 8,\n  },\n  form: {\n    flex: 1,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  emailText: {\n    fontSize: 16,\n    marginBottom: 8,\n  },\n  verifyButton: {\n    marginBottom: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  saveButton: {\n    marginTop: 24,\n  },\n  centerContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#ff0000',\n    marginBottom: 16,\n  },\n  retryButton: {\n    marginTop: 8,\n  },\n  avatarSkeleton: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    backgroundColor: '#ddd',\n  },\n  buttonSkeleton: {\n    width: 120,\n    height: 36,\n    borderRadius: 4,\n    backgroundColor: '#ddd',\n    marginTop: 10,\n  },\n  inputSkeleton: {\n    width: '100%',\n    height: 56,\n    borderRadius: 4,\n    backgroundColor: '#ddd',\n    marginBottom: 20,\n  },\n  textSkeleton: {\n    width: '80%',\n    height: 20,\n    borderRadius: 4,\n    backgroundColor: '#ddd',\n    marginBottom: 20,\n  },\n  subheaderSkeleton: {\n    width: '50%',\n    height: 24,\n    borderRadius: 4,\n    backgroundColor: '#ddd',\n    marginBottom: 16,\n  },\n  listItemSkeleton: {\n    width: '100%',\n    height: 56,\n    borderRadius: 4,\n    backgroundColor: '#ddd',\n    marginBottom: 12,\n  },\n});","import React, { useState, useCallback, useMemo } from 'react';\nimport { View, StyleSheet, FlatList, TouchableOpacity, ScrollView } from 'react-native';\nimport { Text, Chip, Divider, Menu, Surface, IconButton, Portal, Modal, Button, useTheme as usePaperTheme } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { useTaskStore } from '../stores/taskStore';\nimport { Task } from '../types/Task';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { format, isToday, isYesterday, isThisWeek, isThisMonth } from 'date-fns';\n\n// Helper function to format relative time\nconst getRelativeTime = (dateString: string | Date | undefined): string => {\n  if (!dateString) return 'Unknown';\n  const date = typeof dateString === 'string' ? new Date(dateString) : dateString;\n  \n  if (isToday(date)) return 'Today';\n  if (isYesterday(date)) return 'Yesterday';\n  if (isThisWeek(date)) return format(date, 'EEEE');\n  if (isThisMonth(date)) return format(date, 'MMMM d');\n  return format(date, 'MMM d, yyyy');\n};\n\ntype CompletedScreenNavigationProp = StackNavigationProp<RootStackParamList, 'Completed'>;\n\ntype TimeFilter = 'all' | 'today' | 'week' | 'month';\n\n// Add new sort type definition\ntype SortOption = {\n  id: 'recent' | 'oldest' | 'title' | 'priority' | 'dueDate' | 'subtasks';\n  label: string;\n  icon: string;\n};\n\nconst SORT_OPTIONS: SortOption[] = [\n  { id: 'recent', label: 'Most Recent', icon: 'clock' },\n  { id: 'oldest', label: 'Oldest First', icon: 'clock-outline' },\n  { id: 'title', label: 'By Title', icon: 'sort-alphabetical-ascending' },\n  { id: 'priority', label: 'By Priority', icon: 'alert-circle-outline' },\n  { id: 'dueDate', label: 'By Due Date', icon: 'calendar' },\n  { id: 'subtasks', label: 'By Subtasks', icon: 'format-list-checks' },\n];\n\nexport default function CompletedScreen() {\n  const navigation = useNavigation<CompletedScreenNavigationProp>();\n  const { tasks, updateTask, fetchTasks } = useTaskStore();\n  const { theme } = useTheme();\n  const paperTheme = usePaperTheme();\n  const colors = theme?.colors || paperTheme.colors; // Fallback to Paper theme if custom theme is undefined\n  const [sortBy, setSortBy] = useState<SortOption['id']>('recent');\n  const [sortAscending, setSortAscending] = useState(false);\n  const [timeFilter, setTimeFilter] = useState<TimeFilter>('all');\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [selectedTasks, setSelectedTasks] = useState<string[]>([]);\n  const [showStats, setShowStats] = useState(true);\n  const [showRestoreModal, setShowRestoreModal] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<{ x: number; y: number } | null>(null);\n  \n  // Get completed tasks and apply filters\n  const completedTasks = useMemo(() => {\n    let filtered = tasks.filter(task => task.completed);\n    \n    // Apply time filter\n    if (timeFilter !== 'all') {\n      filtered = filtered.filter(task => {\n        const completedDate = new Date(String(task.updatedAt));\n        switch (timeFilter) {\n          case 'today':\n            return isToday(completedDate);\n          case 'week':\n            return isThisWeek(completedDate);\n          case 'month':\n            return isThisMonth(completedDate);\n          default:\n            return true;\n        }\n      });\n    }\n    \n    // Apply sorting\n    return [...filtered].sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'recent':\n          comparison = new Date(String(b.updatedAt)).getTime() - \n                      new Date(String(a.updatedAt)).getTime();\n          break;\n        case 'oldest':\n          comparison = new Date(String(a.updatedAt)).getTime() - \n                      new Date(String(b.updatedAt)).getTime();\n          break;\n        case 'title':\n          comparison = a.title.localeCompare(b.title);\n          break;\n        case 'priority':\n          const priorityOrder = { high: 3, medium: 2, low: 1 };\n          comparison = (priorityOrder[b.priority || 'low'] || 0) - \n                      (priorityOrder[a.priority || 'low'] || 0);\n          break;\n        case 'dueDate':\n          const aDate = a.dueDate ? new Date(a.dueDate).getTime() : 0;\n          const bDate = b.dueDate ? new Date(b.dueDate).getTime() : 0;\n          comparison = aDate - bDate;\n          break;\n        case 'subtasks':\n          comparison = (b.subtasks?.length || 0) - (a.subtasks?.length || 0);\n          break;\n        default:\n          comparison = 0;\n      }\n      \n      return sortAscending ? comparison : -comparison;\n    });\n  }, [tasks, timeFilter, sortBy, sortAscending]);\n\n  // Calculate statistics\n  const stats = useMemo(() => {\n    const total = completedTasks.length;\n    const today = completedTasks.filter(task => \n      isToday(new Date(String(task.updatedAt)))\n    ).length;\n    const thisWeek = completedTasks.filter(task =>\n      isThisWeek(new Date(String(task.updatedAt)))\n    ).length;\n    const thisMonth = completedTasks.filter(task =>\n      isThisMonth(new Date(String(task.updatedAt)))\n    ).length;\n\n    return { total, today, thisWeek, thisMonth };\n  }, [completedTasks]);\n\n  const handleRestoreTasks = async () => {\n    try {\n      const updatePromises = selectedTasks.map(taskId => {\n        const task = tasks.find(t => t.id === taskId);\n        if (task) {\n          return updateTask({ \n            ...task, \n            completed: false, \n            updatedAt: new Date().toISOString() \n          });\n        }\n        return Promise.resolve();\n      });\n\n      await Promise.all(updatePromises);\n      \n      // Clear selection and close modal immediately\n      setSelectedTasks([]);\n      setShowRestoreModal(false);\n      \n      // Immediately fetch updated tasks to refresh the UI\n      await fetchTasks();\n    } catch (error) {\n      console.error('Error restoring tasks:', error);\n    }\n  };\n\n  const toggleTaskSelection = (taskId: string) => {\n    setSelectedTasks(prev => \n      prev.includes(taskId) \n        ? prev.filter(id => id !== taskId)\n        : [...prev, taskId]\n    );\n  };\n  \n  const navigateToTask = (taskId: string) => {\n    navigation.navigate('TaskDetail', { taskId });\n  };\n  \n  const renderTaskItem = ({ item }: { item: Task }) => (\n    <Surface style={[styles.taskItem, { backgroundColor: colors.surface }]}>\n    <TouchableOpacity \n        style={styles.taskContent}\n      onPress={() => navigateToTask(item.id)}\n        onLongPress={() => toggleTaskSelection(item.id)}\n    >\n        <View style={styles.taskHeader}>\n        <View style={styles.titleContainer}>\n            <IconButton\n              icon={selectedTasks.includes(item.id) ? \"checkbox-marked\" : \"checkbox-blank-outline\"}\n              size={20}\n              onPress={() => toggleTaskSelection(item.id)}\n              style={styles.checkbox}\n            />\n            <Text style={[styles.taskTitle, { color: colors.onSurface }]} numberOfLines={1}>\n              {item.title}\n            </Text>\n          </View>\n          <Chip \n            icon=\"check-circle\"\n            compact\n            style={[styles.completedChip, { backgroundColor: colors.primaryContainer }]}\n          >\n            {getRelativeTime(item.updatedAt)}\n          </Chip>\n        </View>\n        \n        {item.description && (\n          <Text style={[styles.description, { color: colors.onSurfaceVariant }]} numberOfLines={2}>\n            {item.description}\n          </Text>\n        )}\n        \n        <View style={styles.taskMeta}>\n          {item.updatedAt && (\n            <Text style={[styles.metaText, { color: colors.onSurfaceVariant }]}>\n              Completed: {format(new Date(item.updatedAt), 'MMM d, yyyy h:mm a')}\n            </Text>\n          )}\n          {item.dueDate && (\n            <Text style={[styles.metaText, { color: colors.onSurfaceVariant }]}>\n              • Due: {format(new Date(item.dueDate), 'MMM d, yyyy')}\n            </Text>\n          )}\n          {item.subtasks && item.subtasks.length > 0 && (\n            <Text style={[styles.metaText, { color: colors.onSurfaceVariant }]}>\n              • {item.subtasks.length} subtasks\n            </Text>\n          )}\n        </View>\n      </TouchableOpacity>\n    </Surface>\n  );\n\n  const renderHeader = () => (\n    <View style={styles.header}>\n      <View style={styles.headerTop}>\n        <View>\n          <Text style={[styles.title, { color: colors.onBackground }]}>Completed Tasks</Text>\n          <Text style={[styles.subtitle, { color: colors.onSurfaceVariant }]}>\n            {stats.total} task{stats.total !== 1 ? 's' : ''} completed\n        </Text>\n        </View>\n        <IconButton\n          icon={showStats ? \"chevron-up\" : \"chevron-down\"}\n          onPress={() => setShowStats(!showStats)}\n        />\n      </View>\n      \n      {showStats && (\n        <View style={styles.statsContainer}>\n          <Surface style={[styles.statCard, { backgroundColor: colors.primaryContainer }]}>\n            <Text style={[styles.statValue, { color: colors.onPrimaryContainer }]}>{stats.today}</Text>\n            <Text style={[styles.statLabel, { color: colors.onPrimaryContainer }]}>Today</Text>\n          </Surface>\n          <Surface style={[styles.statCard, { backgroundColor: colors.primaryContainer }]}>\n            <Text style={[styles.statValue, { color: colors.onPrimaryContainer }]}>{stats.thisWeek}</Text>\n            <Text style={[styles.statLabel, { color: colors.onPrimaryContainer }]}>This Week</Text>\n          </Surface>\n          <Surface style={[styles.statCard, { backgroundColor: colors.primaryContainer }]}>\n            <Text style={[styles.statValue, { color: colors.onPrimaryContainer }]}>{stats.thisMonth}</Text>\n            <Text style={[styles.statLabel, { color: colors.onPrimaryContainer }]}>This Month</Text>\n          </Surface>\n        </View>\n      )}\n\n      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.filtersContainer}>\n        <Chip\n          selected={timeFilter === 'all'}\n          onPress={() => setTimeFilter('all')}\n          style={styles.filterChip}\n        >\n          All Time\n        </Chip>\n        <Chip\n          selected={timeFilter === 'today'}\n          onPress={() => setTimeFilter('today')}\n          style={styles.filterChip}\n        >\n          Today\n        </Chip>\n        <Chip\n          selected={timeFilter === 'week'}\n          onPress={() => setTimeFilter('week')}\n          style={styles.filterChip}\n        >\n          This Week\n        </Chip>\n        <Chip\n          selected={timeFilter === 'month'}\n          onPress={() => setTimeFilter('month')}\n          style={styles.filterChip}\n        >\n          This Month\n        </Chip>\n      </ScrollView>\n\n      {renderSortSection()}\n    </View>\n  );\n\n  const renderSortSection = () => (\n    <View style={styles.sortContainer}>\n      <TouchableOpacity \n        style={styles.sortButton}\n        onPress={(event) => {\n          const { pageX, pageY } = event.nativeEvent;\n          setMenuAnchor({ x: pageX, y: pageY });\n          setMenuVisible(true);\n        }}\n      >\n        <MaterialCommunityIcons \n          name=\"sort\" \n          size={20} \n          color={colors.onSurfaceVariant} \n        />\n        <Text style={[styles.sortButtonText, { color: colors.onSurfaceVariant }]}>\n          Sort: {SORT_OPTIONS.find(opt => opt.id === sortBy)?.label}\n        </Text>\n        <MaterialCommunityIcons \n          name={sortAscending ? \"arrow-up\" : \"arrow-down\"} \n          size={16} \n          color={colors.onSurfaceVariant}\n          style={{ marginLeft: 4 }}\n        />\n      </TouchableOpacity>\n      </View>\n  );\n  \n  return (\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\n      <FlatList\n        data={completedTasks}\n        renderItem={renderTaskItem}\n        keyExtractor={item => item.id}\n        contentContainerStyle={styles.listContent}\n        ListHeaderComponent={renderHeader}\n        ListEmptyComponent={\n          <View style={styles.emptyState}>\n            <MaterialCommunityIcons name=\"check-circle-outline\" size={48} color={colors.onSurfaceVariant} />\n            <Text style={[styles.emptyText, { color: colors.onSurfaceVariant }]}>\n              No completed tasks found\n            </Text>\n          </View>\n        }\n      />\n\n      {selectedTasks.length > 0 && (\n        <Surface style={[styles.bottomBar, { backgroundColor: colors.surface }]}>\n          <Text style={{ color: colors.onSurface }}>\n            {selectedTasks.length} selected\n          </Text>\n          <Button\n            mode=\"contained\"\n            onPress={() => setShowRestoreModal(true)}\n            style={styles.restoreButton}\n          >\n            Restore Tasks\n          </Button>\n        </Surface>\n      )}\n\n            <Menu\n              visible={menuVisible}\n        onDismiss={() => {\n          setMenuVisible(false);\n          setMenuAnchor(null);\n        }}\n        anchor={menuAnchor ? { x: menuAnchor.x, y: menuAnchor.y } : undefined}\n        contentStyle={styles.menuContent}\n      >\n        {SORT_OPTIONS.map((option) => (\n          <Menu.Item\n            key={option.id}\n            onPress={() => {\n              if (sortBy === option.id) {\n                setSortAscending(!sortAscending);\n              } else {\n                setSortBy(option.id);\n                setSortAscending(false);\n              }\n              setMenuVisible(false);\n              setMenuAnchor(null);\n            }}\n            title={option.label}\n            leadingIcon={option.icon}\n            trailingIcon={\n              sortBy === option.id\n                ? sortAscending\n                  ? \"arrow-up\"\n                  : \"arrow-down\"\n                : undefined\n            }\n          />\n        ))}\n        <Divider />\n              <Menu.Item \n          onPress={() => {\n            setSortAscending(!sortAscending);\n            setMenuVisible(false);\n            setMenuAnchor(null);\n          }}\n          title={`Order: ${sortAscending ? 'Ascending' : 'Descending'}`}\n          leadingIcon={sortAscending ? \"sort-ascending\" : \"sort-descending\"}\n              />\n            </Menu>\n\n      <Portal>\n        <Modal\n          visible={showRestoreModal}\n          onDismiss={() => setShowRestoreModal(false)}\n          contentContainerStyle={[styles.modal, { backgroundColor: colors.surface }]}\n        >\n          <Text style={[styles.modalTitle, { color: colors.onSurface }]}>\n            Restore Tasks\n          </Text>\n          <Text style={[styles.modalText, { color: colors.onSurfaceVariant }]}>\n            Are you sure you want to restore {selectedTasks.length} task{selectedTasks.length !== 1 ? 's' : ''}?\n          </Text>\n          <View style={styles.modalActions}>\n            <Button onPress={() => setShowRestoreModal(false)}>Cancel</Button>\n            <Button mode=\"contained\" onPress={handleRestoreTasks}>\n              Restore\n            </Button>\n          </View>\n        </Modal>\n      </Portal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  listContent: {\n    padding: 16,\n  },\n  header: {\n    marginBottom: 16,\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  subtitle: {\n    fontSize: 16,\n    opacity: 0.7,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: 16,\n  },\n  statCard: {\n    flex: 1,\n    margin: 4,\n    padding: 12,\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  statLabel: {\n    fontSize: 12,\n    marginTop: 4,\n  },\n  filtersContainer: {\n    marginBottom: 16,\n  },\n  filterChip: {\n    marginRight: 8,\n  },\n  sortContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginBottom: 8,\n  },\n  sortButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  sortButtonText: {\n    marginLeft: 4,\n  },\n  taskItem: {\n    marginBottom: 12,\n    borderRadius: 12, \n    elevation: 2,\n  },\n  taskContent: {\n    padding: 16,\n  },\n  taskHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  checkbox: {\n    margin: 0,\n    padding: 0,\n  },\n  taskTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    flex: 1,\n  },\n  completedChip: {\n    height: 28,\n  },\n  description: {\n    fontSize: 14,\n    marginBottom: 8,\n    marginLeft: 28,\n  },\n  taskMeta: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginLeft: 28,\n  },\n  metaText: {\n    fontSize: 12,\n    marginRight: 8,\n  },\n  emptyState: {\n    alignItems: 'center', \n    justifyContent: 'center',\n    padding: 32,\n  },\n  emptyText: {\n    fontSize: 16,\n    marginTop: 16,\n  },\n  bottomBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    elevation: 4,\n  },\n  restoreButton: {\n    marginLeft: 16,\n  },\n  modal: {\n    margin: 20,\n    padding: 20,\n    borderRadius: 8,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n  modalText: {\n    fontSize: 16,\n    marginBottom: 20,\n  },\n  modalActions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 8,\n  },\n  menuContent: {\n    marginTop: 8,\n    borderRadius: 8,\n    elevation: 4,\n  },\n  sortDirectionButton: {\n    marginLeft: 8,\n  },\n}); ","import React, { createContext, useContext, useState } from 'react';\n\ntype User = {\n  id: string;\n  name: string;\n  email: string;\n  photoUrl?: string;\n};\n\ntype AuthContextType = {\n  user: User | null;\n  isLoading: boolean;\n  error: string | null;\n  signIn: (email: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n};\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport const AuthProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {\n  const [user, setUser] = useState<User | null>({\n    id: '1',\n    name: 'Test User',\n    email: 'test@example.com'\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const signIn = async (email: string, password: string) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Mock authentication\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setUser({\n        id: '1',\n        name: 'Test User',\n        email: email\n      });\n    } catch (err) {\n      setError('Authentication failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const signOut = async () => {\n    setIsLoading(true);\n    try {\n      // Mock sign out\n      await new Promise(resolve => setTimeout(resolve, 500));\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isLoading, error, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; ","import React, { useState } from 'react';\nimport { \n  View, \n  StyleSheet, \n  ScrollView, \n  KeyboardAvoidingView, \n  Platform,\n  TouchableWithoutFeedback,\n  Keyboard\n} from 'react-native';\nimport { \n  Text, \n  TextInput, \n  Button, \n  Appbar, \n  useTheme \n} from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { useGroupStore } from '../stores/groupStore';\nimport { RootStackParamList } from '../navigation/types';\nimport { useAuth } from '../context/AuthContext';\n\ntype CreateGroupScreenNavigationProp = StackNavigationProp<RootStackParamList, 'CreateGroup'>;\n\nexport const CreateGroupScreen = () => {\n  const navigation = useNavigation<CreateGroupScreenNavigationProp>();\n  const theme = useTheme();\n  const { user } = useAuth();\n  \n  // State\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [nameError, setNameError] = useState('');\n  \n  // Handle create group\n  const handleCreateGroup = async () => {\n    // Reset errors\n    setNameError('');\n    \n    // Validate form\n    let isValid = true;\n    \n    if (!name.trim()) {\n      setNameError('Group name is required');\n      isValid = false;\n    }\n    \n    if (!isValid) return;\n    \n    // Submit form\n    setIsSubmitting(true);\n    \n    try {\n      if (!user?.id) {\n        throw new Error('User not authenticated');\n      }\n      \n      const { createGroup } = useGroupStore.getState();\n      const newGroup = createGroup(\n        name, \n        description, \n        user.id, \n        new Date().toISOString(), // createdAt timestamp\n        \"public\" // visibility type\n      );\n      \n      // Navigate to the group detail screen\n      navigation.replace('GroupDetail', { groupId: newGroup.id });\n    } catch (error) {\n      console.error('Error creating group:', error);\n      // Show error message\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <View style={styles.container}>\n      <Appbar.Header style={{ backgroundColor: theme.colors.surface }}>\n        <Appbar.BackAction onPress={() => navigation.goBack()} />\n        <Appbar.Content title=\"Create New Group\" />\n      </Appbar.Header>\n      \n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={styles.keyboardAvoidingView}\n      >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <ScrollView contentContainerStyle={styles.scrollContent}>\n            <View style={styles.formContainer}>\n              <Text style={styles.formLabel}>Group Information</Text>\n              \n              <TextInput\n                label=\"Group Name\"\n                value={name}\n                onChangeText={setName}\n                style={styles.input}\n                mode=\"outlined\"\n                error={!!nameError}\n                outlineColor=\"#333\"\n                activeOutlineColor=\"#3498db\"\n                disabled={isSubmitting}\n              />\n              {nameError ? <Text style={styles.errorText}>{nameError}</Text> : null}\n              \n              <TextInput\n                label=\"Description\"\n                value={description}\n                onChangeText={setDescription}\n                style={styles.input}\n                mode=\"outlined\"\n                multiline\n                numberOfLines={4}\n                outlineColor=\"#333\"\n                activeOutlineColor=\"#3498db\"\n                disabled={isSubmitting}\n              />\n              \n              <Text style={styles.helperText}>\n                You'll be able to invite team members after creating the group.\n              </Text>\n            </View>\n            \n            <View style={styles.buttonContainer}>\n              <Button\n                mode=\"contained\"\n                onPress={handleCreateGroup}\n                loading={isSubmitting}\n                disabled={isSubmitting}\n                style={styles.createButton}\n                contentStyle={styles.buttonContent}\n              >\n                Create Group\n              </Button>\n              \n              <Button\n                mode=\"outlined\"\n                onPress={() => navigation.goBack()}\n                disabled={isSubmitting}\n                style={styles.cancelButton}\n                contentStyle={styles.buttonContent}\n              >\n                Cancel\n              </Button>\n            </View>\n          </ScrollView>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  keyboardAvoidingView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n    padding: 16,\n  },\n  formContainer: {\n    marginBottom: 24,\n  },\n  formLabel: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 16,\n  },\n  input: {\n    marginBottom: 16,\n    backgroundColor: '#111',\n  },\n  errorText: {\n    color: '#f44336',\n    marginTop: -12,\n    marginBottom: 16,\n    fontSize: 12,\n  },\n  helperText: {\n    color: '#999',\n    fontSize: 14,\n    marginTop: 8,\n  },\n  buttonContainer: {\n    marginTop: 'auto',\n    marginBottom: 16,\n  },\n  createButton: {\n    marginBottom: 12,\n    backgroundColor: '#3498db',\n  },\n  cancelButton: {\n    borderColor: '#555',\n  },\n  buttonContent: {\n    paddingVertical: 8,\n  },\n});\n\nexport default CreateGroupScreen; ","import React, { useEffect, useRef } from 'react';\nimport { View, Animated, StyleSheet, ViewStyle } from 'react-native';\nimport { useTheme } from '../theme/ThemeProvider';\n\ninterface SkeletonProps {\n  width: number | string;\n  height: number;\n  style?: ViewStyle;\n  borderRadius?: number;\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({ \n  width, \n  height, \n  style, \n  borderRadius = 4 \n}) => {\n  const { isDark } = useTheme();\n  const opacity = useRef(new Animated.Value(0.3)).current;\n\n  useEffect(() => {\n    const pulseAnimation = Animated.sequence([\n      Animated.timing(opacity, {\n        toValue: 0.6,\n        duration: 800,\n        useNativeDriver: true,\n      }),\n      Animated.timing(opacity, {\n        toValue: 0.3,\n        duration: 800,\n        useNativeDriver: true,\n      }),\n    ]);\n\n    Animated.loop(pulseAnimation).start();\n\n    return () => {\n      opacity.stopAnimation();\n    };\n  }, [opacity]);\n\n  return (\n    <Animated.View\n      style={[\n        styles.skeleton,\n        {\n          width,\n          height,\n          borderRadius,\n          backgroundColor: isDark ? '#444' : '#E1E9EE',\n          opacity,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  skeleton: {\n    overflow: 'hidden',\n  },\n});\n\nexport default Skeleton; ","import React, { useState, useEffect, useRef } from 'react';\nimport { \n  View, \n  StyleSheet, \n  FlatList, \n  TouchableOpacity,\n  Animated,\n  ScrollView\n} from 'react-native';\nimport { \n  Text, \n  Searchbar, \n  FAB, \n  Card,\n  Chip,\n  IconButton,\n  Button,\n  Menu,\n  Divider,\n  SegmentedButtons,\n  ActivityIndicator,\n  useTheme\n} from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { TemplatesScreenNavigationProp } from '../navigation/types';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTaskStore } from '../stores/taskStore';\nimport Skeleton from '../components/Skeleton';\n\ninterface Template {\n  id: string;\n  name: string;\n  description: string;\n  tasks: any[];\n  lastUsed?: string;\n  priority?: 'high' | 'medium' | 'low';\n  tags?: string[];\n  createdAt?: string;\n}\n\nexport default function TemplatesScreen() {\n  const navigation = useNavigation<TemplatesScreenNavigationProp>();\n  const { colors } = useTheme();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [templates, setTemplates] = useState<Template[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [sortBy, setSortBy] = useState('recent');\n  const [filterVisible, setFilterVisible] = useState(false);\n  const [viewMode, setViewMode] = useState('grid');\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [selectedPriority, setSelectedPriority] = useState<string | null>(null);\n  const [filterTags, setFilterTags] = useState<string[]>([]);\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  \n  // Get templates from store\n  const { templates: storeTemplates } = useTaskStore() as any;\n  \n  useEffect(() => {\n    // Fetch templates on component mount\n    const loadData = async () => {\n      setLoading(true);\n      try {\n        await useTaskStore.getState().fetchTemplates();\n        // Get templates from store after fetching\n        const storeData = useTaskStore.getState().templates || [];\n        // Convert TaskTemplate[] to Template[] by adding required properties\n        const formattedTemplates = storeData.map((template: any) => ({\n          id: template.id,\n          name: template.name || template.title,\n          description: template.description || '',\n          tasks: template.subtasks || [],\n          priority: template.priority,\n          tags: Array.isArray(template.subtasks) \n            ? template.subtasks.map((s: any) => s.title) \n            : [],\n          createdAt: template.createdAt ? new Date(template.createdAt).toISOString() : new Date().toISOString()\n        }));\n        setTemplates(formattedTemplates);\n        \n        // Fade in animation\n        Animated.timing(fadeAnim, {\n          toValue: 1,\n          duration: 500,\n          useNativeDriver: true\n        }).start();\n        \n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading templates:', error);\n        setLoading(false);\n      }\n    };\n    \n    loadData();\n  }, []);\n  \n  // Add another effect to update when storeTemplates changes\n  useEffect(() => {\n    if (storeTemplates && Array.isArray(storeTemplates) && storeTemplates.length > 0) {\n      // Convert TaskTemplate[] to Template[] by adding required properties\n      const formattedTemplates = storeTemplates.map((template: any) => ({\n        id: template.id,\n        name: template.name || template.title,\n        description: template.description || '',\n        tasks: template.subtasks || [],\n        priority: template.priority,\n        tags: Array.isArray(template.subtasks) \n          ? template.subtasks.map((s: any) => s.title) \n          : [],\n        createdAt: template.createdAt ? new Date(template.createdAt).toISOString() : new Date().toISOString()\n      }));\n      setTemplates(formattedTemplates);\n      \n      // Start fade in animation (without checking value)\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [storeTemplates]);\n  \n  // Filter and sort templates\n  const processedTemplates = templates\n    // Filter by search query\n    .filter(template => \n      template.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      (template.description && template.description.toLowerCase().includes(searchQuery.toLowerCase()))\n    )\n    // Filter by priority\n    .filter(template => \n      !selectedPriority || template.priority === selectedPriority\n    )\n    // Filter by tags\n    .filter(template => \n      filterTags.length === 0 || \n      (template.tags && template.tags.some(tag => filterTags.includes(tag)))\n    )\n    // Sort templates\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'recent':\n          return new Date(b.createdAt || '').getTime() - new Date(a.createdAt || '').getTime();\n        case 'name':\n          return a.name.localeCompare(b.name);\n        case 'tasks':\n          return (b.tasks?.length || 0) - (a.tasks?.length || 0);\n        default:\n          return 0;\n      }\n    });\n  \n  // Extract all unique tags from templates\n  const allTags = Array.from(new Set(\n    templates.flatMap(template => template.tags || [])\n  ));\n  \n  const renderGridItem = ({ item }: { item: Template }) => (\n    <Animated.View style={{ opacity: fadeAnim, width: '48%' }}>\n      <TouchableOpacity\n        onPress={() => navigation.navigate('TemplateDetail', { templateId: item.id })}\n        style={styles.gridItem}\n      >\n        <Card style={[styles.templateCard, { backgroundColor: colors.surface }]}>\n          <Card.Content>\n            {item.priority && (\n              <View style={[\n                styles.priorityIndicator, \n                { backgroundColor: getPriorityColor(item.priority) }\n              ]} />\n            )}\n            \n            <Text style={styles.templateName} numberOfLines={1}>\n              {item.name}\n            </Text>\n            \n            <Text style={styles.templateDescription} numberOfLines={2}>\n              {item.description || 'No description'}\n            </Text>\n            \n            {item.tags && item.tags.length > 0 && (\n              <ScrollView \n                horizontal \n                showsHorizontalScrollIndicator={false}\n                style={styles.tagsContainer}\n              >\n                {item.tags.map((tag, index) => (\n                  <Chip \n                    key={index}\n                    style={styles.tag}\n                    textStyle={{ fontSize: 10 }}\n                    compact\n                  >\n                    {tag}\n                  </Chip>\n                ))}\n              </ScrollView>\n            )}\n            \n            <View style={styles.templateStats}>\n              <Text style={styles.templateStat}>\n                <MaterialCommunityIcons name=\"checkbox-marked-outline\" size={12} color={colors.primary} />\n                {' '}{item.tasks?.length || 0} tasks\n              </Text>\n              <Text style={styles.templateStat}>\n                {item.lastUsed ? `Last used: ${formatDate(new Date(item.lastUsed))}` : 'Never used'}\n              </Text>\n            </View>\n          </Card.Content>\n          \n          <Card.Actions style={styles.cardActions}>\n            <IconButton\n              icon=\"content-copy\"\n              size={20}\n              onPress={() => handleDuplicateTemplate(item)}\n            />\n            <IconButton\n              icon=\"arrow-right\"\n              size={20}\n              onPress={() => navigation.navigate('TemplateDetail', { templateId: item.id })}\n            />\n          </Card.Actions>\n        </Card>\n      </TouchableOpacity>\n    </Animated.View>\n  );\n  \n  const renderListItem = ({ item }: { item: Template }) => (\n    <Animated.View style={{ opacity: fadeAnim, width: '100%' }}>\n      <Card style={[styles.listCard, { backgroundColor: colors.surface }]}>\n        <Card.Content>\n          <View style={styles.listItemHeader}>\n            <View style={{ flex: 1, marginRight: 8 }}>\n              <Text style={styles.templateName} numberOfLines={1}>\n                {item.name}\n              </Text>\n              <Text style={styles.templateDescription} numberOfLines={2}>\n                {item.description || 'No description'}\n              </Text>\n            </View>\n            \n            {item.priority && (\n              <Chip style={{ backgroundColor: getPriorityColor(item.priority) }}>\n                {item.priority}\n              </Chip>\n            )}\n          </View>\n          \n          {item.tags && item.tags.length > 0 && (\n            <ScrollView \n              horizontal \n              showsHorizontalScrollIndicator={false}\n              style={styles.tagsContainer}\n            >\n              {item.tags.map((tag, index) => (\n                <Chip \n                  key={index}\n                  style={styles.tag}\n                  textStyle={{ fontSize: 10 }}\n                  compact\n                >\n                  {tag}\n                </Chip>\n              ))}\n            </ScrollView>\n          )}\n          \n          <View style={styles.templateStats}>\n            <Text style={styles.templateStat}>\n              <MaterialCommunityIcons name=\"checkbox-marked-outline\" size={12} color={colors.primary} />\n              {' '}{item.tasks?.length || 0} tasks\n            </Text>\n            <Text style={styles.templateStat}>\n              {item.lastUsed ? `Last used: ${formatDate(new Date(item.lastUsed))}` : 'Never used'}\n            </Text>\n          </View>\n        </Card.Content>\n        \n        <Card.Actions style={styles.cardActions}>\n          <Button \n            mode=\"text\" \n            onPress={() => handleDuplicateTemplate(item)}>\n            Duplicate\n          </Button>\n          <Button \n            mode=\"contained\" \n            onPress={() => navigation.navigate('TemplateDetail', { templateId: item.id })}>\n            View\n          </Button>\n        </Card.Actions>\n      </Card>\n    </Animated.View>\n  );\n  \n  const handleDuplicateTemplate = (template: Template) => {\n    // Implementation would depend on the store's methods\n    console.log('Duplicate template:', template.id);\n  };\n  \n  // Helper function to format dates\n  const formatDate = (date: Date) => {\n    return date.toLocaleDateString(undefined, {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  \n  // Get color based on priority\n  const getPriorityColor = (priority: string) => {\n    switch (priority.toLowerCase()) {\n      case 'high':\n        return '#FF5252';\n      case 'medium':\n        return '#FFB300';\n      case 'low':\n        return '#69F0AE';\n      default:\n        return '#BDBDBD';\n    }\n  };\n  \n  // Mock data for development\n  const mockTemplates: Template[] = [\n    {\n      id: '1',\n      name: 'Daily Standup',\n      description: 'Template for daily team meetings',\n      tasks: [{id: '1'}, {id: '2'}, {id: '3'}],\n      lastUsed: new Date().toISOString(),\n      priority: 'medium',\n      tags: ['Meeting', 'Daily', 'Team'],\n      createdAt: new Date().toISOString()\n    },\n    {\n      id: '2',\n      name: 'Sprint Planning',\n      description: 'Prepare for next sprint planning session',\n      tasks: [{id: '4'}, {id: '5'}, {id: '6'}, {id: '7'}],\n      priority: 'high',\n      tags: ['Planning', 'Sprint', 'Agile'],\n      createdAt: new Date(Date.now() - 86400000).toISOString()\n    },\n    {\n      id: '3',\n      name: 'Bug Fixing Process',\n      description: 'Standard procedure for addressing and documenting bugs',\n      tasks: [{id: '8'}, {id: '9'}],\n      lastUsed: new Date(Date.now() - 172800000).toISOString(),\n      priority: 'high',\n      tags: ['Development', 'Bugs'],\n      createdAt: new Date(Date.now() - 172800000).toISOString()\n    },\n    {\n      id: '4',\n      name: 'Client Meeting',\n      description: 'Prepare for client status meetings',\n      tasks: [{id: '10'}, {id: '11'}, {id: '12'}, {id: '13'}],\n      priority: 'low',\n      tags: ['Client', 'Meeting', 'External'],\n      createdAt: new Date(Date.now() - 259200000).toISOString()\n    }\n  ];\n  \n  return (\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\n      <View style={styles.header}>\n        <Text style={styles.screenTitle}>Templates</Text>\n        \n        <View style={styles.headerActions}>\n          <IconButton\n            icon={viewMode === 'grid' ? 'view-list' : 'view-grid'}\n            size={24}\n            onPress={() => setViewMode(viewMode === 'grid' ? 'list' : 'grid')}\n          />\n          \n          <IconButton\n            icon=\"filter-variant\"\n            size={24}\n            onPress={() => setFilterVisible(!filterVisible)}\n            style={{\n              backgroundColor: (selectedPriority || filterTags.length > 0) \n                ? colors.primary + '20' \n                : undefined\n            }}\n          />\n          \n          <Menu\n            visible={menuVisible}\n            onDismiss={() => setMenuVisible(false)}\n            anchor={\n              <IconButton\n                icon=\"dots-vertical\"\n                size={24}\n                onPress={() => setMenuVisible(true)}\n              />\n            }\n          >\n            <Menu.Item \n              onPress={() => {\n                setSortBy('recent');\n                setMenuVisible(false);\n              }} \n              title=\"Sort by recent\" \n              leadingIcon={sortBy === 'recent' ? 'check' : undefined}\n            />\n            <Menu.Item \n              onPress={() => {\n                setSortBy('name');\n                setMenuVisible(false);\n              }} \n              title=\"Sort by name\" \n              leadingIcon={sortBy === 'name' ? 'check' : undefined}\n            />\n            <Menu.Item \n              onPress={() => {\n                setSortBy('tasks');\n                setMenuVisible(false);\n              }} \n              title=\"Sort by tasks count\" \n              leadingIcon={sortBy === 'tasks' ? 'check' : undefined}\n            />\n            <Divider />\n            <Menu.Item \n              onPress={() => {\n                navigation.navigate('CreateTemplate');\n                setMenuVisible(false);\n              }} \n              title=\"Create template\" \n              leadingIcon=\"plus\"\n            />\n          </Menu>\n        </View>\n      </View>\n      \n      <Searchbar\n        placeholder=\"Search templates...\"\n        onChangeText={setSearchQuery}\n        value={searchQuery}\n        style={styles.searchBar}\n      />\n      \n      {filterVisible && (\n        <View style={styles.filterContainer}>\n          <Text style={styles.filterTitle}>Filter by:</Text>\n          \n          <Text style={styles.filterLabel}>Priority</Text>\n          <SegmentedButtons\n            value={selectedPriority || ''}\n            onValueChange={(value) => setSelectedPriority(value === '' ? null : value)}\n            buttons={[\n              { value: '', label: 'All', style: { backgroundColor: 'transparent' } },\n              { value: 'high', label: 'High' },\n              { value: 'medium', label: 'Medium' },\n              { value: 'low', label: 'Low' },\n            ]}\n            style={styles.segmentedButtons}\n          />\n          \n          <Text style={styles.filterLabel}>Tags</Text>\n          <ScrollView \n            horizontal \n            showsHorizontalScrollIndicator={false}\n            style={styles.tagFilters}\n          >\n            {allTags.map((tag, index) => (\n              <Chip\n                key={index}\n                style={[\n                  styles.tagChip,\n                  { \n                    backgroundColor: filterTags.includes(tag) ? colors.primary : colors.surfaceVariant,\n                  }\n                ]}\n                textStyle={{ \n                  color: filterTags.includes(tag) ? 'white' : '#1C1B1F'\n                }}\n                onPress={() => {\n                  if (filterTags.includes(tag)) {\n                    setFilterTags(filterTags.filter(t => t !== tag));\n                  } else {\n                    setFilterTags([...filterTags, tag]);\n                  }\n                }}\n              >\n                {tag}\n              </Chip>\n            ))}\n          </ScrollView>\n          \n          <Button \n            mode=\"text\" \n            onPress={() => {\n              setSelectedPriority(null);\n              setFilterTags([]);\n            }}\n            style={styles.clearButton}\n          >\n            Clear Filters\n          </Button>\n        </View>\n      )}\n\n      {loading ? (\n        <View style={styles.loadingContainer}>\n          {[1, 2, 3].map((_, index) => (\n            <View key={index} style={[styles.templateCard, { marginBottom: 16 }]}>\n              <Skeleton width=\"70%\" height={24} style={{ marginBottom: 8 }} />\n              <Skeleton width=\"100%\" height={16} style={{ marginBottom: 4 }} />\n              <Skeleton width=\"90%\" height={16} style={{ marginBottom: 12 }} />\n              <View style={{ flexDirection: 'row', marginBottom: 12 }}>\n                <Skeleton width={80} height={20} style={{ marginRight: 8 }} />\n                <Skeleton width={80} height={20} />\n              </View>\n            </View>\n          ))}\n        </View>\n      ) : processedTemplates.length === 0 ? (\n        <View style={styles.emptyContainer}>\n          <Text style={[styles.emptyText, { color: '#1C1B1F' }]}>\n            No templates yet\n          </Text>\n          <Text style={[styles.emptySubtext, { color: '#49454F' }]}>\n            Create templates to speed up your task creation process\n          </Text>\n          <Button \n            mode=\"contained\" \n            onPress={() => navigation.navigate('CreateTemplate')}\n            style={{ marginTop: 16 }}\n          >\n            Create Your First Template\n          </Button>\n        </View>\n      ) : (\n        <FlatList\n          data={processedTemplates}\n          renderItem={viewMode === 'grid' ? renderGridItem : renderListItem}\n          keyExtractor={item => item.id}\n          contentContainerStyle={styles.listContent}\n          numColumns={viewMode === 'grid' ? 2 : 1}\n          columnWrapperStyle={viewMode === 'grid' ? styles.gridColumnWrapper : undefined}\n          key={viewMode} // Forces remount when switching view modes\n        />\n      )}\n\n      <FAB\n        style={[styles.fab, { backgroundColor: colors.primary }]}\n        icon=\"plus\"\n        onPress={() => navigation.navigate('CreateTemplate')}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingTop: 12,\n  },\n  screenTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n  },\n  headerActions: {\n    flexDirection: 'row',\n  },\n  searchBar: {\n    margin: 16,\n    marginTop: 8,\n    elevation: 0,\n  },\n  listContent: {\n    padding: 16,\n    width: '100%', \n  },\n  gridItem: {\n    flex: 1,\n    margin: 4,\n    maxWidth: '100%',\n  },\n  gridColumnWrapper: {\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  templateCard: {\n    elevation: 2,\n    borderRadius: 12,\n    overflow: 'hidden',\n    marginBottom: 12,\n  },\n  listCard: {\n    marginBottom: 12,\n    borderRadius: 12,\n    elevation: 2,\n    width: '100%',  \n  },\n  priorityIndicator: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    width: 16,\n    height: 16,\n    borderRadius: 8,\n  },\n  templateName: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 6,\n  },\n  templateDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 8,\n  },\n  templateStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8,\n  },\n  templateStat: {\n    fontSize: 12,\n    color: '#666',\n  },\n  tagsContainer: {\n    flexDirection: 'row',\n    marginVertical: 8,\n    maxWidth: '100%',\n  },\n  tag: {\n    marginRight: 4,\n    marginBottom: 4,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  emptyText: {\n    fontSize: 20,\n    fontWeight: '600',\n    marginTop: 16,\n    marginBottom: 8,\n  },\n  emptySubtext: {\n    fontSize: 14,\n    color: '#666',\n    textAlign: 'center',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  loadingContainer: {\n    padding: 16,\n  },\n  listItemHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n    width: '100%',\n  },\n  cardActions: {\n    justifyContent: 'flex-end',\n    flexWrap: 'wrap',\n  },\n  filterContainer: {\n    padding: 16,\n    paddingTop: 0,\n  },\n  filterTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 12,\n  },\n  filterLabel: {\n    fontSize: 14,\n    marginBottom: 8,\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n  },\n  tagFilters: {\n    marginBottom: 16,\n  },\n  tagChip: {\n    marginRight: 8,\n  },\n  clearButton: {\n    alignSelf: 'flex-end',\n  }\n}); ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  Modal,\n  Alert,\n  Platform\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport { useTaskStore } from '../stores/taskStore';\nimport { TaskTemplate, Priority } from '../types/Task';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { AntDesign } from '@expo/vector-icons';\n\ninterface TemplateFormProps {\n  template?: TaskTemplate;\n  isVisible: boolean;\n  onClose: () => void;\n  sourceTaskId?: string; // For creating template from task\n}\n\nconst TemplateForm: React.FC<TemplateFormProps> = ({\n  template,\n  isVisible,\n  onClose,\n  sourceTaskId\n}) => {\n  const isEditing = !!template;\n  const { theme, isDark } = useTheme();\n  const { \n    addTemplate, \n    updateTemplate, \n    categories,\n    saveTaskAsTemplate\n  } = useTaskStore() as any;\n\n  // Form state\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [title, setTitle] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [priority, setPriority] = useState<Priority>('medium');\n  const [categoryId, setCategoryId] = useState<string | undefined>(undefined);\n  const [dueTimeOffset, setDueTimeOffset] = useState<string>('');\n  const [subtasks, setSubtasks] = useState<Array<{ title: string }>>([]);\n  const [newSubtask, setNewSubtask] = useState('');\n\n  // Initialize form with template values when editing\n  useEffect(() => {\n    if (template) {\n      setName(template.name);\n      setDescription(template.description || '');\n      setTitle(template.title);\n      setTaskDescription(template.taskDescription || '');\n      setPriority(template.priority);\n      setCategoryId(template.categoryId);\n      if (template.dueTimeOffset) {\n        setDueTimeOffset(template.dueTimeOffset.toString());\n      }\n      if (template.subtasks) {\n        setSubtasks([...template.subtasks]);\n      }\n    } else {\n      // Reset form when creating new template\n      resetForm();\n    }\n  }, [template, isVisible]);\n\n  // Reset form fields\n  const resetForm = () => {\n    setName('');\n    setDescription('');\n    setTitle('');\n    setTaskDescription('');\n    setPriority('medium');\n    setCategoryId(undefined);\n    setDueTimeOffset('');\n    setSubtasks([]);\n    setNewSubtask('');\n  };\n\n  // Add subtask to list\n  const handleAddSubtask = () => {\n    if (newSubtask.trim()) {\n      setSubtasks([...subtasks, { title: newSubtask.trim() }]);\n      setNewSubtask('');\n    }\n  };\n\n  // Remove subtask from list\n  const handleRemoveSubtask = (index: number) => {\n    setSubtasks(subtasks.filter((_, i) => i !== index));\n  };\n\n  // Save template\n  const handleSave = async () => {\n    // Validate required fields\n    if (!name.trim()) {\n      Alert.alert('Error', 'Please enter a template name');\n      return;\n    }\n\n    if (!title.trim()) {\n      Alert.alert('Error', 'Please enter a task title');\n      return;\n    }\n\n    try {\n      if (sourceTaskId) {\n        // Creating from existing task\n        await saveTaskAsTemplate(sourceTaskId, name, description);\n        Alert.alert('Success', 'Task saved as template');\n      } else if (isEditing && template) {\n        // Update existing template\n        await updateTemplate(template.id, {\n          name,\n          description,\n          title,\n          taskDescription,\n          priority,\n          categoryId,\n          dueTimeOffset: dueTimeOffset ? parseInt(dueTimeOffset) : undefined,\n          subtasks\n        });\n        Alert.alert('Success', 'Template updated');\n      } else {\n        // Create new template\n        await addTemplate({\n          name,\n          description,\n          title,\n          taskDescription,\n          priority,\n          categoryId,\n          dueTimeOffset: dueTimeOffset ? parseInt(dueTimeOffset) : undefined,\n          subtasks\n        });\n        Alert.alert('Success', 'Template created');\n      }\n      \n      resetForm();\n      onClose();\n    } catch (error) {\n      console.error('Failed to save template:', error);\n      Alert.alert('Error', 'Failed to save template');\n    }\n  };\n\n  return (\n    <Modal\n      visible={isVisible}\n      animationType=\"slide\"\n      transparent={true}\n      onRequestClose={onClose}\n    >\n      <View style={[\n        styles.modalContainer,\n        { backgroundColor: isDark ? 'rgba(0,0,0,0.7)' : 'rgba(0,0,0,0.5)' }\n      ]}>\n        <View style={[\n          styles.modalContent,\n          { backgroundColor: isDark ? '#222' : '#fff' }\n        ]}>\n          <View style={styles.header}>\n            <Text style={[styles.heading, { color: theme.colors.text }]}>\n              {isEditing ? 'Edit Template' : sourceTaskId ? 'Save as Template' : 'Create Template'}\n            </Text>\n            <TouchableOpacity onPress={onClose} style={styles.closeButton}>\n              <AntDesign name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n\n          <ScrollView style={styles.formContainer}>\n            <View style={styles.formGroup}>\n              <Text style={[styles.label, { color: theme.colors.text }]}>Template Name*</Text>\n              <TextInput\n                style={[\n                  styles.input,\n                  { \n                    color: theme.colors.text,\n                    backgroundColor: isDark ? '#333' : '#f5f5f5',\n                    borderColor: isDark ? '#444' : '#ddd'\n                  }\n                ]}\n                value={name}\n                onChangeText={setName}\n                placeholder=\"Enter template name\"\n                placeholderTextColor={isDark ? '#999' : '#aaa'}\n              />\n            </View>\n\n            <View style={styles.formGroup}>\n              <Text style={[styles.label, { color: theme.colors.text }]}>Description</Text>\n              <TextInput\n                style={[\n                  styles.textArea,\n                  { \n                    color: theme.colors.text,\n                    backgroundColor: isDark ? '#333' : '#f5f5f5',\n                    borderColor: isDark ? '#444' : '#ddd'\n                  }\n                ]}\n                value={description}\n                onChangeText={setDescription}\n                placeholder=\"Enter template description\"\n                placeholderTextColor={isDark ? '#999' : '#aaa'}\n                multiline\n                numberOfLines={3}\n                textAlignVertical=\"top\"\n              />\n            </View>\n\n            {!sourceTaskId && (\n              <>\n                <View style={styles.formGroup}>\n                  <Text style={[styles.label, { color: theme.colors.text }]}>Task Title*</Text>\n                  <TextInput\n                    style={[\n                      styles.input,\n                      { \n                        color: theme.colors.text,\n                        backgroundColor: isDark ? '#333' : '#f5f5f5',\n                        borderColor: isDark ? '#444' : '#ddd'\n                      }\n                    ]}\n                    value={title}\n                    onChangeText={setTitle}\n                    placeholder=\"Enter task title\"\n                    placeholderTextColor={isDark ? '#999' : '#aaa'}\n                  />\n                </View>\n\n                <View style={styles.formGroup}>\n                  <Text style={[styles.label, { color: theme.colors.text }]}>Task Description</Text>\n                  <TextInput\n                    style={[\n                      styles.textArea,\n                      { \n                        color: theme.colors.text,\n                        backgroundColor: isDark ? '#333' : '#f5f5f5',\n                        borderColor: isDark ? '#444' : '#ddd'\n                      }\n                    ]}\n                    value={taskDescription}\n                    onChangeText={setTaskDescription}\n                    placeholder=\"Enter task description\"\n                    placeholderTextColor={isDark ? '#999' : '#aaa'}\n                    multiline\n                    numberOfLines={3}\n                    textAlignVertical=\"top\"\n                  />\n                </View>\n\n                <View style={styles.formGroup}>\n                  <Text style={[styles.label, { color: theme.colors.text }]}>Priority</Text>\n                  <View style={[\n                    styles.pickerContainer,\n                    { borderColor: isDark ? '#444' : '#ddd' }\n                  ]}>\n                    <Picker\n                      selectedValue={priority}\n                      onValueChange={(itemValue) => setPriority(itemValue as Priority)}\n                      style={[styles.picker, { color: theme.colors.text }]}\n                      dropdownIconColor={theme.colors.text}\n                    >\n                      <Picker.Item label=\"Low\" value=\"low\" />\n                      <Picker.Item label=\"Medium\" value=\"medium\" />\n                      <Picker.Item label=\"High\" value=\"high\" />\n                    </Picker>\n                  </View>\n                </View>\n\n                <View style={styles.formGroup}>\n                  <Text style={[styles.label, { color: theme.colors.text }]}>Category</Text>\n                  <View style={[\n                    styles.pickerContainer,\n                    { borderColor: isDark ? '#444' : '#ddd' }\n                  ]}>\n                    <Picker\n                      selectedValue={categoryId}\n                      onValueChange={(itemValue) => setCategoryId(itemValue)}\n                      style={[styles.picker, { color: theme.colors.text }]}\n                      dropdownIconColor={theme.colors.text}\n                    >\n                      <Picker.Item label=\"Select a category\" value={undefined} />\n                      {categories && categories.length > 0 ? categories.map((category: any) => (\n                        <Picker.Item \n                          key={category.id} \n                          label={category.name} \n                          value={category.id} \n                        />\n                      )) : null}\n                    </Picker>\n                  </View>\n                </View>\n\n                <View style={styles.formGroup}>\n                  <Text style={[styles.label, { color: theme.colors.text }]}>Due in Days</Text>\n                  <TextInput\n                    style={[\n                      styles.input,\n                      { \n                        color: theme.colors.text,\n                        backgroundColor: isDark ? '#333' : '#f5f5f5',\n                        borderColor: isDark ? '#444' : '#ddd'\n                      }\n                    ]}\n                    value={dueTimeOffset}\n                    onChangeText={(text) => setDueTimeOffset(text.replace(/[^0-9]/g, ''))}\n                    placeholder=\"How many days from creation (e.g., 7)\"\n                    placeholderTextColor={isDark ? '#999' : '#aaa'}\n                    keyboardType=\"numeric\"\n                  />\n                </View>\n\n                <View style={styles.formGroup}>\n                  <Text style={[styles.label, { color: theme.colors.text }]}>Subtasks</Text>\n                  <View style={styles.subtaskInputContainer}>\n                    <TextInput\n                      style={[\n                        styles.subtaskInput,\n                        { \n                          color: theme.colors.text,\n                          backgroundColor: isDark ? '#333' : '#f5f5f5',\n                          borderColor: isDark ? '#444' : '#ddd'\n                        }\n                      ]}\n                      value={newSubtask}\n                      onChangeText={setNewSubtask}\n                      placeholder=\"Enter subtask\"\n                      placeholderTextColor={isDark ? '#999' : '#aaa'}\n                      onSubmitEditing={handleAddSubtask}\n                    />\n                    <TouchableOpacity\n                      style={[styles.addButton, { backgroundColor: theme.colors.primary }]}\n                      onPress={handleAddSubtask}\n                    >\n                      <Text style={styles.addButtonText}>Add</Text>\n                    </TouchableOpacity>\n                  </View>\n\n                  {subtasks.length > 0 && (\n                    <View style={styles.subtaskList}>\n                      {subtasks.map((subtask, index) => (\n                        <View key={index} style={styles.subtaskItem}>\n                          <Text \n                            style={[styles.subtaskTitle, { color: theme.colors.text }]}\n                            numberOfLines={1}\n                          >\n                            {subtask.title}\n                          </Text>\n                          <TouchableOpacity\n                            style={styles.removeButton}\n                            onPress={() => handleRemoveSubtask(index)}\n                          >\n                            <AntDesign name=\"close\" size={16} color={theme.colors.text} />\n                          </TouchableOpacity>\n                        </View>\n                      ))}\n                    </View>\n                  )}\n                </View>\n              </>\n            )}\n\n            <View style={styles.buttonContainer}>\n              <TouchableOpacity\n                style={[styles.button, styles.cancelButton, { borderColor: theme.colors.primary }]}\n                onPress={onClose}\n              >\n                <Text style={[styles.buttonText, { color: theme.colors.primary }]}>Cancel</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity\n                style={[styles.button, styles.saveButton, { backgroundColor: theme.colors.primary }]}\n                onPress={handleSave}\n              >\n                <Text style={[styles.buttonText, styles.saveButtonText]}>\n                  {isEditing ? 'Update' : 'Save'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </ScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    width: '90%',\n    maxHeight: '80%',\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    padding: 4,\n  },\n  formContainer: {\n    padding: 16,\n  },\n  formGroup: {\n    marginBottom: 16,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  input: {\n    height: 48,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    fontSize: 16,\n  },\n  textArea: {\n    minHeight: 80,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    paddingTop: 8,\n    fontSize: 16,\n  },\n  pickerContainer: {\n    borderWidth: 1,\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  picker: {\n    height: 48,\n  },\n  subtaskInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  subtaskInput: {\n    flex: 1,\n    height: 48,\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    fontSize: 16,\n    marginRight: 8,\n  },\n  addButton: {\n    height: 48,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  subtaskList: {\n    marginTop: 12,\n  },\n  subtaskItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 6,\n    marginVertical: 4,\n  },\n  subtaskTitle: {\n    flex: 1,\n    fontSize: 16,\n  },\n  removeButton: {\n    padding: 4,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 24,\n    marginBottom: 16,\n  },\n  button: {\n    flex: 1,\n    height: 48,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  cancelButton: {\n    backgroundColor: 'transparent',\n    borderWidth: 1,\n    marginRight: 8,\n  },\n  saveButton: {\n    marginLeft: 8,\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  saveButtonText: {\n    color: '#fff',\n  },\n});\n\nexport default TemplateForm; ","import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport TemplateForm from '../components/TemplateForm';\nimport { useTheme } from '../theme/ThemeProvider';\n\nexport default function CreateTemplateScreen() {\n  const navigation = useNavigation();\n  const { theme } = useTheme();\n  \n  const handleClose = () => {\n    navigation.goBack();\n  };\n  \n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <TemplateForm\n        isVisible={true}\n        onClose={handleClose}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Alert } from 'react-native';\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\nimport { Text, Card, Button, Chip, Divider, IconButton, FAB, ActivityIndicator } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTaskStore } from '../stores/taskStore';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { RootStackParamList } from '../navigation/types';\n\ntype TemplateDetailRouteProp = RouteProp<RootStackParamList, 'TemplateDetail'>;\n\nexport default function TemplateDetailScreen() {\n  const navigation = useNavigation();\n  const route = useRoute<TemplateDetailRouteProp>();\n  const { templateId } = route.params;\n  const { theme, isDark } = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [template, setTemplate] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Use templates from the store with a default empty array to prevent \"find of undefined\" errors\n  const { templates = [], deleteTemplate, createTaskFromTemplate } = useTaskStore() as any;\n  \n  useEffect(() => {\n    loadTemplateDetails();\n  }, [templateId, templates]);\n  \n  const loadTemplateDetails = () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Safely check if templates exists before calling find\n      if (!templates || !Array.isArray(templates)) {\n        throw new Error('Templates data is not available');\n      }\n      \n      // Find the template by ID from the store\n      const foundTemplate = templates.find((t: any) => t.id === templateId);\n      \n      if (foundTemplate) {\n        setTemplate(foundTemplate);\n      } else {\n        setError('Template not found');\n        // Don't navigate away immediately, show error state instead\n      }\n    } catch (err) {\n      console.error('Error loading template:', err);\n      setError('Failed to load template details');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleUseTemplate = () => {\n    if (!template) return;\n    \n    try {\n      // Use the store function to create a task from this template\n      createTaskFromTemplate(template);\n      Alert.alert('Success', 'Task created from template!');\n      navigation.navigate('Home');\n    } catch (error) {\n      console.error('Error using template:', error);\n      Alert.alert('Error', 'Failed to use template');\n    }\n  };\n  \n  const handleEditTemplate = () => {\n    // Navigate to edit screen (can reuse CreateTemplate with params)\n    navigation.navigate('CreateTemplate', { templateId });\n  };\n  \n  const handleDeleteTemplate = () => {\n    Alert.alert(\n      'Delete Template',\n      'Are you sure you want to delete this template?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { \n          text: 'Delete', \n          style: 'destructive',\n          onPress: () => {\n            try {\n              deleteTemplate(templateId);\n              Alert.alert('Success', 'Template deleted successfully');\n              navigation.goBack();\n            } catch (error) {\n              console.error('Error deleting template:', error);\n              Alert.alert('Error', 'Failed to delete template');\n            }\n          }\n        }\n      ]\n    );\n  };\n  \n  const handleRetry = () => {\n    loadTemplateDetails();\n  };\n  \n  if (loading) {\n    return (\n      <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n  \n  if (error || !template) {\n    return (\n      <View style={[styles.container, styles.centeredContent, { backgroundColor: theme.colors.background }]}>\n        <MaterialCommunityIcons\n          name=\"alert-circle-outline\"\n          size={64}\n          color={theme.colors.error}\n        />\n        <Text style={[styles.errorText, { color: theme.colors.error }]}>\n          {error || 'Template not found'}\n        </Text>\n        <Button \n          mode=\"contained\" \n          onPress={handleRetry}\n          style={{ marginTop: 16 }}\n        >\n          Retry\n        </Button>\n        <Button \n          mode=\"outlined\" \n          onPress={() => navigation.goBack()}\n          style={{ marginTop: 12 }}\n        >\n          Go Back\n        </Button>\n      </View>\n    );\n  }\n  \n  // Get priority color with fallback for safety\n  const getPriorityColor = (priority: string | undefined) => {\n    if (!priority) return '#BDBDBD';\n    \n    switch (priority.toLowerCase()) {\n      case 'high':\n        return '#FF5252';\n      case 'medium':\n        return '#FFB300';\n      case 'low':\n        return '#69F0AE';\n      default:\n        return '#BDBDBD';\n    }\n  };\n  \n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <ScrollView style={styles.scrollView}>\n        <Card style={[styles.card, { backgroundColor: theme.colors.surface }]}>\n          <Card.Content>\n            <View style={styles.headerRow}>\n              <Text style={[styles.title, { color: theme.colors.text }]}>\n                {template.name || template.title || 'Untitled Template'}\n              </Text>\n              \n              {template.priority && (\n                <Chip \n                  style={{ backgroundColor: getPriorityColor(template.priority) }}\n                  textStyle={{ color: '#fff' }}\n                >\n                  {template.priority}\n                </Chip>\n              )}\n            </View>\n            \n            <Text style={[styles.description, { color: theme.colors.text }]}>\n              {template.description || 'No description provided'}\n            </Text>\n            \n            {template.tags && template.tags.length > 0 && (\n              <ScrollView \n                horizontal\n                showsHorizontalScrollIndicator={false}\n                style={styles.tagsContainer}\n                contentContainerStyle={styles.tagsContent}\n              >\n                {template.tags.map((tag: any, index: number) => (\n                  <Chip \n                    key={index}\n                    style={styles.tag}\n                    textStyle={{ color: isDark ? '#fff' : theme.colors.text }}\n                  >\n                    {typeof tag === 'string' ? tag : tag.name}\n                  </Chip>\n                ))}\n              </ScrollView>\n            )}\n            \n            <View style={styles.metaRow}>\n              <Text style={[styles.metaText, { color: theme.colors.text }]}>\n                <MaterialCommunityIcons name=\"clock-outline\" size={16} color={theme.colors.primary} />\n                {' '}Estimated time: {template.estimatedTime || 0} minutes\n              </Text>\n              <Text style={[styles.metaText, { color: theme.colors.text }]}>\n                <MaterialCommunityIcons name=\"calendar-outline\" size={16} color={theme.colors.primary} />\n                {' '}Created: {template.createdAt ? new Date(template.createdAt).toLocaleDateString() : 'Unknown'}\n              </Text>\n            </View>\n          </Card.Content>\n        </Card>\n        \n        <Card style={[styles.card, { backgroundColor: theme.colors.surface }]}>\n          <Card.Content>\n            <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>\n              Tasks ({template.subtasks?.length || template.tasks?.length || 0})\n            </Text>\n            \n            {/* Use either subtasks or tasks property, depending on what's available */}\n            {(template.subtasks || template.tasks || []).length > 0 ? (\n              <ScrollView style={styles.taskListContainer}>\n                {(template.subtasks || template.tasks || []).map((task: any, index: number) => (\n                  <View key={index} style={styles.taskItem}>\n                    <MaterialCommunityIcons \n                      name=\"circle-small\" \n                      size={24} \n                      color={theme.colors.primary} \n                      style={styles.taskBullet}\n                    />\n                    <Text style={[styles.taskText, { color: theme.colors.text }]}>\n                      {task.title || task.name || `Task ${index + 1}`}\n                    </Text>\n                  </View>\n                ))}\n              </ScrollView>\n            ) : (\n              <Text style={[styles.emptyText, { color: theme.colors.placeholder }]}>\n                No tasks defined in this template\n              </Text>\n            )}\n          </Card.Content>\n        </Card>\n      </ScrollView>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          mode=\"contained\" \n          onPress={handleUseTemplate}\n          style={[styles.button, { backgroundColor: theme.colors.primary }]}\n          icon=\"arrow-right\"\n        >\n          Use Template\n        </Button>\n      </View>\n      \n      <FAB\n        icon=\"pencil\"\n        style={[styles.editFab, { backgroundColor: theme.colors.primary }]}\n        onPress={handleEditTemplate}\n      />\n      \n      <FAB\n        icon=\"delete\"\n        style={[styles.deleteFab, { backgroundColor: theme.colors.error }]}\n        onPress={handleDeleteTemplate}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  centeredContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 16,\n    marginTop: 12,\n    textAlign: 'center',\n  },\n  scrollView: {\n    flex: 1,\n    padding: 16,\n  },\n  card: {\n    marginBottom: 16,\n    borderRadius: 12,\n    elevation: 4,\n  },\n  headerRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 16,\n  },\n  tagsContainer: {\n    marginBottom: 16,\n  },\n  tagsContent: {\n    paddingRight: 16,\n  },\n  tag: {\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  metaRow: {\n    marginBottom: 8,\n  },\n  metaText: {\n    fontSize: 14,\n    marginBottom: 4,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  taskListContainer: {\n    maxHeight: 250,\n  },\n  taskItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  taskBullet: {\n    marginRight: 8,\n  },\n  taskText: {\n    fontSize: 16,\n  },\n  emptyText: {\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: 16,\n  },\n  buttonContainer: {\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: '#E0E0E0',\n  },\n  button: {\n    padding: 8,\n  },\n  editFab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 80,\n  },\n  deleteFab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 140,\n  },\n}); ","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useTheme } from '../theme/ThemeProvider';\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../navigation/types';\nimport PomodoroTimer from '../components/PomodoroTimer';\n\ntype PomodoroScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Pomodoro'>;\n\nexport default function PomodoroScreen() {\n  const { theme } = useTheme();\n  const navigation = useNavigation<PomodoroScreenNavigationProp>();\n  const route = useRoute();\n  const { taskId } = route.params as { taskId: string };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <PomodoroTimer initialTaskId={taskId} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useTheme, TextInput, Button } from 'react-native-paper';\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../navigation/types';\n\ntype AddCommentScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'AddComment'>;\n\nexport default function AddCommentScreen() {\n  const theme = useTheme();\n  const navigation = useNavigation<AddCommentScreenNavigationProp>();\n  const route = useRoute();\n  const { taskId } = route.params as { taskId: string };\n  const [comment, setComment] = useState('');\n\n  const handleAddComment = () => {\n    // TODO: Implement comment addition logic\n    navigation.goBack();\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <TextInput\n        label=\"Add a comment\"\n        value={comment}\n        onChangeText={setComment}\n        multiline\n        style={styles.input}\n      />\n      <Button mode=\"contained\" onPress={handleAddComment} style={styles.button}>\n        Add Comment\n      </Button>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 8,\n  },\n}); ","import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useTheme, TextInput, Button, List } from 'react-native-paper';\nimport { useRoute, useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../navigation/types';\n\ntype ShareTaskScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'ShareTask'>;\n\nexport default function ShareTaskScreen() {\n  const theme = useTheme();\n  const navigation = useNavigation<ShareTaskScreenNavigationProp>();\n  const route = useRoute();\n  const { taskId } = route.params as { taskId: string };\n  const [email, setEmail] = useState('');\n\n  const handleShare = () => {\n    // TODO: Implement task sharing logic\n    navigation.goBack();\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <TextInput\n        label=\"Enter email address\"\n        value={email}\n        onChangeText={setEmail}\n        keyboardType=\"email-address\"\n        autoCapitalize=\"none\"\n        style={styles.input}\n      />\n      <Button mode=\"contained\" onPress={handleShare} style={styles.button}>\n        Share Task\n      </Button>\n      <List.Section>\n        <List.Subheader>Recently Shared With</List.Subheader>\n        {/* TODO: Add list of recent shares */}\n      </List.Section>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 8,\n  },\n}); ","import React, { useState, useEffect } from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { IconButton } from 'react-native-paper';\nimport { auth } from '../config/firebase';\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport { List } from 'react-native-paper';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\n// Import screens\nimport TasksScreen from '../screens/TasksScreen';\nimport CalendarScreen from '../screens/CalendarScreen';\nimport StatsScreen from '../screens/StatsScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport TaskDetailScreen from '../screens/TaskDetailScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport TeamScreen from '../screens/TeamScreen';\nimport GroupsScreen from '../screens/GroupsScreen';\nimport CreateTaskScreen from '../screens/CreateTaskScreen';\nimport EditTaskScreen from '../screens/EditTaskScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport CompletedScreen from '../screens/CompletedScreen';\nimport CreateGroupScreen from '../screens/CreateGroupScreen';\nimport TemplatesScreen from '../screens/TemplatesScreen';\nimport CreateTemplateScreen from '../screens/CreateTemplateScreen';\nimport TemplateDetailScreen from '../screens/TemplateDetailScreen';\nimport PomodoroScreen from '../screens/PomodoroScreen';\nimport AddCommentScreen from '../screens/AddCommentScreen';\nimport ShareTaskScreen from '../screens/ShareTaskScreen';\n\n// Import types\nimport { RootStackParamList, MainTabsParamList } from './types';\n\n// Create new screens for Templates and Pomodoro\nimport { View, Text } from 'react-native';\nimport PomodoroTimer from '../components/PomodoroTimer';\nimport TemplateList from '../components/TemplateList';\n\n// Focus Screen (Pomodoro)\nfunction FocusScreen() {\n  return (\n    <View style={{ flex: 1 }}>\n      <PomodoroTimer \n        showCloseButton={false}\n        onClose={() => {}} \n        initialTaskId={undefined} \n      />\n    </View>\n  );\n}\n\n// Templates Screen (internal version - not used)\n// Remove or comment out this function since we're importing the real TemplatesScreen\n/* function TemplatesScreen() {\n  return (\n    <View style={{ flex: 1, padding: 16 }}>\n      <TemplateList onSelectTemplate={() => {}} />\n    </View>\n  );\n} */\n\n// Create navigators\nconst Stack = createNativeStackNavigator<RootStackParamList>();\nconst Tab = createBottomTabNavigator<MainTabsParamList>();\n\n// Bottom Tab Navigator\nfunction MainTabNavigator() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName: keyof typeof Ionicons.glyphMap = 'list';\n          \n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Tasks') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Calendar') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'Focus') {\n            iconName = focused ? 'timer' : 'timer-outline';\n          } else if (route.name === 'More') {\n            iconName = focused ? 'ellipsis-horizontal' : 'ellipsis-horizontal-outline';\n          }\n          \n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#007AFF',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n      <Tab.Screen \n        name=\"Home\" \n        component={HomeScreen}\n        options={{ title: 'Home' }}\n      />\n      <Tab.Screen \n        name=\"Tasks\" \n        component={TasksScreen}\n        options={{ title: 'Tasks' }}\n      />\n      <Tab.Screen \n        name=\"Calendar\" \n        component={CalendarScreen}\n        options={{ title: 'Calendar' }}\n      />\n      <Tab.Screen \n        name=\"Focus\" \n        component={FocusScreen}\n        options={{ title: 'Focus' }}\n      />\n      <Tab.Screen \n        name=\"More\" \n        component={MoreScreen}\n        options={{ title: 'More' }}\n      />\n    </Tab.Navigator>\n  );\n}\n\ntype MoreScreenNavigationProp = StackNavigationProp<RootStackParamList>;\n\n// More Screen with grouped options\nfunction MoreScreen({ navigation }: { navigation: MoreScreenNavigationProp }) {\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      // Navigation will be handled automatically by AppNavigator\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1, backgroundColor: '#fff' }}>\n      <List.Section>\n        <List.Subheader>Task Management</List.Subheader>\n        <List.Item\n          title=\"Templates\"\n          left={props => <List.Icon {...props} icon=\"file-document-outline\" />}\n          onPress={() => navigation.navigate('Templates')}\n        />\n        <List.Item\n          title=\"Completed Tasks\"\n          left={props => <List.Icon {...props} icon=\"check-circle-outline\" />}\n          onPress={() => navigation.navigate('Completed')}\n        />\n      </List.Section>\n\n      <List.Section>\n        <List.Subheader>Team & Groups</List.Subheader>\n        <List.Item\n          title=\"Team\"\n          left={props => <List.Icon {...props} icon=\"account-group-outline\" />}\n          onPress={() => navigation.navigate('Team')}\n        />\n        <List.Item\n          title=\"Groups\"\n          left={props => <List.Icon {...props} icon=\"folder-outline\" />}\n          onPress={() => navigation.navigate('Groups')}\n        />\n      </List.Section>\n\n      <List.Section>\n        <List.Subheader>Analytics</List.Subheader>\n        <List.Item\n          title=\"Statistics\"\n          left={props => <List.Icon {...props} icon=\"chart-bar\" />}\n          onPress={() => navigation.navigate('Stats')}\n        />\n      </List.Section>\n\n      <List.Section>\n        <List.Subheader>Settings</List.Subheader>\n        <List.Item\n          title=\"Profile\"\n          left={props => <List.Icon {...props} icon=\"account-outline\" />}\n          onPress={() => navigation.navigate('Profile')}\n        />\n        <List.Item\n          title=\"Settings\"\n          left={props => <List.Icon {...props} icon=\"cog-outline\" />}\n          onPress={() => navigation.navigate('Settings')}\n        />\n      </List.Section>\n\n      <List.Section>\n        <List.Item\n          title=\"Logout\"\n          left={props => <List.Icon {...props} icon=\"logout\" />}\n          onPress={handleLogout}\n          titleStyle={{ color: '#FF3B30' }}\n        />\n      </List.Section>\n    </View>\n  );\n}\n\n// Root Stack Navigator\nfunction AppNavigator() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setIsAuthenticated(!!user);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <Stack.Navigator \n      initialRouteName=\"Login\"\n      screenOptions={{\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#fff',\n        },\n        headerTintColor: '#000',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n      {!isAuthenticated ? (\n        <Stack.Screen \n          name=\"Login\" \n          component={LoginScreen} \n          options={{ headerShown: false }}\n        />\n      ) : (\n        <Stack.Screen \n          name=\"MainTabs\" \n          component={MainTabNavigator} \n          options={{ headerShown: false }}\n        />\n      )}\n      <Stack.Screen \n        name=\"TaskDetail\" \n        component={TaskDetailScreen}\n        options={{ title: 'Task Details' }}\n      />\n      <Stack.Screen \n        name=\"CreateTask\" \n        component={CreateTaskScreen}\n        options={{ title: 'Create Task' }}\n      />\n      <Stack.Screen \n        name=\"EditTask\" \n        component={EditTaskScreen}\n        options={{ title: 'Edit Task' }}\n      />\n      <Stack.Screen \n        name=\"Groups\" \n        component={GroupsScreen}\n        options={{ title: 'Groups' }}\n      />\n      <Stack.Screen \n        name=\"CreateGroup\" \n        component={CreateGroupScreen}\n        options={{ title: 'Create Group' }}\n      />\n      <Stack.Screen \n        name=\"Completed\" \n        component={CompletedScreen}\n        options={{ title: 'Completed Tasks' }}\n      />\n      <Stack.Screen \n        name=\"Templates\" \n        component={TemplatesScreen}\n        options={{ title: 'Templates' }}\n      />\n      <Stack.Screen \n        name=\"Pomodoro\" \n        component={PomodoroScreen}\n        options={{ title: 'Pomodoro Timer' }}\n      />\n      <Stack.Screen \n        name=\"AddComment\" \n        component={AddCommentScreen}\n        options={{ title: 'Add Comment' }}\n      />\n      <Stack.Screen \n        name=\"ShareTask\" \n        component={ShareTaskScreen}\n        options={{ title: 'Share Task' }}\n      />\n      <Stack.Screen \n        name=\"Team\" \n        component={TeamScreen}\n        options={{ title: 'Team' }}\n      />\n      <Stack.Screen \n        name=\"Stats\" \n        component={StatsScreen}\n        options={{ title: 'Statistics' }}\n      />\n      <Stack.Screen \n        name=\"Settings\" \n        component={SettingsScreen}\n        options={{ title: 'Settings' }}\n      />\n      <Stack.Screen \n        name=\"Profile\" \n        component={ProfileScreen}\n        options={{ title: 'Profile' }}\n      />\n      <Stack.Screen \n        name=\"CreateTemplate\" \n        component={CreateTemplateScreen} \n        options={{ \n          title: 'Create Template',\n          headerShown: true \n        }} \n      />\n      <Stack.Screen \n        name=\"TemplateDetail\" \n        component={TemplateDetailScreen} \n        options={{ \n          title: 'Template Details',\n          headerShown: true \n        }} \n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default AppNavigator; ","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { View, Text, ActivityIndicator } from 'react-native';\nimport databaseService from './DatabaseService';\n\ninterface DatabaseContextType {\n  isDbReady: boolean;\n}\n\nconst DatabaseContext = createContext<DatabaseContextType>({ isDbReady: false });\n\nexport const useDatabase = () => useContext(DatabaseContext);\n\nexport const DatabaseProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isDbReady, setIsDbReady] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const initDb = async () => {\n      try {\n        console.log('Initializing database from DatabaseProvider...');\n        await databaseService.initDatabase();\n        setIsDbReady(true);\n      } catch (err) {\n        console.error('Failed to initialize database:', err);\n        setError('Failed to initialize database. Please restart the app.');\n      }\n    };\n\n    initDb();\n  }, []);\n\n  if (error) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}>\n        <Text style={{ fontSize: 16, color: 'red', textAlign: 'center', marginBottom: 20 }}>\n          {error}\n        </Text>\n      </View>\n    );\n  }\n\n  if (!isDbReady) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n        <Text style={{ marginTop: 20, fontSize: 16 }}>Initializing database...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <DatabaseContext.Provider value={{ isDbReady }}>\n      {children}\n    </DatabaseContext.Provider>\n  );\n};\n\nexport default DatabaseProvider; ","import { DefaultTheme as NavigationDefaultTheme, DarkTheme as NavigationDarkTheme } from '@react-navigation/native';\nimport { lightColors, darkColors } from './themes';\n\nexport const customLightTheme = {\n  ...NavigationDefaultTheme,\n  colors: {\n    ...NavigationDefaultTheme.colors,\n    primary: lightColors.primary,\n    background: lightColors.background,\n    card: lightColors.card,\n    text: lightColors.text,\n    border: lightColors.border,\n    notification: lightColors.notification,\n  },\n};\n\nexport const customDarkTheme = {\n  ...NavigationDarkTheme,\n  colors: {\n    ...NavigationDarkTheme.colors,\n    primary: darkColors.primary,\n    background: darkColors.background,\n    card: darkColors.card,\n    text: darkColors.text,\n    border: darkColors.border,\n    notification: darkColors.notification,\n  },\n}; ","import React, { useEffect } from 'react';\nimport { StyleSheet } from \"react-native\";\nimport { PaperProvider, MD3DarkTheme, MD3LightTheme } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppNavigator from \"./src/navigation/AppNavigator\";\nimport { ThemeProvider, useTheme } from \"./src/theme/ThemeProvider\";\nimport DatabaseProvider from \"./src/database/DatabaseProvider\";\nimport { customLightTheme, customDarkTheme } from './src/theme/navigationTheme';\nimport { useTaskStore } from './src/stores/taskStore';\n\nfunction AppContent() {\n  const { isDark, theme } = useTheme();\n  const { initialize } = useTaskStore();\n  \n  // Create a combined theme for react-native-paper\n  const paperTheme = isDark \n    ? { ...MD3DarkTheme, colors: { ...MD3DarkTheme.colors, ...theme.colors } }\n    : { ...MD3LightTheme, colors: { ...MD3LightTheme.colors, ...theme.colors } };\n  \n  useEffect(() => {\n    // Initialize the store when the app starts\n    initialize();\n  }, []);\n  \n  return (\n    <PaperProvider theme={paperTheme}>\n      <NavigationContainer theme={isDark ? customDarkTheme : customLightTheme}>\n        <StatusBar style={isDark ? \"light\" : \"dark\"} />\n        <DatabaseProvider>\n          <AppNavigator />\n        </DatabaseProvider>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n}\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <ThemeProvider>\n        <AppContent />\n      </ThemeProvider>\n    </SafeAreaProvider>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [534], () => (__webpack_require__(5700)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","unsubscribeNetInfo","getApps","length","initializeApp","getApp","error","console","getAuth","initializeAuth","persistence","getReactNativePersistence","AsyncStorage","getFirestore","initializeFirestore","localCache","memoryLocalCache","experimentalForceLongPolling","useFetchStreams","NetInfo","state","isConnected","log","enableNetwork","catch","disableNetwork","analytics","isSupported","then","yes","getAnalytics","lightColors","primary","secondary","background","card","text","border","notification","success","warning","info","inactive","placeholder","highlight","cardBackground","shadowColor","surface","surfaceVariant","outline","darkColors","blueColors","light","assign","dark","greenColors","purpleColors","defaultTheme","name","mode","colors","ThemeContext","createContext","theme","isDark","toggleTheme","setThemeMode","setThemeName","customizeTheme","useTheme","useContext","THEME_MODE_KEY","THEME_NAME_KEY","CUSTOM_THEME_KEY","ThemeProvider","children","colorScheme","useColorScheme","themeMode","useState","themeName","customColors","setCustomColors","currentColors","React","getThemeColors","useEffect","async","savedMode","getItem","savedName","savedCustom","JSON","parse","loadThemeSettings","subscription","Appearance","addChangeListener","remove","contextValue","newMode","setItem","prev","newColors","stringify","_jsx","Provider","value","ViewToggle","onToggle","_jsxs","View","style","styles","container","backgroundColor","borderColor","TouchableOpacity","button","primaryContainer","onPress","activeOpacity","iconContainer","opacity","i","listLine","gridContainer","gridSquare","StyleSheet","create","flexDirection","borderRadius","overflow","borderWidth","paddingVertical","paddingHorizontal","alignItems","justifyContent","width","height","flexWrap","margin","MIGRATIONS","initialized","constructor","this","SQLite","createAllTables","createTableQueries","query","executeSql","createIndexQueries","warn","initDatabase","schemaVersionResult","currentVersion","rows","user_version","runMigrations","createDefaultTagsIfNeeded","params","processedParams","param","undefined","trim","toUpperCase","startsWith","result","getAllAsync","insertId","rowsAffected","_array","item","idx","runAsync","lastInsertRowId","changes","close","getTags","defaultTags","color","tag","createTag","version","migrations","migration","message","includes","_createTaskInternal","task","Math","random","toString","substring","now","Date","toISOString","title","description","dueDate","priority","completed","categoryId","reminder","updateTask","updates","fields","values","entries","forEach","key","push","join","deleteTask","getTasks","row","Boolean","createdAt","updatedAt","addComment","comment","substr","taskId","getComments","addTagToTask","tagId","removeTagFromTask","addAttachment","attachment","fileName","fileType","fileUri","getAttachments","getPendingSyncItems","tasks","comments","attachments","markAsSynced","type","table","transaction","callback","tx","sql","args","createTask","formatISO","databaseService","getTaskById","mapTaskFromDatabase","options","conditions","category","setValues","useTaskStore","set","get","isLoading","templates","categories","isInitialized","currentPomodoro","active","isBreak","timeRemaining","sessionId","currentSessionCount","pomodoroSettings","workDuration","shortBreakDuration","longBreakDuration","sessionsUntilLongBreak","autoStartNextSession","autoStartBreaks","fetchTasks","repoFilter","filter","status","taskRepository","fixedTasks","newId","find","addTask","newTask","t","markTaskAsCompleted","markTaskAsInProgress","toggleTaskCompletion","addSubtask","newSubtask","updatedTask","subtasks","toggleSubtask","subtaskId","updatedSubtasks","subtask","deleteSubtask","startPomodoro","pausePomodoro","resumePomodoro","stopPomodoro","logTime","reason","completePomodoro","skipBreak","updatePomodoroSettings","settings","fetchTemplates","mockTemplates","addTemplate","newTemplate","template","updateTemplate","updatedTemplate","deleteTemplate","createTaskFromTemplate","dueTimeOffset","initialize","createDefaultTasks","getCategories","defaultTasks","TaskItem","onStartPomodoro","onDelete","getPriorityColor","toLowerCase","Surface","borderLeftColor","content","header","titleContainer","MaterialIcons","getPriorityIcon","size","priorityIcon","Text","completedTitle","numberOfLines","actions","Chip","icon","compact","statusChip","marginRight","marginTop","IconButton","stopPropagation","pomodoroButton","iconColor","toggleButton","metadataRow","metadataIcon","metadataText","format","progressContainer","ProgressBar","progress","calculateProgress","st","progressBar","progressText","footer","tags","index","safeColor","fontSize","createSafeColorWithOpacity","marginBottom","elevation","borderLeftWidth","shadowOffset","shadowOpacity","shadowRadius","padding","paddingBottom","flex","fontWeight","textDecorationLine","metadataItem","marginLeft","AnimatedEmptyState","Animated","Value","scale","parallel","timing","toValue","duration","useNativeDriver","spring","friction","tension","start","transform","Ionicons","onBackground","onSurfaceVariant","textAlign","maxWidth","TaskList","onTaskPress","sortBy","sortOrder","providedTasks","storeTasks","setTasks","loading","setLoading","errorState","setErrorState","loadTasks","whereConditions","fetchedTasks","tagNames","split","tagColors","err","centered","ActivityIndicator","FlatList","data","keyExtractor","renderItem","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","onEndReached","list","contentContainerStyle","TaskGridView","onEditTask","onToggleCompletion","onToggleSubtaskCompletion","EmptyComponent","isMultiSelectMode","selectedTasks","onTaskSelect","onLongPress","windowDimensions","useWindowDimensions","selectedTask","setSelectedTask","showSubtasks","setShowSubtasks","menuVisible","setMenuVisible","itemWidth","spacing","handleToggleSubtask","isSelected","subtasksProgress","total","percentage","getSubtasksProgress","itemContainer","Card","selectedCard","Content","cardContent","statusContainer","Menu","visible","onDismiss","anchor","menuButton","contentStyle","Item","leadingIcon","completedText","ellipsizeMode","progressWrapper","cardFooter","metaItem","MaterialCommunityIcons","metaText","date","numColumns","listContainer","columnWrapperStyle","ListEmptyComponent","emptyContainer","emptyText","Modal","transparent","animationType","onRequestClose","modalContainer","modalContent","modalHeader","modalTitle","modalBody","renderSubtask","subtaskItem","subtaskContent","subtaskCheckbox","subtaskTitle","completedSubtask","modalFooter","modalButton","modalButtonText","flexGrow","alignSelf","flexShrink","maxHeight","paddingTop","closeButton","TaskCard","priorityColors","high","medium","low","formattedDate","taskInfo","metaContainer","Badge","actionButton","TimelineView","days","timelineTasks","setTimelineTasks","dateRange","setDateRange","expandedDates","setExpandedDates","fadeAnim","tasksByDate","useMemo","grouped","taskDate","isNaN","getTime","dateKey","sort","a","b","dateA","dateB","reduce","sortedTasks","priorityOrder","priorityDiff","localeCompare","dates","today","pastDays","floor","futureDays","addDays","todayKey","formatDate","isToday","isTomorrow","isYesterday","renderDayTimeline","tasksForDate","isExpanded","dateColor","isBefore","getDateSectionColor","dayContainer","borderBottomColor","dateHeader","toggleDateExpansion","dateHeaderContent","dateText","dateHeaderRight","taskCount","tasksContainer","renderTaskItem","emptyDayContainer","emptyDayText","ScrollView","scrollView","scrollContent","showsVerticalScrollIndicator","borderBottomWidth","taskItem","taskStatusContainer","checkbox","taskContent","taskTitle","taskDescription","priorityIndicator","priorityText","subtasksIndicator","subtasksText","progressBarContainer","progressFill","fontStyle","taskButton","taskButtonLabel","taskButtonText","timerDisplay","timerType","timer","fontVariant","sessionCount","controls","controlButton","minWidth","primaryButton","controlButtonText","statsSection","borderTopWidth","borderTopColor","statsTitle","statsGrid","statItem","statValue","statLabel","InlinePomodoroTimer","initialTaskId","onMinimize","selectedTaskId","setSelectedTaskId","timerRef","useRef","formattedTime","seconds","mins","secs","padStart","formatTime","isActive","timerTitle","current","setInterval","handleBreakComplete","handleSessionComplete","setState","clearInterval","AntDesign","selectNextTask","nextIndex","findIndex","_Fragment","handlePause","handleSkipBreak","handleStop","handleResume","handleStart","completedPomodoros","totalPomodoroTime","NotificationContext","showNotification","hideNotification","position","top","left","right","zIndex","iconText","textContainer","closeButtonText","actionButtonText","headerContainer","sectionTitle","subtaskList","deleteButton","marginVertical","addSubtaskContainer","input","addButton","SubTaskList","onChange","isNewTask","newSubtaskTitle","setNewSubtaskTitle","localSubtasks","setLocalSubtasks","handleAddSubtask","displaySubtasks","displayProgress","completedCount","round","willBeCompleted","Alert","alert","handleDeleteSubtask","TextInput","placeholderTextColor","onChangeText","onSubmitEditing","REMINDER_OPTIONS","label","RECURRENCE_TYPES","PRESET_CATEGORIES","QUICK_ADD_TEMPLATES","PRIORITY_OPTIONS","TaskForm","isVisible","onClose","onSave","setIsLoading","isSubmitting","setIsSubmitting","setError","validationErrors","setValidationErrors","setTitle","setDescription","setPriority","setDueDate","dueTime","setDueTime","setCategory","suggestedTitle","setSuggestedTitle","showSuggestion","setShowSuggestion","isGeneratingSuggestion","setIsGeneratingSuggestion","hasReminder","setHasReminder","reminderMinutes","setReminderMinutes","isRecurring","setIsRecurring","recurrence","recurrenceType","setRecurrenceType","recurrenceInterval","setRecurrenceInterval","interval","recurrenceEndDate","setRecurrenceEndDate","endDate","showAdvancedOptions","setShowAdvancedOptions","showDatePicker","setShowDatePicker","showTimePicker","setShowTimePicker","showRecurrenceEndDatePicker","setShowRecurrenceEndDatePicker","datePickerMode","setDatePickerMode","activeDateInput","setActiveDateInput","setSubtasks","setProgress","showQuickAdd","setShowQuickAdd","focusedSection","setFocusedSection","smartDateInput","setSmartDateInput","showSmartDateInput","setShowSmartDateInput","isListening","setIsListening","voiceTarget","setVoiceTarget","resetForm","openDateTimePicker","inputType","handleInteraction","Haptics","impactAsync","Light","Medium","Heavy","handleSubmit","validateForm","taskData","selectedTags","savedTask","errors","autoSaveTimeout","setTimeout","clearTimeout","availableTags","setAvailableTags","setSelectedTags","setTags","newTag","setNewTag","loadTags","handleAddTag","startVoiceInput","target","results","randomResult","accessibilityLabel","KeyboardAvoidingView","behavior","TouchableWithoutFeedback","handleKeyboardDismiss","Keyboard","dismiss","headerTitle","accessibilityRole","headerActions","quickAddButton","accessibilityHint","sectionNav","sectionTab","activeTab","sectionTabText","quickAddContainer","sectionLabel","horizontal","showsHorizontalScrollIndicator","quickAddItem","handleQuickAdd","FontAwesome5","quickAddText","newDueDate","setDate","getDate","tomorrow","Array","isArray","newSubtasks","handleUseTemplate","formContainer","keyboardShouldPersistTaps","inputSurface","titleInputContainer","inputError","voiceButton","disabled","suggestionContainer","suggestionText","acceptButton","acceptSuggestion","acceptButtonText","loadingContainer","HelperText","descriptionContainer","textArea","multiline","prioritySection","priorityContainer","option","priorityButton","dateTimeContainer","dateTimeButton","dateTimeButtonText","dateTimeButtonDisabled","formatTimeForDisplay","categoryContainer","cat","categoryButton","colorIndicator","categoryText","tagsContainer","tagsList","selected","toggleTag","tagInputContainer","tagInput","addTagButton","optionRow","optionLabel","Switch","onValueChange","trackColor","false","true","thumbColor","pickerContainer","Picker","selectedValue","recurDescription","getRecurrenceDescription","recurrenceRow","recurrenceLabel","recurrenceInput","parseInt","keyboardType","typePickerContainer","endDateButton","endDateButtonText","newProgress","errorContainer","errorText","saveButton","saveButtonDisabled","accessibilityState","saveButtonText","listeningIndicator","listeningText","cancelVoiceButton","cancelVoiceInput","cancelVoiceText","inputGroup","textAlignVertical","gap","dateTimeButtonTextDisabled","pickerLabel","picker","actionsContainer","cancelButton","cancelButtonText","createButton","createButtonText","subtasksContainer","subtaskItemLast","subtaskInput","addSubtaskButton","addSubtaskText","addSubtaskIcon","categoryButtonActive","categoryIcon","categoryTextActive","advancedButton","borderStyle","advancedButtonText","advancedSection","datePickerContainer","bottom","datePickerHeader","datePickerCancel","datePickerDone","advancedOptionsButton","aiSuggestButton","smartDateContainer","smartDateButton","smartDateText","smartDateInputContainer","smartDateSubmit","scrollContainer","pomodoroContainer","headerControls","iconButton","taskSelector","taskSelectorIcon","taskSelectorText","timerContainer","circularProgress","circleBackground","circleProgress","timerTextContainer","timerTypeText","timerText","letterSpacing","sessionCountText","controlsContainer","activeControls","mainControlButton","startButton","startButtonText","statsContainer","statsRow","statCard","modalOverlay","taskSelectorModal","taskOptionsContainer","taskOption","taskOptionContent","selectedIndicator","emptyTasksContainer","emptyTasksText","interruptionDialog","dialogTitle","dialogMessage","interruptionInput","dialogActions","dialogButton","dialogButtonText","infoContainer","infoTitle","infoSubtitle","infoText","lineHeight","benefitsList","benefitItem","benefitIcon","benefitText","PomodoroTimer","showCloseButton","interruptionNote","setInterruptionNote","showTaskSelector","setShowTaskSelector","showInterruptionDialog","setShowInterruptionDialog","soundEnabled","setSoundEnabled","showSettings","setShowSettings","progressAnimation","pulseAnimation","timerColor","totalDuration","circleCircumference","PI","staticStrokeDashoffset","interpolate","inputRange","outputRange","easing","Easing","linear","sequence","out","ease","in","setValue","handleClose","handleKeyDown","event","document","addEventListener","removeEventListener","Svg","Circle","cx","cy","r","stroke","strokeWidth","fill","strokeDasharray","strokeDashoffset","strokeLinecap","renderTaskOptions","activeTasks","handleTaskSelect","handleConfirmStop","TaskDetail","onEdit","onToggleSubtask","onUpdate","onBack","onPomodoro","onAddComment","onShare","showPomodoro","setShowPomodoro","showDeleteConfirm","setShowDeleteConfirm","headerLeft","priorityBadge","textStyle","completionDate","formatDistanceToNow","addSuffix","quickActions","quickAction","quickActionText","handlePomodoro","section","detailRow","detailLabel","detailValue","location","tagChip","subtaskHeader","subtaskProgress","calculateSubtaskProgress","pomodoroSessions","pomodoroStats","notes","note","noteCard","noteText","noteDate","Portal","deleteModal","deleteTitle","deleteMessage","deleteActions","Button","searchContainer","searchBar","filterContainer","filterButton","filterButtonContent","filterBadge","filterBadgeText","filterMenu","filterChipsContainer","chipScrollContainer","filterChip","emptySubtext","datePickerRow","dateButton","gridList","gridItem","gridCard","gridCardContent","gridHeader","gridTitleContainer","gridTitle","gridDescription","gridFooter","gridDateContainer","gridDate","gridTagsContainer","gridTags","textTransform","gridCheckButton","TasksScreen","navigation","useNavigation","viewMode","setViewMode","searchQuery","setSearchQuery","setFilter","dueDateRange","setSortBy","setSortOrder","showForm","setShowForm","pomodoroTaskId","setPomodoroTaskId","showFilterMenu","setShowFilterMenu","showSortMenu","setShowSortMenu","showDateFilterDialog","setShowDateFilterDialog","showStartDatePicker","setShowStartDatePicker","showEndDatePicker","setShowEndDatePicker","showDeleteDialog","setShowDeleteDialog","taskToDelete","setTaskToDelete","showTaskDetail","setShowTaskDetail","handleTaskPress","handleStartPomodoro","handleToggleCompletion","handleCreateTask","newTaskData","toggleFilter","indexOf","splice","isFilterActive","resetFilters","getFilteredTasks","beforeNullFilter","beforeSearch","searchTerm","titleMatch","descMatch","beforeStatus","beforePriority","end","beforeDate","startOk","endOk","beforeTags","taskTags","some","aPriority","bPriority","aDate","bDate","getActiveFiltersCount","count","handleDeleteTask","toLocaleDateString","forceDisplayAllTasks","debugTaskFiltering","allTaskIds","filteredTaskIds","missingTaskIds","taskAny","debugTimer","Searchbar","inputStyle","onSurface","toggleSortOrder","testTask","toLocaleTimeString","trailingIcon","Divider","charAt","slice","renderTaskView","Dialog","Title","DateTimePicker","display","selectedDate","Actions","buttonColor","navigate","CalendarView","onAddTask","taskStoreTasks","setSelectedDate","markedDates","setMarkedDates","tasksForSelectedDate","setTasksForSelectedDate","currentMonth","setCurrentMonth","isCalendarExpanded","setIsCalendarExpanded","calendarHeight","weekTasks","setWeekTasks","viewType","setViewType","currentWeekStart","setCurrentWeekStart","startOfWeek","viewTransition","menuAnchor","setMenuAnchor","newMarkedDates","dateString","priorities","dots","marked","selectedColor","monthStart","startOfMonth","monthEnd","endOfMonth","daysInMonth","eachDayOfInterval","day","dateStr","handleDateSelect","formatDisplayDate","handleAddTask","taskHeader","taskActions","pageX","pageY","nativeEvent","x","y","taskFooter","getWeekDates","weekEnd","endOfWeek","getDatesBetween","changeViewType","newViewType","renderTimelineTask","timelineTask","timelineTaskTitle","timelineTaskActions","timelineCheckbox","handleToggleTask","calendarHeader","goToPrevious","newWeekStart","subWeeks","prevMonth","subMonths","prevMonthStr","newYear","newMonth","currentMonthText","goToNext","addWeeks","nextMonth","addMonths","nextMonthStr","renderCalendarView","yearViewContainer","yearTitle","yearMonthsGrid","from","_","monthDate","monthStr","formattedMonthDate","isCurrentMonth","getMonth","getFullYear","isSelectedMonth","yearMonth","yearMonthText","weekViewContainer","weekHeader","weekTitle","weekDaysContainer","dayTasks","hasHighPriority","hasMediumPriority","hasLowPriority","weekDay","weekDayName","weekDayNumber","weekDayNumberText","weekDayDotsContainer","weekDayDot","weekDayTaskCount","taskListContainer","dateHeaderContainer","addButtonText","taskList","emptyState","addTaskButton","addTaskButtonText","todayStr","todayTasks","todayViewContainer","todayHeader","todayHeaderText","todayTaskList","ListHeaderComponent","todayInfoContainer","todayDateText","todayTaskStats","todayStatItem","todayStatNumber","todayStatLabel","daysWithTasks","timelineViewContainer","viewTitle","timelineScroll","timelineDateHeader","paddingLeft","timelineDateText","timeDisplay","calendarContainer","calendarWrapper","Calendar","calendar","calendarBackground","textSectionTitleColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","dotColor","selectedDotColor","arrowColor","monthTextColor","indicatorColor","textDayFontWeight","textMonthFontWeight","textDayHeaderFontWeight","textDayFontSize","textMonthFontSize","textDayHeaderFontSize","week","hideArrows","renderHeader","markingType","onDayPress","enableSwipeMonths","onMonthChange","month","legendRow","legendItem","legendDot","legendText","viewSelectorContainer","viewButton","viewButtonText","titleStyle","marginHorizontal","aspectRatio","CalendarScreen","showTaskForm","setShowTaskForm","handleTaskUpdate","handleToggleTaskCompletion","presentationStyle","handleTaskDelete","handleAddComment","handleShare","StatsScreen","stats","setStats","weeklyStats","setWeeklyStats","loadStats","completionRate","pending","overdue","highPriority","mediumPriority","lowPriority","meetings","averageCompletionTime","avgCompletionDays","startDate","weeklyData","Promise","all","added","renderStatCard","subtitle","variant","toFixed","statTitle","statSubtitle","weeklyChart","barContainer","bar","max","d","chartLegend","SettingsScreen","notificationsEnabled","setNotificationsEnabled","confirmDeleteEnabled","setConfirmDeleteEnabled","defaultPriority","setDefaultPriority","showPriorityDialog","setShowPriorityDialog","showConfirmResetDialog","setShowConfirmResetDialog","showThemeModeDialog","setShowThemeModeDialog","handleToggleNotifications","handleToggleConfirmDelete","List","props","handleAbout","dangerZone","dangerTitle","RadioButton","Group","radioItem","handleResetApp","TaskDetailScreen","route","handleEdit","handleDelete","goBack","memoryStorage","Map","SecureStore","require","getItemAsync","Storage","setItemAsync","removeItem","deleteItemAsync","delete","QuickActionButton","themeColors","quickActionButton","quickActionLabel","TaskSection","onSeeAll","displayedTasks","taskSection","sectionHeader","sectionTitleContainer","sectionTitleIndicator","textColor","emptyCard","emptyCardContent","Paragraph","scrollEnabled","headerContent","headerTop","greeting","profileButton","statsCard","statsContent","statsLabel","statsValue","pomodoroOverlay","emptyStateText","emptyStateSubtext","HomeScreen","activeTask","setActiveTask","isReturningUser","setIsReturningUser","refreshing","setRefreshing","userName","setUserName","showWelcome","setShowWelcome","welcomeOpacity","headerHeight","useFocusEffect","useCallback","onRefresh","hasLoggedInBefore","storedName","checkUserInfo","toDateString","allCompletedTasks","todayCompletedCount","hideWelcome","validProgress","navigateToTask","pendingTasks","highPriorityTasks","dueTodayTasks","navigateToTasks","screen","refreshControl","RefreshControl","Avatar","onPrimaryContainer","whiteSpace","AnimatedWelcome","onFinish","isDismissing","setIsDismissing","pressedIcon","setPressedIcon","titleOpacity","subtitleOpacity","iconOpacity","bounceAnim","fadeOutAnim","buttonScale","buttonOpacity","slideUpAnim","loop","sin","translateY","handleIconPress","LinearGradient","gradient","welcomeText","Pressable","pressed","iconPressable","iconPressed","iconWrapper","add","multiply","handleDismiss","buttonContainer","buttonText","CACHE_DURATION","delay","ms","memoryCache","cacheExpiry","isCacheValid","uid","expiry","ensureFirestoreInitialized","userService","createUserProfile","user","userRef","doc","userProfile","email","isAnonymous","displayName","photoURL","lastLogin","notifications","language","setDoc","merge","getUserProfile","cachedProfile","userDoc","race","getDoc","exists","profile","updateUserProfile","retries","updateData","serverTimestamp","updateDoc","currentProfile","updateUserSettings","isAnonymousUser","LoginScreen","setEmail","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","rememberMe","setRememberMe","isSignUp","setIsSignUp","request","response","promptAsync","Google","clientId","responseType","ResponseType","Token","scopes","redirectUri","checkStoredCredentials","handleGoogleSignInSuccess","authentication","accessToken","unsubscribe","onAuthStateChanged","storedEmail","storedPassword","handleLogin","signInWithEmailAndPassword","errorMessage","googleCredential","GoogleAuthProvider","credential","signInWithCredential","handleGoogleSignIn","logoContainer","logoSurface","Image","source","logoImage","appName","tagline","autoCapitalize","Icon","secureTextEntry","checkboxContainer","Checkbox","checkboxLabel","forgotPassword","forgotPasswordText","userCredential","createUserWithEmailAndPassword","sendEmailVerification","loginButton","dividerContainer","divider","dividerText","googleButton","signInAnonymously","guestButton","footerText","signupText","WebBrowser","maybeCompleteAuthSession","resizeMode","appTheme","MD3LightTheme","secondaryContainer","tertiary","tertiaryContainer","onPrimary","onSecondary","onSecondaryContainer","onTertiary","onTertiaryContainer","onError","onErrorContainer","onSurfaceDisabled","level0","level1","level2","level3","level4","level5","teamMembers","role","phone","avatar","TeamScreen","filteredTeamMembers","member","searchInput","renderTeamMember","assignedTasks","assignee","completedTasks","memberCard","uri","memberInfo","memberName","memberRole","taskStats","taskStat","taskStatNumber","taskStatLabel","membersList","useGroupStore","persist","groups","invitations","createGroup","userId","userEmail","newGroup","members","updateGroup","groupId","group","deleteGroup","addMember","removeMember","memberId","m","createInvitation","groupName","invitedBy","invitedEmail","newInvitation","updateInvitationStatus","invitationId","inv","AuthContext","groupsList","groupCard","groupHeader","groupTitleContainer","adminChip","groupDescription","stat","statNumber","memberAvatars","memberAvatar","invitationsContainer","invitationsList","paddingRight","invitationCard","invitationTitle","invitationActions","declineButton","emptyTitle","emptySubtitle","fab","GroupsScreen","useAuth","context","filteredGroups","pendingInvitations","handleSelectGroup","handleCreateGroup","handleInvitationResponse","accept","getState","closeMenu","renderInvitationItem","renderGroupItem","isAdmin","openMenu","FAB","QUICK_ACTIONS","CreateTaskScreen","useRoute","isFormVisible","setIsFormVisible","showTemplateSelector","setShowTemplateSelector","recentTemplates","setRecentTemplates","templateId","canGoBack","loadingOverlay","validatedTaskData","floatingActions","floatingButton","templateSelector","action","actionId","setHours","getHours","handleQuickAction","recentTemplate","recentTemplateName","templateList","templateItem","templateName","templateDesc","templateMeta","browseButton","absoluteFillObject","borderTopLeftRadius","borderTopRightRadius","EditTaskScreen","setTask","showSnackbar","setShowSnackbar","currentTask","loadTask","Snackbar","ProfileSkeleton","AnimatedView","avatarSkeleton","buttonSkeleton","form","inputSkeleton","textSkeleton","subheaderSkeleton","listItemSkeleton","createDefaultProfile","isEmailVerified","emailVerified","taskView","ProfileScreen","setProfile","setDisplayName","showSettingsDialog","setShowSettingsDialog","selectedSetting","setSelectedSetting","tempSettings","setTempSettings","loadProfile","currentUser","defaultProfile","has","preloadUserProfile","handleUpdateProfile","handleVerifyEmail","handlePickImage","ImagePicker","requestMediaLibraryPermissionsAsync","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","canceled","assets","openSettingsDialog","setting","handleSaveSettings","handleNotificationToggle","avatarSource","defaultAvatar","changePhotoButton","emailText","verifyButton","SegmentedButtons","buttons","centerContent","loadingText","retryButton","getRelativeTime","isThisWeek","isThisMonth","SORT_OPTIONS","CompletedScreen","paperTheme","usePaperTheme","sortAscending","setSortAscending","timeFilter","setTimeFilter","setSelectedTasks","showStats","setShowStats","showRestoreModal","setShowRestoreModal","filtered","completedDate","String","comparison","thisWeek","thisMonth","toggleTaskSelection","renderSortSection","sortContainer","sortButton","sortButtonText","opt","completedChip","taskMeta","listContent","filtersContainer","bottomBar","restoreButton","menuContent","modal","modalText","modalActions","updatePromises","sortDirectionButton","keyboardAvoidingView","formLabel","helperText","buttonContent","CreateGroupScreen","setName","nameError","setNameError","Appbar","Header","BackAction","outlineColor","activeOutlineColor","isValid","replace","skeleton","Skeleton","stopAnimation","TemplatesScreen","setTemplates","filterVisible","setFilterVisible","selectedPriority","setSelectedPriority","filterTags","setFilterTags","storeTemplates","formattedTemplates","s","loadData","processedTemplates","allTags","Set","flatMap","handleDuplicateTemplate","screenTitle","filterTitle","filterLabel","segmentedButtons","tagFilters","clearButton","templateCard","renderGridItem","templateDescription","templateStats","templateStat","lastUsed","cardActions","renderListItem","listCard","listItemHeader","gridColumnWrapper","heading","formGroup","minHeight","subtaskInputContainer","removeButton","TemplateForm","sourceTaskId","isEditing","saveTaskAsTemplate","setTaskDescription","setCategoryId","setDueTimeOffset","setNewSubtask","itemValue","dropdownIconColor","handleRemoveSubtask","CreateTemplateScreen","TemplateDetailScreen","setTemplate","loadTemplateDetails","foundTemplate","handleRetry","centeredContent","headerRow","tagsContent","metaRow","estimatedTime","taskBullet","taskText","editFab","handleEditTemplate","deleteFab","handleDeleteTemplate","PomodoroScreen","AddCommentScreen","setComment","ShareTaskScreen","FocusScreen","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","MainTabNavigator","Navigator","screenOptions","tabBarIcon","focused","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","MoreScreen","signOut","isAuthenticated","setIsAuthenticated","initialRouteName","headerShown","headerStyle","headerTintColor","headerTitleStyle","DatabaseContext","isDbReady","DatabaseProvider","setIsDbReady","initDb","customLightTheme","NavigationDefaultTheme","customDarkTheme","NavigationDarkTheme","AppContent","MD3DarkTheme","PaperProvider","NavigationContainer","StatusBar","AppNavigator","App","SafeAreaProvider","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}